var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/AddDocumentWrapper.html",[0,0.078,1,1.614]],["body/interfaces/AddDocumentWrapper.html",[0,0.037,1,0.771,2,0.196,3,0.146,4,0.146,5,0.105,6,0.331,7,0.435,8,0.331,9,2.131,10,1.46,11,1.46,12,2.069,13,0.912,14,1.123,15,0.896,16,1.065,17,1.436,18,0.582,19,0.562,20,2.983,21,0.839,22,1.218,23,0.412,24,0.053,25,0.646,26,1.251,27,1.087,28,0.892,29,0.601,30,1.308,31,0.224,32,1.46,33,1.46,34,1.065,35,1.065,36,0.774,37,1.434,38,0.196,39,0.506,40,0.601,41,0.506,42,0.601,43,0.896,44,1.065,45,1.985,46,0.601,47,0.601,48,1.735,49,0.601,50,1.671,51,0.601,52,0.601,53,0.601,54,0.506,55,0.896,56,0.347,57,1.434,58,1.985,59,1.065,60,0.601,61,0.397,62,0.601,63,0.912,64,0.17,65,0.601,66,2.106,67,2.018,68,1.094,69,1.207,70,1.936,71,0.601,72,0.435,73,0.435,74,0.435,75,0.435,76,0.435,77,0.435,78,0.435,79,0.601,80,0.35,81,0.601,82,1.46,83,1.848,84,3.286,85,2.018,86,0.506,87,4.363,88,0.601,89,0.601,90,1.089,91,0.601,92,0.601,93,0.601,94,0.506,95,0.601,96,1.207,97,1.065,98,1.735,99,0.601,100,0.506,101,0.601,102,1.038,103,2.668,104,2.018,105,0.601,106,0.452,107,0.771,108,0.601,109,2.195,110,1.065,111,0.601,112,0.506,113,1.434,114,1.038,115,1.737,116,1.931,117,0.601,118,1.985,119,0.647,120,0.601,121,0.601,122,3.84,123,0.601,124,2.531,125,1.434,126,0.601,127,0.601,128,0.601,129,1.065,130,1.065,131,1.065,132,1.207,133,1.065,134,1.247,135,3.171,136,3.399,137,0.601,138,0.601,139,1.985,140,0.601,141,1.671,142,0.601,143,0.601,144,0.601,145,2.376,146,1.589,147,0.601,148,0.601,149,0.601,150,0.601,151,0.601,152,0.601,153,0.601,154,1.065,155,1.065,156,0.601,157,1.735,158,0.601,159,1.065,160,1.735,161,1.985,162,1.434,163,0.506,164,1.065,165,1.065,166,2.668,167,1.848,168,1.735,169,0.896,170,1.065,171,1.065,172,1.065,173,0.896,174,3.075,175,0.601,176,1.985,177,0.601,178,2,179,1.434,180,0.601,181,0.601,182,0.601,183,3.075,184,0.601,185,0.601,186,0.601,187,0.601,188,0.601,189,0.601,190,0.601,191,0.601,192,1.065,193,0.601,194,0.601,195,2.788,196,1.434,197,0.601,198,0.601,199,0.601,200,0.601,201,0.601,202,2.589,203,0.896,204,0.506,205,0.506,206,0.896,207,0.601,208,0.601,209,0.601,210,1.719,211,1.065,212,1.065,213,1.038,214,0.601,215,0.601,216,1.985,217,0.601,218,0.601,219,2.894,220,0.435,221,1.735,222,1.671,223,1.065,224,0.601,225,0.601,226,0.601,227,0.601,228,1.065,229,2.989,230,1.735,231,1.985,232,1.065,233,0.601,234,0.601,235,3.537,236,0.601,237,0.601,238,1.065,239,1.065,240,1.848,241,0.896,242,1.065,243,0.601,244,0.601,245,0.601,246,1.065,247,0.601,248,0.601,249,0.601,250,1.065,251,1.985,252,1.985,253,0.601,254,1.434,255,1.46,256,1.065,257,1.065,258,0.601,259,2.436,260,1.382,261,2.436,262,0.601,263,0.601,264,0.601,265,0.601,266,3.251,267,1.434,268,1.434,269,0.601,270,0.601,271,0.601,272,0.601,273,0.601,274,0.601,275,0.601,276,1.065,277,0.601,278,0.601,279,1.985,280,2.195,281,0.601,282,0.601,283,0.601,284,1.065,285,0.896,286,0.771,287,2.095,288,1.735,289,0.601,290,0.601,291,1.46,292,2.861,293,1.065,294,2.589,295,0.601,296,1.065,297,1.46,298,0.601,299,1.065,300,0.601,301,0.601,302,0.601,303,0.601,304,1.065,305,0.601,306,0.601,307,0.601,308,1.434,309,1.735,310,0.601,311,1.434,312,1.065,313,0.601,314,0.506,315,1.207,316,0.601,317,0.601,318,1.065,319,0.601,320,0.601,321,0.601,322,0.601,323,0.601,324,1.065,325,0.601,326,0.601,327,1.256,328,0.601,329,1.065,330,0.601,331,0.601,332,0.601,333,0.601,334,2.195,335,0.601,336,0.601,337,0.601,338,0.601,339,0.601,340,0.601,341,0.601,342,0.601,343,1.735,344,0.506,345,0.896,346,0.601,347,0.601,348,0.601,349,1.065,350,1.434,351,1.434,352,0.601,353,0.601,354,0.601,355,0.601,356,0.601,357,0.601,358,0.601,359,1.065,360,1.065,361,2.989,362,2.376,363,1.985,364,0.601,365,2.978,366,1.735,367,1.065,368,1.065,369,1.065,370,1.065,371,0.601,372,0.601,373,0.601,374,0.601,375,0.506,376,0.601,377,1.065,378,1.985,379,2.531,380,1.065,381,2.376,382,2.894,383,1.985,384,1.985,385,1.065,386,1.065,387,1.735,388,0.601,389,1.065,390,0.601,391,1.671,392,0.601,393,1.985,394,1.46,395,1.671,396,0.601,397,0.896,398,1.065,399,0.601,400,1.735,401,1.735,402,1.735,403,1.434,404,1.065,405,1.065,406,1.735,407,1.434,408,1.434,409,0.601,410,0.601,411,0.601,412,0.601,413,1.065,414,0.601,415,0.601,416,0.601,417,1.735,418,0.601,419,1.735,420,0.601,421,0.601,422,0.601,423,0.896,424,0.601,425,1.065,426,0.601,427,0.601,428,0.601,429,1.065,430,0.601,431,0.771,432,0.601,433,1.671,434,1.735,435,0.601,436,0.601,437,1.065,438,1.065,439,0.601,440,0.601,441,0.601,442,0.601,443,1.434,444,0.601,445,0.601,446,0.601,447,0.601,448,0.601,449,0.601,450,0.601,451,1.065,452,1.065,453,1.434,454,0.601,455,1.065,456,0.601,457,0.601,458,1.065,459,0.601,460,0.896,461,0.601,462,1.065,463,0.601,464,0.601,465,0.506,466,0.601,467,0.601,468,0.601,469,1.065,470,0.771,471,1.065,472,1.065,473,0.601,474,1.985,475,0.601,476,1.065,477,3.222,478,1.434,479,0.601,480,0.601,481,1.065,482,1.065,483,0.896,484,1.735,485,1.735,486,0.601,487,1.065,488,0.601,489,0.601,490,0.601,491,1.065,492,1.735,493,1.434,494,0.601,495,1.065,496,0.601,497,0.601,498,1.434,499,0.601,500,1.065,501,0.601,502,0.601,503,0.601,504,0.601,505,0.601,506,1.065,507,0.601,508,0.601,509,0.601,510,0.601,511,0.601,512,0.601,513,0.601,514,0.601,515,0.601,516,0.601,517,0.601,518,1.065,519,0.601,520,1.434,521,1.434,522,0.601,523,0.601,524,0.506,525,0.601,526,0.601,527,0.601,528,0.601,529,0.601,530,0.601,531,0.601,532,0.601,533,0.601,534,0.601,535,3.449,536,0.601,537,1.735,538,1.065,539,0.771,540,0.601,541,2.195,542,0.601,543,0.601,544,0.506,545,0.601,546,0.601,547,0.601,548,0.601,549,0.601,550,0.601,551,0.601,552,0.601,553,0.601,554,0.601,555,1.434,556,1.065,557,1.065,558,0.601,559,0.601,560,2.376,561,0.885,562,2.668,563,0.601,564,0.601,565,1.735,566,0.896,567,0.601,568,0.601,569,0.435,570,0.506,571,0.601,572,0.397,573,0.601,574,0.601,575,0.506,576,0.601,577,0.601,578,1.065,579,0.601,580,0.601,581,0.601,582,1.434,583,1.434,584,0.601,585,0.601,586,1.065,587,0.601,588,1.735,589,1.735,590,0.601,591,1.434,592,1.434,593,1.434,594,1.434,595,1.065,596,1.065,597,0.601,598,0.506,599,1.434,600,1.735,601,1.065,602,0.601,603,0.601,604,0.601,605,0.601,606,0.601,607,0.601,608,1.065,609,0.601,610,1.065,611,0.601,612,0.601,613,0.896,614,0.601,615,0.506,616,0.601,617,0.601,618,0.601,619,0.601,620,0.601,621,0.601,622,0.601,623,0.601,624,0.601,625,0.601,626,0.601,627,0.601,628,0.601,629,0.601,630,0.601,631,0.601,632,0.601,633,0.601,634,0.601,635,0.601,636,0.601,637,0.601,638,0.601,639,0.601,640,0.601,641,0.601,642,1.065,643,1.065,644,0.601,645,1.434,646,0.601,647,0.601,648,0.601,649,0.601,650,1.735,651,1.434,652,1.434,653,1.434,654,0.601,655,0.601,656,0.601,657,0.601,658,0.601,659,0.601,660,0.601,661,0.601,662,0.601,663,0.601,664,0.601,665,0.506,666,0.601,667,0.601,668,0.601,669,1.065,670,0.601,671,1.735,672,1.065,673,1.065,674,0.601,675,0.601,676,0.601,677,1.985,678,0.601,679,0.601,680,0.601,681,0.601,682,0.601,683,0.601,684,0.601,685,1.735,686,0.601,687,0.601,688,0.601,689,0.601,690,0.601,691,0.601,692,0.601,693,0.435,694,0.506,695,0.601,696,0.601,697,0.601,698,0.601,699,0.601,700,0.506,701,0.601,702,0.601,703,0.601,704,0.601,705,0.601,706,1.434,707,1.434,708,0.601,709,0.435,710,0.601,711,0.601,712,0.601,713,0.007,714,0.012,715,0.007]],["title/modules/AngularfirestoreWrapperModule.html",[716,2.23,717,1.877]],["body/modules/AngularfirestoreWrapperModule.html",[3,0.819,4,0.819,5,0.585,6,1.851,8,1.851,24,0.052,28,1.171,38,1.094,54,2.828,55,2.828,80,0.819,106,1.428,713,0.038,714,0.044,715,0.038,717,3.589,718,2.828,719,4.166,720,4.851,721,4.166,722,4.851,723,4.851,724,4.166,725,4.166,726,4.166]],["title/interfaces/CurrentDocSubCollectionSplit.html",[0,0.078,102,1.614]],["body/interfaces/CurrentDocSubCollectionSplit.html",[0,0.037,1,0.437,2,0.197,3,0.147,4,0.147,5,0.105,6,0.333,7,0.437,8,0.333,9,2.137,10,1.212,11,0.901,12,1.94,13,0.906,14,1.029,15,0.508,16,0.604,17,1.26,18,0.583,19,0.564,20,2.955,22,1.19,23,0.457,24,0.053,25,0.567,26,1.229,27,1.075,28,0.894,29,0.604,30,1.309,31,0.225,32,1.466,33,1.466,34,1.07,35,1.07,36,0.776,37,1.44,38,0.197,39,0.508,40,0.604,41,0.508,42,0.604,43,0.901,44,1.07,45,1.992,46,0.604,47,0.604,48,1.741,49,0.604,50,1.677,51,0.604,52,0.604,53,0.604,54,0.508,55,0.901,56,0.348,57,1.44,58,1.992,59,1.07,60,0.604,61,0.399,62,0.604,63,0.948,64,0.171,65,0.604,66,2.109,67,2.023,68,1.097,69,1.212,70,1.94,71,0.604,72,0.437,73,0.437,74,0.437,75,0.437,76,0.437,77,0.437,78,0.437,79,0.604,80,0.351,81,0.604,82,1.466,83,1.854,84,3.292,85,2.023,86,0.508,87,4.365,88,0.604,89,0.604,90,1.091,91,0.604,92,0.604,93,0.604,94,0.508,95,0.604,96,1.212,97,1.07,98,1.741,99,0.604,100,0.508,101,1.07,102,1.26,103,2.996,104,2.23,105,0.604,106,0.455,107,0.774,108,0.604,109,2.203,110,1.07,111,0.604,112,0.508,113,1.44,114,1.042,115,1.74,116,1.936,117,0.604,118,1.992,119,0.649,120,0.604,121,0.604,122,3.844,123,0.604,124,2.539,125,1.44,126,0.604,127,0.604,128,0.604,129,1.07,130,1.07,131,1.07,132,1.212,133,1.07,134,1.249,135,3.173,136,3.405,137,0.604,138,0.604,139,1.992,140,0.604,141,1.677,142,0.604,143,0.604,144,0.604,145,2.383,146,1.594,147,0.604,148,0.604,149,0.604,150,0.604,151,0.604,152,0.604,153,0.604,154,1.07,155,1.07,156,0.604,157,1.741,158,0.604,159,1.07,160,1.741,161,1.992,162,1.44,163,0.508,164,1.07,165,1.07,166,2.675,167,1.854,168,1.741,169,0.901,170,1.07,171,1.07,172,1.07,173,0.901,174,3.081,175,0.604,176,1.992,177,0.604,178,2.006,179,1.44,180,0.604,181,0.604,182,0.604,183,3.081,184,0.604,185,0.604,186,0.604,187,0.604,188,0.604,189,0.604,190,0.604,191,0.604,192,1.07,193,0.604,194,0.604,195,2.794,196,1.44,197,0.604,198,0.604,199,0.604,200,0.604,201,0.604,202,2.593,203,0.901,204,0.508,205,0.508,206,0.901,207,0.604,208,0.604,209,0.604,210,1.725,211,1.07,212,1.07,213,1.042,214,0.604,215,0.604,216,1.992,217,0.604,218,0.604,219,2.901,220,0.437,221,1.741,222,1.677,223,1.07,224,0.604,225,0.604,226,0.604,227,0.604,228,1.07,229,2.996,230,1.741,231,1.992,232,1.07,233,0.604,234,0.604,235,3.543,236,0.604,237,0.604,238,1.07,239,1.07,240,1.854,241,0.901,242,1.07,243,0.604,244,0.604,245,0.604,246,1.07,247,0.604,248,0.604,249,0.604,250,1.07,251,1.992,252,1.992,253,0.604,254,1.44,255,1.466,256,1.07,257,1.07,258,0.604,259,2.442,260,1.387,261,2.442,262,0.604,263,0.604,264,0.604,265,0.604,266,3.255,267,1.44,268,1.44,269,0.604,270,0.604,271,0.604,272,0.604,273,0.604,274,0.604,275,0.604,276,1.07,277,0.604,278,0.604,279,1.992,280,2.203,281,0.604,282,0.604,283,0.604,284,1.07,285,0.901,286,0.774,287,2.1,288,1.741,289,0.604,290,0.604,291,1.466,292,2.866,293,1.07,294,2.594,295,0.604,296,1.07,297,1.466,298,0.604,299,1.07,300,0.604,301,0.604,302,0.604,303,0.604,304,1.07,305,0.604,306,0.604,307,0.604,308,1.44,309,1.741,310,0.604,311,1.44,312,1.07,313,0.604,314,0.508,315,1.212,316,0.604,317,0.604,318,1.07,319,0.604,320,0.604,321,0.604,322,0.604,323,0.604,324,1.07,325,0.604,326,0.604,327,1.26,328,0.604,329,1.07,330,0.604,331,0.604,332,0.604,333,0.604,334,2.203,335,0.604,336,0.604,337,0.604,338,0.604,339,0.604,340,0.604,341,0.604,342,0.604,343,1.741,344,0.508,345,0.901,346,0.604,347,0.604,348,0.604,349,1.07,350,1.44,351,1.44,352,0.604,353,0.604,354,0.604,355,0.604,356,0.604,357,0.604,358,0.604,359,1.07,360,1.07,361,2.996,362,2.383,363,1.992,364,0.604,365,2.983,366,1.741,367,1.07,368,1.07,369,1.07,370,1.07,371,0.604,372,0.604,373,0.604,374,0.604,375,0.508,376,0.604,377,1.07,378,1.992,379,2.539,380,1.07,381,2.383,382,2.901,383,1.992,384,1.992,385,1.07,386,1.07,387,1.741,388,0.604,389,1.07,390,0.604,391,1.677,392,0.604,393,1.992,394,1.466,395,1.677,396,0.604,397,0.901,398,1.07,399,0.604,400,1.741,401,1.741,402,1.741,403,1.44,404,1.07,405,1.07,406,1.741,407,1.44,408,1.44,409,0.604,410,0.604,411,0.604,412,0.604,413,1.07,414,0.604,415,0.604,416,0.604,417,1.741,418,0.604,419,1.741,420,0.604,421,0.604,422,0.604,423,0.901,424,0.604,425,1.07,426,0.604,427,0.604,428,0.604,429,1.07,430,0.604,431,0.774,432,0.604,433,1.677,434,1.741,435,0.604,436,0.604,437,1.07,438,1.07,439,0.604,440,0.604,441,0.604,442,0.604,443,1.44,444,0.604,445,0.604,446,0.604,447,0.604,448,0.604,449,0.604,450,0.604,451,1.07,452,1.07,453,1.44,454,0.604,455,1.07,456,0.604,457,0.604,458,1.07,459,0.604,460,0.901,461,0.604,462,1.07,463,0.604,464,0.604,465,0.508,466,0.604,467,0.604,468,0.604,469,1.07,470,0.774,471,1.07,472,1.07,473,0.604,474,1.992,475,0.604,476,1.07,477,3.228,478,1.44,479,0.604,480,0.604,481,1.07,482,1.07,483,0.901,484,1.741,485,1.741,486,0.604,487,1.07,488,0.604,489,0.604,490,0.604,491,1.07,492,1.741,493,1.44,494,0.604,495,1.07,496,0.604,497,0.604,498,1.44,499,0.604,500,1.07,501,0.604,502,0.604,503,0.604,504,0.604,505,0.604,506,1.07,507,0.604,508,0.604,509,0.604,510,0.604,511,0.604,512,0.604,513,0.604,514,0.604,515,0.604,516,0.604,517,0.604,518,1.07,519,0.604,520,1.44,521,1.44,522,0.604,523,0.604,524,0.508,525,0.604,526,0.604,527,0.604,528,0.604,529,0.604,530,0.604,531,0.604,532,0.604,533,0.604,534,0.604,535,3.454,536,0.604,537,1.741,538,1.07,539,0.774,540,0.604,541,2.203,542,0.604,543,0.604,544,0.508,545,0.604,546,0.604,547,0.604,548,0.604,549,0.604,550,0.604,551,0.604,552,0.604,553,0.604,554,0.604,555,1.44,556,1.07,557,1.07,558,0.604,559,0.604,560,2.383,561,0.888,562,2.675,563,0.604,564,0.604,565,1.741,566,0.901,567,0.604,568,0.604,569,0.437,570,0.508,571,0.604,572,0.399,573,0.604,574,0.604,575,0.508,576,0.604,577,0.604,578,1.07,579,0.604,580,0.604,581,0.604,582,1.44,583,1.44,584,0.604,585,0.604,586,1.07,587,0.604,588,1.741,589,1.741,590,0.604,591,1.44,592,1.44,593,1.44,594,1.44,595,1.07,596,1.07,597,0.604,598,0.508,599,1.44,600,1.741,601,1.07,602,0.604,603,0.604,604,0.604,605,0.604,606,0.604,607,0.604,608,1.07,609,0.604,610,1.07,611,0.604,612,0.604,613,0.901,614,0.604,615,0.508,616,0.604,617,0.604,618,0.604,619,0.604,620,0.604,621,0.604,622,0.604,623,0.604,624,0.604,625,0.604,626,0.604,627,0.604,628,0.604,629,0.604,630,0.604,631,0.604,632,0.604,633,0.604,634,0.604,635,0.604,636,0.604,637,0.604,638,0.604,639,0.604,640,0.604,641,0.604,642,1.07,643,1.07,644,0.604,645,1.44,646,0.604,647,0.604,648,0.604,649,0.604,650,1.741,651,1.44,652,1.44,653,1.44,654,0.604,655,0.604,656,0.604,657,0.604,658,0.604,659,0.604,660,0.604,661,0.604,662,0.604,663,0.604,664,0.604,665,0.508,666,0.604,667,0.604,668,0.604,669,1.07,670,0.604,671,1.741,672,1.07,673,1.07,674,0.604,675,0.604,676,0.604,677,1.992,678,0.604,679,0.604,680,0.604,681,0.604,682,0.604,683,0.604,684,0.604,685,1.741,686,0.604,687,0.604,688,0.604,689,0.604,690,0.604,691,0.604,692,0.604,693,0.437,694,0.508,695,0.604,696,0.604,697,0.604,698,0.604,699,0.604,700,0.508,701,0.604,702,0.604,703,0.604,704,0.604,705,0.604,706,1.44,707,1.44,708,0.604,709,0.437,710,0.604,711,0.604,712,0.604,713,0.007,714,0.012,715,0.007,727,1.326]],["title/interfaces/DbItemFull.html",[0,0.078,728,0.831]],["body/interfaces/DbItemFull.html",[0,0.15,2,0.941,3,0.704,4,0.704,5,0.503,13,0.704,14,1.356,18,0.675,19,1.011,22,0.941,23,0.805,24,0.052,25,0.941,26,1.164,27,1.269,28,1.147,30,1.263,31,1.076,36,1.164,38,0.941,56,0.941,61,1.332,63,1.178,64,0.817,80,1.048,90,0.941,119,1.076,134,1.552,561,1.332,572,1.076,713,0.033,714,0.04,715,0.033,728,1.446,729,1.227,730,2.102,731,1.77,732,2.015,733,2.053,734,1.397,735,1.397,736,1.397,737,1.227,738,1.332,739,1.227,740,1.397,741,1.397,742,1.076,743,1.332,744,1.397,745,1.076,746,1.397,747,1.397,748,1.518,749,1.728,750,1.397]],["title/interfaces/DbItemFullWithIndex.html",[0,0.078,64,0.631]],["body/interfaces/DbItemFullWithIndex.html",[0,0.15,2,0.962,3,0.72,4,0.72,5,0.514,13,0.72,14,1.18,18,0.742,19,1.025,22,0.962,23,0.613,24,0.052,25,0.962,26,1.18,27,1.252,28,1.156,30,1.276,31,1.101,36,1.18,38,0.962,56,0.962,61,1.35,63,1.156,64,1.025,80,1.053,90,0.962,119,1.101,134,1.35,561,1.522,572,1.101,713,0.033,714,0.041,715,0.033,728,1.46,729,1.255,730,2.111,731,1.539,732,1.895,733,1.976,734,1.429,735,1.429,736,1.429,737,1.255,738,1.35,739,1.255,740,1.429,741,1.429,742,1.101,743,1.35,744,1.429,745,1.101,746,1.429,747,1.429,748,1.539,749,1.752,750,1.429]],["title/interfaces/DbItemWithIndex.html",[0,0.078,742,0.831]],["body/interfaces/DbItemWithIndex.html",[0,0.15,2,0.962,3,0.72,4,0.72,5,0.514,13,0.72,14,1.18,18,0.742,19,1.025,22,0.962,23,0.613,24,0.052,25,0.962,26,1.18,27,1.252,28,1.156,30,1.276,31,1.101,36,1.18,38,0.962,56,0.962,61,1.35,63,1.186,64,0.836,80,1.053,90,0.962,119,1.101,134,1.35,561,1.522,572,1.101,713,0.033,714,0.041,715,0.033,728,1.35,729,1.255,730,2.111,731,1.539,732,1.895,733,1.976,734,1.429,735,1.429,736,1.429,737,1.255,738,1.35,739,1.255,740,1.429,741,1.429,742,1.35,743,1.35,744,1.429,745,1.101,746,1.429,747,1.429,748,1.539,749,1.752,750,1.429]],["title/interfaces/FirebaseDbItem.html",[0,0.078,738,0.831]],["body/interfaces/FirebaseDbItem.html",[0,0.149,2,0.928,3,0.695,4,0.695,5,0.496,13,0.695,14,1.351,18,0.671,19,1.002,21,2.097,22,1.314,23,0.837,24,0.052,25,0.928,26,1.314,27,1.267,28,1.141,30,1.256,31,1.062,36,1.314,38,0.928,56,0.928,61,1.437,63,1.141,64,0.806,80,1.045,90,1.314,119,1.062,134,1.546,561,1.321,572,1.062,713,0.032,714,0.04,715,0.032,728,1.321,729,1.211,730,2.097,731,1.506,732,1.865,733,1.951,734,1.379,735,1.379,736,1.379,737,1.211,738,1.437,739,1.211,740,1.379,741,1.379,742,1.062,743,1.321,744,1.379,745,1.062,746,1.379,747,1.379,748,1.506,749,1.714,750,1.379]],["title/interfaces/FirestoreItem.html",[0,0.078,63,0.631]],["body/interfaces/FirestoreItem.html",[0,0.15,2,0.939,3,0.703,4,0.703,5,0.502,13,0.703,14,1.163,18,0.675,19,1.01,21,1.96,22,0.939,23,0.741,24,0.052,25,0.939,26,1.163,27,1.247,28,1.146,30,1.263,31,1.075,36,1.163,38,0.939,56,0.939,61,1.331,63,1.178,64,0.816,80,1.048,90,0.939,119,1.075,134,1.331,561,1.331,572,1.075,713,0.033,714,0.04,715,0.033,728,1.331,729,1.226,730,2.101,731,1.769,732,2.08,733,2.101,734,1.396,735,1.396,736,1.396,737,1.226,738,1.445,739,1.722,740,1.396,741,1.396,742,1.075,743,1.331,744,1.396,745,1.075,746,1.396,747,1.396,748,1.517,749,1.727,750,1.396]],["title/interfaces/ImageItem.html",[0,0.078,745,0.831]],["body/interfaces/ImageItem.html",[0,0.149,2,0.907,3,0.679,4,0.679,5,0.485,13,0.679,14,1.138,18,0.664,19,0.988,21,2.034,22,0.907,23,0.886,24,0.052,25,0.907,26,1.138,27,1.281,28,1.132,30,1.39,31,1.038,36,1.138,38,0.907,56,0.907,61,1.302,63,1.132,64,0.788,80,1.04,90,0.907,119,1.038,134,1.302,561,1.302,572,1.038,713,0.032,714,0.04,715,0.032,728,1.302,729,1.184,730,2.087,731,1.484,732,1.846,733,1.936,734,1.348,735,1.348,736,1.348,737,1.184,738,1.302,739,1.184,740,1.348,741,1.348,742,1.038,743,1.422,744,1.348,745,1.302,746,1.936,747,1.936,748,1.834,749,2.087,750,1.936]],["title/interfaces/StorageItem.html",[0,0.078,743,0.831]],["body/interfaces/StorageItem.html",[0,0.15,2,0.962,3,0.72,4,0.72,5,0.514,13,0.72,14,1.18,18,0.682,19,1.025,22,0.962,23,0.613,24,0.052,25,0.962,26,1.18,27,1.263,28,1.156,30,1.276,31,1.101,36,1.18,38,0.962,56,0.962,61,1.35,63,1.186,64,0.836,80,1.053,90,0.962,119,1.101,134,1.35,561,1.35,572,1.101,713,0.033,714,0.041,715,0.033,728,1.35,729,1.255,730,2.111,731,1.539,732,1.895,733,1.976,734,1.429,735,1.429,736,1.429,737,1.255,738,1.35,739,1.255,740,1.429,741,1.429,742,1.101,743,1.46,744,1.976,745,1.101,746,1.429,747,1.429,748,1.539,749,1.752,750,1.429]],["title/classes/SubCollectionQuery.html",[66,1.404,106,0.948]],["body/classes/SubCollectionQuery.html",[3,0.708,4,0.708,5,0.505,8,1.599,9,3.017,12,2.674,13,0.874,15,3.017,17,3.019,18,0.505,19,1.014,21,2.055,23,0.843,24,0.052,27,1.149,28,0.821,41,2.444,66,2.447,67,2.814,68,2.431,69,3.017,80,0.708,104,2.101,106,1.233,115,2.372,135,2.594,202,2.594,206,3.576,210,2.814,213,2.594,220,2.814,285,3.273,287,2.814,713,0.033,714,0.041,715,0.033,751,2.444,752,3.511,753,2.902,754,4.06,755,3.599,756,3.583,757,3.599,758,3.583,759,3.599,760,4.444,761,4.444,762,5.034,763,4.444,764,3.599]],["title/classes/SubCollectionWriter.html",[70,1.404,106,0.948]],["body/classes/SubCollectionWriter.html",[3,0.463,4,0.463,5,0.331,8,1.047,10,1.599,11,1.599,12,2.601,13,0.463,17,1.375,18,0.331,19,0.765,20,3.146,21,1.821,23,0.711,24,0.052,27,0.97,67,2.991,68,2.395,70,2.28,80,0.463,85,2.802,104,1.375,106,0.807,114,2.277,115,2.386,116,2.802,132,2.649,135,1.956,163,2.275,167,2.649,178,3.168,202,1.375,203,2.275,204,1.599,205,3.049,210,2.915,213,2.724,220,1.956,240,3.049,241,1.599,259,1.599,260,1.196,261,2.275,266,3.26,286,1.956,287,3.046,291,2.275,292,2.275,294,1.599,297,2.275,314,2.275,315,3.26,327,2.481,365,3.332,375,1.599,391,2.649,394,2.885,395,2.275,397,3.332,423,1.599,431,2.802,433,1.599,460,2.885,470,1.956,483,2.275,539,1.956,544,1.599,566,2.275,575,2.649,598,2.275,615,1.599,665,1.599,694,1.599,700,1.599,709,1.956,713,0.022,714,0.031,715,0.022,748,1.456,751,2.275,752,3.049,754,3.427,756,3.146,758,2.703,765,1.9,766,2.355,767,2.355,768,2.355,769,2.355,770,3.901,771,2.355,772,2.355,773,3.901,774,3.351,775,2.355,776,2.355,777,4.49,778,1.9,779,2.355,780,2.355,781,2.355,782,4.25,783,2.355,784,2.355,785,3.351,786,3.901,787,5.064,788,3.351,789,2.355,790,2.355,791,3.351,792,2.355,793,2.355,794,2.355,795,3.351,796,2.355,797,3.351,798,3.351,799,2.355,800,4.667,801,3.901,802,3.351,803,3.351,804,2.355,805,3.351,806,2.355,807,3.901,808,2.355,809,2.355,810,2.355,811,2.355,812,2.355,813,2.355,814,2.355,815,2.355,816,2.355,817,2.355,818,3.351,819,4.25,820,2.355,821,2.355,822,2.355,823,1.9,824,2.355,825,2.355,826,2.355,827,2.355,828,3.901,829,2.355,830,3.901,831,2.355,832,2.355,833,3.901,834,3.351,835,2.355,836,2.355,837,2.355,838,2.355,839,3.351,840,2.355,841,2.355,842,3.146,843,2.355,844,3.351,845,3.351,846,2.355,847,2.355,848,2.355,849,2.355,850,3.351,851,2.355,852,2.355,853,3.351,854,2.355,855,3.901,856,2.355,857,2.355,858,2.355,859,2.355,860,2.355,861,2.355,862,3.351,863,2.355,864,3.351,865,2.355,866,2.355,867,2.355,868,2.355,869,2.355,870,2.355,871,1.9,872,2.355,873,2.355,874,2.355,875,2.355,876,2.355,877,2.355,878,2.355,879,2.355,880,2.355,881,2.355,882,2.355,883,2.355,884,2.355,885,2.355,886,2.355,887,2.355,888,2.355,889,3.901,890,2.355,891,4.25,892,3.351,893,3.351,894,3.351,895,4.25,896,3.351,897,2.355,898,2.275,899,3.351,900,3.351,901,3.351,902,2.355,903,3.351,904,2.355]],["title/coverage.html",[905,3.021]],["body/coverage.html",[0,0.152,1,2.083,5,0.501,6,2.461,7,2.803,23,0.597,24,0.052,63,0.814,64,0.814,66,1.811,68,1.964,70,1.811,72,2.083,73,2.083,74,2.083,75,2.083,76,2.083,77,2.083,78,2.083,102,2.083,106,1.646,107,2.083,146,2.083,255,3.655,713,0.033,714,0.04,715,0.033,728,1.073,729,1.826,738,1.073,742,1.073,743,1.073,745,1.073,752,3.001,753,2.878,765,2.878,905,2.878,906,2.878,907,3.568,908,3.568,909,4.406,910,5.463,911,2.878,912,5.518,913,5.428,914,3.568,915,2.878,916,2.878,917,4.42,918,3.568,919,3.568,920,3.568,921,3.568,922,4.802,923,3.568,924,3.568,925,3.568,926,4.42,927,3.568,928,3.568]],["title/dependencies.html",[929,2.322,930,2.675]],["body/dependencies.html",[24,0.05,56,1.136,713,0.04,714,0.045,715,0.04,930,3.999,931,4.327,932,4.327,933,4.327,934,4.327,935,4.327,936,4.327,937,4.327,938,4.327]],["title/miscellaneous/enumerations.html",[939,1.356,940,2.675]],["body/miscellaneous/enumerations.html",[6,1.928,7,2.899,18,0.609,24,0.045,43,2.946,82,3.372,86,2.946,94,2.946,100,2.946,713,0.04,714,0.045,715,0.04,939,2.533,940,3.5,941,3.5]],["title/miscellaneous/functions.html",[939,1.356,942,2.675]],["body/miscellaneous/functions.html",[6,1.526,8,1.526,12,2.513,13,0.848,14,1.426,18,0.482,20,2.978,21,2.119,22,0.902,23,0.722,24,0.051,26,1.34,30,0.902,36,1.133,39,2.331,50,3.204,68,2.097,72,2.519,73,2.519,74,2.519,75,2.519,76,2.519,77,2.519,78,2.519,83,3.743,85,2.89,90,0.902,96,2.331,115,2.413,116,2.519,141,2.331,173,2.331,222,2.331,260,2.396,327,2.004,344,2.331,345,2.331,431,2.004,470,2.004,693,2.004,709,2.004,713,0.031,714,0.039,715,0.031,731,1.177,739,1.177,823,2.769,898,2.331,909,4.405,911,3.48,915,3.48,916,3.48,939,2.004,941,4.38,942,2.769,943,3.434,944,4.719,945,5.431,946,3.434,947,3.434,948,3.434,949,3.434,950,3.434,951,3.434,952,3.434,953,3.434,954,3.434,955,3.434,956,3.434,957,3.434]],["title/index.html",[18,0.326,958,1.873,959,1.873]],["body/index.html",[5,0.539,24,0.042,25,1.009,33,3.632,107,2.242,112,3.368,114,2.242,115,1.707,146,2.242,260,1.95,539,3.158,569,2.699,613,3.495,693,2.242,713,0.035,714,0.042,715,0.035,737,1.316,778,3.098,898,2.608,960,4.624,961,3.841,962,4.96,963,3.841,964,3.841,965,3.841,966,3.841,967,5.35,968,4.96,969,4.96,970,5.267,971,3.841,972,3.841,973,3.841,974,3.841,975,3.841,976,5.267,977,3.841,978,4.624,979,3.841,980,3.841,981,3.841,982,4.624,983,3.841,984,3.841,985,3.841,986,3.841,987,3.098,988,3.841,989,4.624,990,4.624,991,3.841,992,3.841,993,3.841,994,3.841,995,3.841,996,4.96,997,3.098,998,2.608,999,3.841,1000,3.841]],["title/license.html",[958,1.873,959,1.873,1001,1.873]],["body/license.html",[24,0.042,32,2.636,169,3.159,465,2.636,524,2.636,569,2.716,570,3.159,713,0.035,714,0.042,715,0.035,842,4.018,871,3.131,906,3.131,987,3.131,997,3.131,1001,3.131,1002,3.882,1003,4.983,1004,3.882,1005,3.882,1006,3.882,1007,4.653,1008,3.882,1009,3.882,1010,3.882,1011,3.882,1012,3.882,1013,3.882,1014,5.503,1015,3.882,1016,3.882,1017,3.882,1018,3.882,1019,4.653,1020,3.882,1021,3.882,1022,3.882,1023,3.882,1024,3.882,1025,3.882,1026,3.882,1027,3.882,1028,3.882,1029,3.882,1030,3.882,1031,3.882,1032,3.882,1033,4.653,1034,4.653,1035,3.882,1036,3.882,1037,3.882,1038,3.882,1039,3.882,1040,3.882,1041,3.882,1042,3.882,1043,3.882,1044,3.882,1045,3.882,1046,3.882,1047,3.882,1048,3.882,1049,3.882,1050,3.882,1051,3.882,1052,3.882,1053,3.882,1054,3.882,1055,3.882,1056,3.882,1057,3.882,1058,3.882,1059,3.882,1060,3.882,1061,3.882,1062,3.882]],["title/modules.html",[718,2.543]],["body/modules.html",[24,0.046,713,0.04,714,0.046,715,0.04,717,2.982,718,2.982,1063,4.392,1064,4.392,1065,4.392]],["title/overview.html",[998,2.543]],["body/overview.html",[2,1.15,24,0.046,286,2.556,713,0.04,714,0.046,715,0.04,716,3.531,751,2.973,998,2.973,1066,4.379,1067,4.379]]],"invertedIndex":[["",{"_index":24,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"modules/AngularfirestoreWrapperModule.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{},"interfaces/DbItemFull.html":{},"interfaces/DbItemFullWithIndex.html":{},"interfaces/DbItemWithIndex.html":{},"interfaces/FirebaseDbItem.html":{},"interfaces/FirestoreItem.html":{},"interfaces/ImageItem.html":{},"interfaces/StorageItem.html":{},"classes/SubCollectionQuery.html":{},"classes/SubCollectionWriter.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{}}}],["0",{"_index":255,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{},"coverage.html":{}}}],["0/1",{"_index":914,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":922,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":924,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":921,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":923,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":925,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":286,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{},"classes/SubCollectionWriter.html":{},"overview.html":{}}}],["1/1",{"_index":913,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":920,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":912,"title":{},"body":{"coverage.html":{}}}],["1000",{"_index":351,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["11",{"_index":935,"title":{},"body":{"dependencies.html":{}}}],["11.1.2",{"_index":964,"title":{},"body":{"index.html":{}}}],["12",{"_index":793,"title":{},"body":{"classes/SubCollectionWriter.html":{}}}],["12/36",{"_index":918,"title":{},"body":{"coverage.html":{}}}],["12345",{"_index":790,"title":{},"body":{"classes/SubCollectionWriter.html":{}}}],["18.00",{"_index":763,"title":{},"body":{"classes/SubCollectionQuery.html":{}}}],["2.0.0",{"_index":932,"title":{},"body":{"dependencies.html":{}}}],["2016",{"_index":1005,"title":{},"body":{"license.html":{}}}],["3",{"_index":1066,"title":{},"body":{"overview.html":{}}}],["33",{"_index":917,"title":{},"body":{"coverage.html":{}}}],["4",{"_index":876,"title":{},"body":{"classes/SubCollectionWriter.html":{}}}],["4/4",{"_index":919,"title":{},"body":{"coverage.html":{}}}],["5",{"_index":802,"title":{},"body":{"classes/SubCollectionWriter.html":{}}}],["5/5",{"_index":926,"title":{},"body":{"coverage.html":{}}}],["5x",{"_index":880,"title":{},"body":{"classes/SubCollectionWriter.html":{}}}],["6.x",{"_index":937,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":806,"title":{},"body":{"classes/SubCollectionWriter.html":{}}}],["8.6.1",{"_index":938,"title":{},"body":{"dependencies.html":{}}}],["9",{"_index":1067,"title":{},"body":{"overview.html":{}}}],["_docfs",{"_index":160,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["a.payload.doc.data",{"_index":189,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["a.payload.doc.id",{"_index":190,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["a.payload.doc.ref",{"_index":191,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["ability",{"_index":766,"title":{},"body":{"classes/SubCollectionWriter.html":{}}}],["above",{"_index":871,"title":{},"body":{"classes/SubCollectionWriter.html":{},"license.html":{}}}],["action",{"_index":32,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{},"license.html":{}}}],["action.payload",{"_index":153,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["action.payload.data",{"_index":151,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["action.payload.exists",{"_index":139,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["action.payload.id",{"_index":156,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["action.payload.ref",{"_index":158,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["actionifnotexist",{"_index":124,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["actionifnotexist).pipe",{"_index":227,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["actions.filter(a",{"_index":185,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["actions.map(a",{"_index":188,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["add",{"_index":260,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{},"classes/SubCollectionWriter.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["add$(data",{"_index":342,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["add').pipe",{"_index":360,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["add/delete",{"_index":813,"title":{},"body":{"classes/SubCollectionWriter.html":{}}}],["addcreatedby",{"_index":911,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["addcreatedby(data",{"_index":943,"title":{},"body":{"miscellaneous/functions.html":{}}}],["addcreateddate",{"_index":77,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["addcreateddate(data",{"_index":344,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{},"miscellaneous/functions.html":{}}}],["adddeep",{"_index":451,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["adddeep$(data",{"_index":364,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["adddocumentwrapper",{"_index":1,"title":{"interfaces/AddDocumentWrapper.html":{}},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{},"coverage.html":{}}}],["added",{"_index":25,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{},"interfaces/DbItemFull.html":{},"interfaces/DbItemFullWithIndex.html":{},"interfaces/DbItemWithIndex.html":{},"interfaces/FirebaseDbItem.html":{},"interfaces/FirestoreItem.html":{},"interfaces/ImageItem.html":{},"interfaces/StorageItem.html":{},"index.html":{}}}],["addextras",{"_index":177,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["adding",{"_index":11,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{},"classes/SubCollectionWriter.html":{}}}],["additionaldataupdateonmoveditem",{"_index":594,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["addmodifieddate",{"_index":78,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["addmodifieddate(data",{"_index":345,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{},"miscellaneous/functions.html":{}}}],["address",{"_index":788,"title":{},"body":{"classes/SubCollectionWriter.html":{}}}],["adds",{"_index":133,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["addtobasecollection$(data",{"_index":338,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["advantage",{"_index":859,"title":{},"body":{"classes/SubCollectionWriter.html":{}}}],["afdocref",{"_index":164,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["aim",{"_index":779,"title":{},"body":{"classes/SubCollectionWriter.html":{}}}],["allow",{"_index":491,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["allows",{"_index":782,"title":{},"body":{"classes/SubCollectionWriter.html":{}}}],["already",{"_index":438,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["alt",{"_index":750,"title":{},"body":{"interfaces/DbItemFull.html":{},"interfaces/DbItemFullWithIndex.html":{},"interfaces/DbItemWithIndex.html":{},"interfaces/FirebaseDbItem.html":{},"interfaces/FirestoreItem.html":{},"interfaces/ImageItem.html":{},"interfaces/StorageItem.html":{}}}],["alter",{"_index":814,"title":{},"body":{"classes/SubCollectionWriter.html":{}}}],["always",{"_index":396,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["and/or",{"_index":1025,"title":{},"body":{"license.html":{}}}],["angular",{"_index":112,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{},"index.html":{}}}],["angular.json",{"_index":975,"title":{},"body":{"index.html":{}}}],["angular/cdk",{"_index":934,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/drag",{"_index":54,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"modules/AngularfirestoreWrapperModule.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["angular/core",{"_index":721,"title":{},"body":{"modules/AngularfirestoreWrapperModule.html":{}}}],["angular/fire",{"_index":936,"title":{},"body":{"dependencies.html":{}}}],["angular/fire/firestore",{"_index":38,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"modules/AngularfirestoreWrapperModule.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{},"interfaces/DbItemFull.html":{},"interfaces/DbItemFullWithIndex.html":{},"interfaces/DbItemWithIndex.html":{},"interfaces/FirebaseDbItem.html":{},"interfaces/FirestoreItem.html":{},"interfaces/ImageItem.html":{},"interfaces/StorageItem.html":{}}}],["angular/fire/firestore/collection/collection",{"_index":51,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["angular/fire/firestore/interfaces",{"_index":41,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{},"classes/SubCollectionQuery.html":{}}}],["angularfirestore",{"_index":33,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{},"index.html":{}}}],["angularfirestorecollection",{"_index":50,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{},"miscellaneous/functions.html":{}}}],["angularfirestoredocument",{"_index":26,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{},"interfaces/DbItemFull.html":{},"interfaces/DbItemFullWithIndex.html":{},"interfaces/DbItemWithIndex.html":{},"interfaces/FirebaseDbItem.html":{},"interfaces/FirestoreItem.html":{},"interfaces/ImageItem.html":{},"interfaces/StorageItem.html":{},"miscellaneous/functions.html":{}}}],["angularfirestoremodule",{"_index":722,"title":{},"body":{"modules/AngularfirestoreWrapperModule.html":{}}}],["angularfirestorewrapper",{"_index":107,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{},"coverage.html":{},"index.html":{}}}],["angularfirestorewrappermodule",{"_index":717,"title":{"modules/AngularfirestoreWrapperModule.html":{}},"body":{"modules/AngularfirestoreWrapperModule.html":{},"modules.html":{}}}],["another",{"_index":598,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{},"classes/SubCollectionWriter.html":{}}}],["anything",{"_index":581,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["application",{"_index":868,"title":{},"body":{"classes/SubCollectionWriter.html":{}}}],["arising",{"_index":1060,"title":{},"body":{"license.html":{}}}],["array",{"_index":266,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{},"classes/SubCollectionWriter.html":{}}}],["array).push(value[0",{"_index":445,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["array.foreach((item",{"_index":621,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["array.isarray(dbitem[col.name",{"_index":481,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["array.isarray(groupeddata[key",{"_index":442,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["array.isarray(subcollectionvalue",{"_index":399,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["array.length",{"_index":564,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["arrays",{"_index":808,"title":{},"body":{"classes/SubCollectionWriter.html":{}}}],["artifacts",{"_index":977,"title":{},"body":{"index.html":{}}}],["associated",{"_index":1015,"title":{},"body":{"license.html":{}}}],["asyncronously",{"_index":872,"title":{},"body":{"classes/SubCollectionWriter.html":{}}}],["attribute",{"_index":179,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["attributes",{"_index":532,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["attrs",{"_index":740,"title":{},"body":{"interfaces/DbItemFull.html":{},"interfaces/DbItemFullWithIndex.html":{},"interfaces/DbItemWithIndex.html":{},"interfaces/FirebaseDbItem.html":{},"interfaces/FirestoreItem.html":{},"interfaces/ImageItem.html":{},"interfaces/StorageItem.html":{}}}],["authors",{"_index":1050,"title":{},"body":{"license.html":{}}}],["automatically",{"_index":854,"title":{},"body":{"classes/SubCollectionWriter.html":{}}}],["available",{"_index":1064,"title":{},"body":{"modules.html":{}}}],["average",{"_index":844,"title":{},"body":{"classes/SubCollectionWriter.html":{}}}],["back",{"_index":899,"title":{},"body":{"classes/SubCollectionWriter.html":{}}}],["balance",{"_index":772,"title":{},"body":{"classes/SubCollectionWriter.html":{}}}],["basically",{"_index":619,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["batch",{"_index":535,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["batch.delete(doc.ref",{"_index":629,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["batch.update(doc.ref",{"_index":553,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["batch.update(docfs.ref",{"_index":542,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["batch.update(movedpartref",{"_index":607,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["batch.update(ref",{"_index":589,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["batchcommit",{"_index":703,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["batchcommit(batch",{"_index":701,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["becomes",{"_index":771,"title":{},"body":{"classes/SubCollectionWriter.html":{}}}],["before",{"_index":822,"title":{},"body":{"classes/SubCollectionWriter.html":{}}}],["better",{"_index":423,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{},"classes/SubCollectionWriter.html":{}}}],["between",{"_index":773,"title":{},"body":{"classes/SubCollectionWriter.html":{}}}],["big",{"_index":865,"title":{},"body":{"classes/SubCollectionWriter.html":{}}}],["book",{"_index":761,"title":{},"body":{"classes/SubCollectionQuery.html":{}}}],["boolean",{"_index":163,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{},"classes/SubCollectionWriter.html":{}}}],["browse",{"_index":1065,"title":{},"body":{"modules.html":{}}}],["build",{"_index":976,"title":{},"body":{"index.html":{}}}],["building",{"_index":981,"title":{},"body":{"index.html":{}}}],["c",{"_index":1004,"title":{},"body":{"license.html":{}}}],["calculate",{"_index":847,"title":{},"body":{"classes/SubCollectionWriter.html":{}}}],["call",{"_index":221,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["called",{"_index":180,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["care",{"_index":289,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["careful",{"_index":522,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["case",{"_index":459,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["cast",{"_index":197,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["catcherror",{"_index":42,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["catcherror((err",{"_index":650,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["catcherror(err",{"_index":228,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["cd",{"_index":984,"title":{},"body":{"index.html":{}}}],["change",{"_index":492,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["changedocname",{"_index":515,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["changedocname$(docfs",{"_index":497,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["changes",{"_index":131,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["changing",{"_index":851,"title":{},"body":{"classes/SubCollectionWriter.html":{}}}],["charge",{"_index":1011,"title":{},"body":{"license.html":{}}}],["check",{"_index":693,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["checking",{"_index":526,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["choose",{"_index":861,"title":{},"body":{"classes/SubCollectionWriter.html":{}}}],["city",{"_index":791,"title":{},"body":{"classes/SubCollectionWriter.html":{}}}],["claim",{"_index":1053,"title":{},"body":{"license.html":{}}}],["class",{"_index":106,"title":{"classes/SubCollectionQuery.html":{},"classes/SubCollectionWriter.html":{}},"body":{"interfaces/AddDocumentWrapper.html":{},"modules/AngularfirestoreWrapperModule.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{},"classes/SubCollectionQuery.html":{},"classes/SubCollectionWriter.html":{},"coverage.html":{}}}],["classes",{"_index":751,"title":{},"body":{"classes/SubCollectionQuery.html":{},"classes/SubCollectionWriter.html":{},"overview.html":{}}}],["cleanextrasfromdata(data",{"_index":461,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["cli",{"_index":962,"title":{},"body":{"index.html":{}}}],["clicks",{"_index":824,"title":{},"body":{"classes/SubCollectionWriter.html":{}}}],["clone",{"_index":464,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["clonedeep(data",{"_index":463,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["code",{"_index":965,"title":{},"body":{"index.html":{}}}],["col.subcollectionqueries",{"_index":685,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["col.subcollectionwriters",{"_index":485,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["collection",{"_index":68,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{},"classes/SubCollectionQuery.html":{},"classes/SubCollectionWriter.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["collectiondata",{"_index":616,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["collectionfs",{"_index":195,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["collectionfs.ref.path",{"_index":358,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["collectionkey",{"_index":311,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["collectionlistener",{"_index":248,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["collectionlisteners.push(collectionlistener",{"_index":300,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["collectionreference",{"_index":39,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{},"miscellaneous/functions.html":{}}}],["collections",{"_index":210,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{},"classes/SubCollectionQuery.html":{},"classes/SubCollectionWriter.html":{}}}],["collectionwithnames",{"_index":208,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["combined",{"_index":302,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["combinelatest",{"_index":29,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["combinelatest(collectionlisteners).pipe",{"_index":303,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["combinelatest(maindoclists$).pipe",{"_index":641,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["combinelatest(nextlevelobs).pipe",{"_index":337,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["combinelatest(subwriters).pipe",{"_index":414,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["comes",{"_index":811,"title":{},"body":{"classes/SubCollectionWriter.html":{}}}],["command",{"_index":999,"title":{},"body":{"index.html":{}}}],["compare",{"_index":874,"title":{},"body":{"classes/SubCollectionWriter.html":{}}}],["complex",{"_index":783,"title":{},"body":{"classes/SubCollectionWriter.html":{}}}],["compodoc",{"_index":1006,"title":{},"body":{"license.html":{}}}],["component",{"_index":969,"title":{},"body":{"index.html":{}}}],["compromise",{"_index":884,"title":{},"body":{"classes/SubCollectionWriter.html":{}}}],["conditions",{"_index":1032,"title":{},"body":{"license.html":{}}}],["connection",{"_index":1061,"title":{},"body":{"license.html":{}}}],["console",{"_index":472,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["console.error(name",{"_index":710,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["console.log('deletedeep",{"_index":655,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["console.log('deletedeepbyitem",{"_index":661,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["console.log('failed",{"_index":514,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["console.log(currentdoc",{"_index":370,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["console.log(d",{"_index":252,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["console.log(data",{"_index":309,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["console.log(dbitem",{"_index":682,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["console.log(doclisteners",{"_index":282,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["console.log(fromindex",{"_index":563,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["console.log(groupeddata",{"_index":447,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["console.log(item",{"_index":675,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["console.log(key",{"_index":696,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["console.log(lists",{"_index":643,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["console.log(object.entries(subcollections).keys",{"_index":371,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["console.log(pathlist",{"_index":669,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["console.log(ref",{"_index":353,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["console.log(sub",{"_index":416,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["console.log(subcollectionquery",{"_index":244,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["console.log(subdoc",{"_index":274,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["console.log(usedarray",{"_index":584,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["console.log(val",{"_index":280,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["console.time('removedataextrasrecursivehelper",{"_index":473,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["console.timeend('removedataextrasrecursivehelper",{"_index":489,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["const",{"_index":135,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{},"classes/SubCollectionQuery.html":{},"classes/SubCollectionWriter.html":{}}}],["constructor",{"_index":108,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["constructor(private",{"_index":117,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["contain",{"_index":483,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{},"classes/SubCollectionWriter.html":{}}}],["containing",{"_index":665,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{},"classes/SubCollectionWriter.html":{}}}],["contains",{"_index":853,"title":{},"body":{"classes/SubCollectionWriter.html":{}}}],["contract",{"_index":1057,"title":{},"body":{"license.html":{}}}],["control",{"_index":781,"title":{},"body":{"classes/SubCollectionWriter.html":{}}}],["converttimestamptodate",{"_index":76,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["converttimestamptodate(data",{"_index":173,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{},"miscellaneous/functions.html":{}}}],["copies",{"_index":169,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{},"license.html":{}}}],["copy",{"_index":570,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{},"license.html":{}}}],["copyright",{"_index":1003,"title":{},"body":{"license.html":{}}}],["correct",{"_index":198,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["cost",{"_index":777,"title":{},"body":{"classes/SubCollectionWriter.html":{}}}],["coverage",{"_index":905,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":241,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{},"classes/SubCollectionWriter.html":{}}}],["created",{"_index":895,"title":{},"body":{"classes/SubCollectionWriter.html":{}}}],["createdby",{"_index":944,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createddate",{"_index":739,"title":{},"body":{"interfaces/DbItemFull.html":{},"interfaces/DbItemFullWithIndex.html":{},"interfaces/DbItemWithIndex.html":{},"interfaces/FirebaseDbItem.html":{},"interfaces/FirestoreItem.html":{},"interfaces/ImageItem.html":{},"interfaces/StorageItem.html":{},"miscellaneous/functions.html":{}}}],["current",{"_index":476,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["currentarray",{"_index":591,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["currentarray[currentindex",{"_index":604,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["currentarrayslicetoupdate",{"_index":608,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["currentdata",{"_index":449,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["currentdoc",{"_index":103,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["currentdoc[key",{"_index":698,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["currentdocsubcollectionsplit",{"_index":102,"title":{"interfaces/CurrentDocSubCollectionSplit.html":{}},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{},"coverage.html":{}}}],["currentindex",{"_index":593,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["d",{"_index":278,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["damages",{"_index":1054,"title":{},"body":{"license.html":{}}}],["data",{"_index":20,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{},"classes/SubCollectionWriter.html":{},"miscellaneous/functions.html":{}}}],["database",{"_index":887,"title":{},"body":{"classes/SubCollectionWriter.html":{}}}],["datas.foreach((collection",{"_index":305,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["datas.map(data",{"_index":193,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["datasmap",{"_index":304,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["datasmap[key",{"_index":307,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["datatobecleaned",{"_index":462,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["date",{"_index":732,"title":{},"body":{"interfaces/DbItemFull.html":{},"interfaces/DbItemFullWithIndex.html":{},"interfaces/DbItemWithIndex.html":{},"interfaces/FirebaseDbItem.html":{},"interfaces/FirestoreItem.html":{},"interfaces/ImageItem.html":{},"interfaces/StorageItem.html":{}}}],["db",{"_index":572,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{},"interfaces/DbItemFull.html":{},"interfaces/DbItemFullWithIndex.html":{},"interfaces/DbItemWithIndex.html":{},"interfaces/FirebaseDbItem.html":{},"interfaces/FirestoreItem.html":{},"interfaces/ImageItem.html":{},"interfaces/StorageItem.html":{}}}],["dbitem",{"_index":490,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["dbitem[col.name",{"_index":484,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["dbitem[col.name][extrapropertyname",{"_index":487,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["dbitem[extrapropertyname",{"_index":479,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["dbitemextras",{"_index":458,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["dbitemfull",{"_index":728,"title":{"interfaces/DbItemFull.html":{}},"body":{"interfaces/DbItemFull.html":{},"interfaces/DbItemFullWithIndex.html":{},"interfaces/DbItemWithIndex.html":{},"interfaces/FirebaseDbItem.html":{},"interfaces/FirestoreItem.html":{},"interfaces/ImageItem.html":{},"interfaces/StorageItem.html":{},"coverage.html":{}}}],["dbitemfullwithindex",{"_index":64,"title":{"interfaces/DbItemFullWithIndex.html":{}},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{},"interfaces/DbItemFull.html":{},"interfaces/DbItemFullWithIndex.html":{},"interfaces/DbItemWithIndex.html":{},"interfaces/FirebaseDbItem.html":{},"interfaces/FirestoreItem.html":{},"interfaces/ImageItem.html":{},"interfaces/StorageItem.html":{},"coverage.html":{}}}],["dbitemwithindex",{"_index":742,"title":{"interfaces/DbItemWithIndex.html":{}},"body":{"interfaces/DbItemFull.html":{},"interfaces/DbItemFullWithIndex.html":{},"interfaces/DbItemWithIndex.html":{},"interfaces/FirebaseDbItem.html":{},"interfaces/FirestoreItem.html":{},"interfaces/ImageItem.html":{},"interfaces/StorageItem.html":{},"coverage.html":{}}}],["deal",{"_index":1017,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":1062,"title":{},"body":{"license.html":{}}}],["decent",{"_index":804,"title":{},"body":{"classes/SubCollectionWriter.html":{}}}],["declarations",{"_index":724,"title":{},"body":{"modules/AngularfirestoreWrapperModule.html":{}}}],["deep",{"_index":539,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{},"classes/SubCollectionWriter.html":{},"index.html":{}}}],["deeper",{"_index":328,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["default",{"_index":114,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{},"classes/SubCollectionWriter.html":{},"index.html":{}}}],["defaultdocid",{"_index":113,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["defined",{"_index":754,"title":{},"body":{"classes/SubCollectionQuery.html":{},"classes/SubCollectionWriter.html":{}}}],["delete",{"_index":477,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["delete$(docfs",{"_index":625,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["deleted",{"_index":231,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["deletedeep",{"_index":659,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["deletedeep$(docfs",{"_index":654,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["deletedeepbyitem",{"_index":664,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["deletedeepbyitem$(item",{"_index":660,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["deletedocbypath(path",{"_index":549,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["deletemultiple",{"_index":630,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["deletemultiple$(docsfs",{"_index":627,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["deletemultiplebypaths$(paths",{"_index":633,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["deletemultipledeep$(docsfs",{"_index":635,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["dependencies",{"_index":930,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["depending",{"_index":867,"title":{},"body":{"classes/SubCollectionWriter.html":{}}}],["depth",{"_index":317,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["description",{"_index":8,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"modules/AngularfirestoreWrapperModule.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{},"classes/SubCollectionQuery.html":{},"classes/SubCollectionWriter.html":{},"miscellaneous/functions.html":{}}}],["didnt",{"_index":580,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["difference",{"_index":866,"title":{},"body":{"classes/SubCollectionWriter.html":{}}}],["differently",{"_index":390,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":971,"title":{},"body":{"index.html":{}}}],["directly",{"_index":494,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["directory",{"_index":979,"title":{},"body":{"index.html":{}}}],["dish",{"_index":816,"title":{},"body":{"classes/SubCollectionWriter.html":{}}}],["dish1",{"_index":796,"title":{},"body":{"classes/SubCollectionWriter.html":{}}}],["dish2",{"_index":799,"title":{},"body":{"classes/SubCollectionWriter.html":{}}}],["dishes",{"_index":795,"title":{},"body":{"classes/SubCollectionWriter.html":{}}}],["dist",{"_index":978,"title":{},"body":{"index.html":{}}}],["dist/angularfirestore",{"_index":985,"title":{},"body":{"index.html":{}}}],["distribute",{"_index":1023,"title":{},"body":{"license.html":{}}}],["doc",{"_index":13,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{},"interfaces/DbItemFull.html":{},"interfaces/DbItemFullWithIndex.html":{},"interfaces/DbItemWithIndex.html":{},"interfaces/FirebaseDbItem.html":{},"interfaces/FirestoreItem.html":{},"interfaces/ImageItem.html":{},"interfaces/StorageItem.html":{},"classes/SubCollectionQuery.html":{},"classes/SubCollectionWriter.html":{},"miscellaneous/functions.html":{}}}],["doc.key",{"_index":436,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["doc.ref.path",{"_index":632,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["doc.value",{"_index":437,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["doc_not_found",{"_index":99,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["docdatas.foreach((doc",{"_index":435,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["docfs",{"_index":22,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{},"interfaces/DbItemFull.html":{},"interfaces/DbItemFullWithIndex.html":{},"interfaces/DbItemWithIndex.html":{},"interfaces/FirebaseDbItem.html":{},"interfaces/FirestoreItem.html":{},"interfaces/ImageItem.html":{},"interfaces/StorageItem.html":{},"miscellaneous/functions.html":{}}}],["docfs.collection(subcollectionkey).doc(subdocid",{"_index":545,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["docfs.collection(subcollectionquery.name",{"_index":245,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["docfs.snapshotchanges().pipe",{"_index":137,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["docfslist",{"_index":671,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["docfslist.push(this.ngfirestore.doc(path",{"_index":673,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["docid",{"_index":287,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{},"classes/SubCollectionQuery.html":{},"classes/SubCollectionWriter.html":{}}}],["docid).pipe",{"_index":374,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["doclist",{"_index":638,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["doclisteners",{"_index":265,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["doclisteners.length",{"_index":283,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["doclisteners.push(subdocandcollections",{"_index":281,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["docnotexistaction",{"_index":82,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{},"miscellaneous/enumerations.html":{}}}],["docnotexistaction.filter",{"_index":149,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["docnotexistaction.return_all_but_data",{"_index":125,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["docnotexistaction.return_null",{"_index":170,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["docnotexistaction.throw_doc_not_found",{"_index":144,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["docref",{"_index":157,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["docref.path",{"_index":159,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["docs",{"_index":261,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{},"classes/SubCollectionWriter.html":{}}}],["docs.foreach((doc",{"_index":552,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["docs.foreach(d",{"_index":267,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["docs.length",{"_index":254,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["docs[0",{"_index":293,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["docs[0].id",{"_index":298,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["docsfs",{"_index":555,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["docsfs.foreach((doc",{"_index":628,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["docsfs.foreach(doc",{"_index":637,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["docsfs.map(doc",{"_index":631,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["docsfs.push(this.ngfirestore.doc(path",{"_index":557,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["document",{"_index":12,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{},"classes/SubCollectionQuery.html":{},"classes/SubCollectionWriter.html":{},"miscellaneous/functions.html":{}}}],["document').pipe",{"_index":521,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["documentation",{"_index":906,"title":{},"body":{"coverage.html":{},"license.html":{}}}],["documentchangeaction",{"_index":34,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["documentchangetype",{"_index":35,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["documentdata",{"_index":61,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{},"interfaces/DbItemFull.html":{},"interfaces/DbItemFullWithIndex.html":{},"interfaces/DbItemWithIndex.html":{},"interfaces/FirebaseDbItem.html":{},"interfaces/FirestoreItem.html":{},"interfaces/ImageItem.html":{},"interfaces/StorageItem.html":{}}}],["documentreference",{"_index":36,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{},"interfaces/DbItemFull.html":{},"interfaces/DbItemFullWithIndex.html":{},"interfaces/DbItemWithIndex.html":{},"interfaces/FirebaseDbItem.html":{},"interfaces/FirestoreItem.html":{},"interfaces/ImageItem.html":{},"interfaces/StorageItem.html":{},"miscellaneous/functions.html":{}}}],["documents",{"_index":756,"title":{},"body":{"classes/SubCollectionQuery.html":{},"classes/SubCollectionWriter.html":{}}}],["documents').pipe",{"_index":704,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["documentsnapshot",{"_index":40,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["documentsnapshotexists",{"_index":37,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["doesn't",{"_index":171,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["doesnt",{"_index":257,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["don't",{"_index":973,"title":{},"body":{"index.html":{}}}],["done",{"_index":496,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["dont",{"_index":334,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["down",{"_index":839,"title":{},"body":{"classes/SubCollectionWriter.html":{}}}],["download",{"_index":826,"title":{},"body":{"classes/SubCollectionWriter.html":{}}}],["downloading",{"_index":843,"title":{},"body":{"classes/SubCollectionWriter.html":{}}}],["drag",{"_index":596,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["dragdropmodule",{"_index":723,"title":{},"body":{"modules/AngularfirestoreWrapperModule.html":{}}}],["drop",{"_index":55,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"modules/AngularfirestoreWrapperModule.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["duper",{"_index":418,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["duration",{"_index":350,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["e.x",{"_index":201,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["each",{"_index":240,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{},"classes/SubCollectionWriter.html":{}}}],["ease",{"_index":885,"title":{},"body":{"classes/SubCollectionWriter.html":{}}}],["easy",{"_index":780,"title":{},"body":{"classes/SubCollectionWriter.html":{}}}],["economy",{"_index":775,"title":{},"body":{"classes/SubCollectionWriter.html":{}}}],["edit",{"_index":454,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["effect",{"_index":430,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["efficient",{"_index":846,"title":{},"body":{"classes/SubCollectionWriter.html":{}}}],["emit",{"_index":129,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["emits",{"_index":452,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["empty",{"_index":256,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["end",{"_index":284,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["entire",{"_index":827,"title":{},"body":{"classes/SubCollectionWriter.html":{}}}],["entry",{"_index":392,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["enum",{"_index":81,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["enumerations",{"_index":940,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["equal",{"_index":877,"title":{},"body":{"classes/SubCollectionWriter.html":{}}}],["err",{"_index":229,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["err.code",{"_index":712,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["error",{"_index":98,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["error('doc_not_found",{"_index":147,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["errormessage",{"_index":707,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["event",{"_index":1049,"title":{},"body":{"license.html":{}}}],["example",{"_index":213,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{},"classes/SubCollectionQuery.html":{},"classes/SubCollectionWriter.html":{}}}],["example.jpg",{"_index":797,"title":{},"body":{"classes/SubCollectionWriter.html":{}}}],["example2.jpg",{"_index":798,"title":{},"body":{"classes/SubCollectionWriter.html":{}}}],["execute",{"_index":992,"title":{},"body":{"index.html":{}}}],["exist",{"_index":96,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{},"miscellaneous/functions.html":{}}}],["exist..add",{"_index":444,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["exists",{"_index":141,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{},"miscellaneous/functions.html":{}}}],["expensive",{"_index":832,"title":{},"body":{"classes/SubCollectionWriter.html":{}}}],["explained",{"_index":870,"title":{},"body":{"classes/SubCollectionWriter.html":{}}}],["export",{"_index":80,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"modules/AngularfirestoreWrapperModule.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{},"interfaces/DbItemFull.html":{},"interfaces/DbItemFullWithIndex.html":{},"interfaces/DbItemWithIndex.html":{},"interfaces/FirebaseDbItem.html":{},"interfaces/FirestoreItem.html":{},"interfaces/ImageItem.html":{},"interfaces/StorageItem.html":{},"classes/SubCollectionQuery.html":{},"classes/SubCollectionWriter.html":{}}}],["exports",{"_index":726,"title":{},"body":{"modules/AngularfirestoreWrapperModule.html":{}}}],["express",{"_index":1040,"title":{},"body":{"license.html":{}}}],["extends",{"_index":730,"title":{},"body":{"interfaces/DbItemFull.html":{},"interfaces/DbItemFullWithIndex.html":{},"interfaces/DbItemWithIndex.html":{},"interfaces/FirebaseDbItem.html":{},"interfaces/FirestoreItem.html":{},"interfaces/ImageItem.html":{},"interfaces/StorageItem.html":{}}}],["extrapropertyname",{"_index":478,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["extrapropertynames",{"_index":474,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["extras",{"_index":88,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["failed",{"_index":219,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["false",{"_index":566,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{},"classes/SubCollectionWriter.html":{}}}],["faster",{"_index":881,"title":{},"body":{"classes/SubCollectionWriter.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"modules/AngularfirestoreWrapperModule.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{},"interfaces/DbItemFull.html":{},"interfaces/DbItemFullWithIndex.html":{},"interfaces/DbItemWithIndex.html":{},"interfaces/FirebaseDbItem.html":{},"interfaces/FirestoreItem.html":{},"interfaces/ImageItem.html":{},"interfaces/StorageItem.html":{},"classes/SubCollectionQuery.html":{},"classes/SubCollectionWriter.html":{},"coverage.html":{},"index.html":{}}}],["filename",{"_index":747,"title":{},"body":{"interfaces/DbItemFull.html":{},"interfaces/DbItemFullWithIndex.html":{},"interfaces/DbItemWithIndex.html":{},"interfaces/FirebaseDbItem.html":{},"interfaces/FirestoreItem.html":{},"interfaces/ImageItem.html":{},"interfaces/StorageItem.html":{}}}],["files",{"_index":1016,"title":{},"body":{"license.html":{}}}],["filter",{"_index":43,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{},"miscellaneous/enumerations.html":{}}}],["filter((action",{"_index":148,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["filter(doc",{"_index":233,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["filter(docs",{"_index":253,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["filter(subdoc",{"_index":275,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["finally",{"_index":301,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["firebase",{"_index":56,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{},"interfaces/DbItemFull.html":{},"interfaces/DbItemFullWithIndex.html":{},"interfaces/DbItemWithIndex.html":{},"interfaces/FirebaseDbItem.html":{},"interfaces/FirestoreItem.html":{},"interfaces/ImageItem.html":{},"interfaces/StorageItem.html":{},"dependencies.html":{}}}],["firebase.firestore.documentdata",{"_index":62,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["firebase.firestore.firestoreerror",{"_index":60,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["firebase.firestore.timestamp",{"_index":735,"title":{},"body":{"interfaces/DbItemFull.html":{},"interfaces/DbItemFullWithIndex.html":{},"interfaces/DbItemWithIndex.html":{},"interfaces/FirebaseDbItem.html":{},"interfaces/FirestoreItem.html":{},"interfaces/ImageItem.html":{},"interfaces/StorageItem.html":{}}}],["firebase.firestore.writebatch",{"_index":58,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["firebase/app",{"_index":734,"title":{},"body":{"interfaces/DbItemFull.html":{},"interfaces/DbItemFullWithIndex.html":{},"interfaces/DbItemWithIndex.html":{},"interfaces/FirebaseDbItem.html":{},"interfaces/FirestoreItem.html":{},"interfaces/ImageItem.html":{},"interfaces/StorageItem.html":{}}}],["firebasedbitem",{"_index":738,"title":{"interfaces/FirebaseDbItem.html":{}},"body":{"interfaces/DbItemFull.html":{},"interfaces/DbItemFullWithIndex.html":{},"interfaces/DbItemWithIndex.html":{},"interfaces/FirebaseDbItem.html":{},"interfaces/FirestoreItem.html":{},"interfaces/ImageItem.html":{},"interfaces/StorageItem.html":{},"coverage.html":{}}}],["firestore",{"_index":431,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{},"classes/SubCollectionWriter.html":{},"miscellaneous/functions.html":{}}}],["firestoreerror",{"_index":59,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["firestoreitem",{"_index":63,"title":{"interfaces/FirestoreItem.html":{}},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{},"interfaces/DbItemFull.html":{},"interfaces/DbItemFullWithIndex.html":{},"interfaces/DbItemWithIndex.html":{},"interfaces/FirebaseDbItem.html":{},"interfaces/FirestoreItem.html":{},"interfaces/ImageItem.html":{},"interfaces/StorageItem.html":{},"coverage.html":{}}}],["firestoreitem).path",{"_index":690,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["first",{"_index":618,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["fitness",{"_index":1045,"title":{},"body":{"license.html":{}}}],["fixed",{"_index":614,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["flatten",{"_index":768,"title":{},"body":{"classes/SubCollectionWriter.html":{}}}],["folder",{"_index":983,"title":{},"body":{"index.html":{}}}],["following",{"_index":1031,"title":{},"body":{"license.html":{}}}],["food",{"_index":805,"title":{},"body":{"classes/SubCollectionWriter.html":{}}}],["forget",{"_index":974,"title":{},"body":{"index.html":{}}}],["forth",{"_index":533,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["found",{"_index":97,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["free",{"_index":1010,"title":{},"body":{"license.html":{}}}],["from(batch.commit",{"_index":702,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["from(collectionfs.add(data",{"_index":347,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["from(collectionfs.doc(id).set(data",{"_index":346,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["from(docfs.delete",{"_index":626,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["from(docfs.update(data",{"_index":519,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["fromindex",{"_index":560,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["function",{"_index":910,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":942,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["furnished",{"_index":1029,"title":{},"body":{"license.html":{}}}],["further",{"_index":995,"title":{},"body":{"index.html":{}}}],["generate",{"_index":968,"title":{},"body":{"index.html":{}}}],["generated",{"_index":961,"title":{},"body":{"index.html":{}}}],["getbatchfromdeleteiteminindexeddocs(array",{"_index":612,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["getbatchfromtransferiteminindexeddocs(previousarray",{"_index":590,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["getcollectionfsfrompath",{"_index":73,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["getcollectionfsfrompath(path",{"_index":947,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getdocfsfrompath",{"_index":74,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["getdocfsfrompath(path",{"_index":950,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getdocfsfromref",{"_index":915,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["getdocfsfromref(ref",{"_index":951,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getdocs",{"_index":680,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["getfirestoredocumentsdeep$(docfs",{"_index":666,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["getfirestoredocumentsfromdbitem(dbitem",{"_index":676,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["getparentdocfsfrompath",{"_index":75,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["getparentdocfsfrompath(path",{"_index":952,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getpathsfromdbitemdeeprecursivehelper(dbitem",{"_index":681,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["getreffrompath",{"_index":72,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["getreffrompath(item.path",{"_index":588,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["getreffrompath(moveditem.path",{"_index":606,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["getreffrompath(path",{"_index":954,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getting",{"_index":958,"title":{"index.html":{},"license.html":{}},"body":{}}],["given",{"_index":116,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{},"classes/SubCollectionWriter.html":{},"miscellaneous/functions.html":{}}}],["go",{"_index":982,"title":{},"body":{"index.html":{}}}],["goes",{"_index":455,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["good",{"_index":807,"title":{},"body":{"classes/SubCollectionWriter.html":{}}}],["granted",{"_index":1009,"title":{},"body":{"license.html":{}}}],["graph",{"_index":1063,"title":{},"body":{"modules.html":{}}}],["groupeddata",{"_index":434,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["groupeddata.hasownproperty(key",{"_index":441,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["groupeddata[key",{"_index":443,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["handle",{"_index":389,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["handleres$(result",{"_index":705,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["having",{"_index":856,"title":{},"body":{"classes/SubCollectionWriter.html":{}}}],["help",{"_index":996,"title":{},"body":{"index.html":{}}}],["helper",{"_index":955,"title":{},"body":{"miscellaneous/functions.html":{}}}],["helpers",{"_index":79,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["helpers.ts",{"_index":909,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["helps",{"_index":16,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["hereby",{"_index":1008,"title":{},"body":{"license.html":{}}}],["higher",{"_index":953,"title":{},"body":{"miscellaneous/functions.html":{}}}],["holders",{"_index":1051,"title":{},"body":{"license.html":{}}}],["huge",{"_index":834,"title":{},"body":{"classes/SubCollectionWriter.html":{}}}],["i.e",{"_index":896,"title":{},"body":{"classes/SubCollectionWriter.html":{}}}],["id",{"_index":134,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{},"interfaces/DbItemFull.html":{},"interfaces/DbItemFullWithIndex.html":{},"interfaces/DbItemWithIndex.html":{},"interfaces/FirebaseDbItem.html":{},"interfaces/FirestoreItem.html":{},"interfaces/ImageItem.html":{},"interfaces/StorageItem.html":{}}}],["identifier",{"_index":907,"title":{},"body":{"coverage.html":{}}}],["ignore",{"_index":155,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["ignores",{"_index":92,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["image",{"_index":815,"title":{},"body":{"classes/SubCollectionWriter.html":{}}}],["imageitem",{"_index":745,"title":{"interfaces/ImageItem.html":{}},"body":{"interfaces/DbItemFull.html":{},"interfaces/DbItemFullWithIndex.html":{},"interfaces/DbItemWithIndex.html":{},"interfaces/FirebaseDbItem.html":{},"interfaces/FirestoreItem.html":{},"interfaces/ImageItem.html":{},"interfaces/StorageItem.html":{},"coverage.html":{}}}],["images",{"_index":205,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{},"classes/SubCollectionWriter.html":{}}}],["immediately",{"_index":577,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["implied",{"_index":1041,"title":{},"body":{"license.html":{}}}],["import",{"_index":28,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"modules/AngularfirestoreWrapperModule.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{},"interfaces/DbItemFull.html":{},"interfaces/DbItemFullWithIndex.html":{},"interfaces/DbItemWithIndex.html":{},"interfaces/FirebaseDbItem.html":{},"interfaces/FirestoreItem.html":{},"interfaces/ImageItem.html":{},"interfaces/StorageItem.html":{},"classes/SubCollectionQuery.html":{}}}],["imports",{"_index":725,"title":{},"body":{"modules/AngularfirestoreWrapperModule.html":{}}}],["include",{"_index":335,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["included",{"_index":1035,"title":{},"body":{"license.html":{}}}],["including",{"_index":1019,"title":{},"body":{"license.html":{}}}],["index",{"_index":18,"title":{"index.html":{}},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{},"interfaces/DbItemFull.html":{},"interfaces/DbItemFullWithIndex.html":{},"interfaces/DbItemWithIndex.html":{},"interfaces/FirebaseDbItem.html":{},"interfaces/FirestoreItem.html":{},"interfaces/ImageItem.html":{},"interfaces/StorageItem.html":{},"classes/SubCollectionQuery.html":{},"classes/SubCollectionWriter.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["individual",{"_index":892,"title":{},"body":{"classes/SubCollectionWriter.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"modules/AngularfirestoreWrapperModule.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{},"interfaces/DbItemFull.html":{},"interfaces/DbItemFullWithIndex.html":{},"interfaces/DbItemWithIndex.html":{},"interfaces/FirebaseDbItem.html":{},"interfaces/FirestoreItem.html":{},"interfaces/ImageItem.html":{},"interfaces/StorageItem.html":{},"classes/SubCollectionQuery.html":{},"classes/SubCollectionWriter.html":{}}}],["initially",{"_index":858,"title":{},"body":{"classes/SubCollectionWriter.html":{}}}],["injected",{"_index":111,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["inside",{"_index":314,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{},"classes/SubCollectionWriter.html":{}}}],["instead",{"_index":700,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{},"classes/SubCollectionWriter.html":{}}}],["intends",{"_index":848,"title":{},"body":{"classes/SubCollectionWriter.html":{}}}],["interface",{"_index":0,"title":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{},"interfaces/DbItemFull.html":{},"interfaces/DbItemFullWithIndex.html":{},"interfaces/DbItemWithIndex.html":{},"interfaces/FirebaseDbItem.html":{},"interfaces/FirestoreItem.html":{},"interfaces/ImageItem.html":{},"interfaces/StorageItem.html":{}},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{},"interfaces/DbItemFull.html":{},"interfaces/DbItemFullWithIndex.html":{},"interfaces/DbItemWithIndex.html":{},"interfaces/FirebaseDbItem.html":{},"interfaces/FirestoreItem.html":{},"interfaces/ImageItem.html":{},"interfaces/StorageItem.html":{},"coverage.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{},"interfaces/DbItemFull.html":{},"interfaces/DbItemFullWithIndex.html":{},"interfaces/DbItemWithIndex.html":{},"interfaces/FirebaseDbItem.html":{},"interfaces/FirestoreItem.html":{},"interfaces/ImageItem.html":{},"interfaces/StorageItem.html":{},"overview.html":{}}}],["internally",{"_index":101,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["introduce",{"_index":529,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["isdocexist",{"_index":916,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["isdocexist$(docfs",{"_index":956,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isexists",{"_index":162,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["isflat",{"_index":889,"title":{},"body":{"classes/SubCollectionWriter.html":{}}}],["isn't",{"_index":93,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["issue",{"_index":817,"title":{},"body":{"classes/SubCollectionWriter.html":{}}}],["item",{"_index":235,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["item.index",{"_index":622,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["items",{"_index":324,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["items.length",{"_index":323,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["iterate",{"_index":238,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["iteration",{"_index":412,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["joining",{"_index":420,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["k,v",{"_index":407,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["karma",{"_index":994,"title":{},"body":{"index.html":{}}}],["keep",{"_index":509,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["key",{"_index":292,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{},"classes/SubCollectionWriter.html":{}}}],["key..so",{"_index":440,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["killing",{"_index":835,"title":{},"body":{"classes/SubCollectionWriter.html":{}}}],["kind",{"_index":524,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{},"license.html":{}}}],["kinda",{"_index":91,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["know",{"_index":651,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["large",{"_index":862,"title":{},"body":{"classes/SubCollectionWriter.html":{}}}],["later",{"_index":812,"title":{},"body":{"classes/SubCollectionWriter.html":{}}}],["level",{"_index":327,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{},"classes/SubCollectionWriter.html":{},"miscellaneous/functions.html":{}}}],["liability",{"_index":1055,"title":{},"body":{"license.html":{}}}],["liable",{"_index":1052,"title":{},"body":{"license.html":{}}}],["library",{"_index":960,"title":{},"body":{"index.html":{}}}],["license",{"_index":1001,"title":{"license.html":{}},"body":{"license.html":{}}}],["limitation",{"_index":1020,"title":{},"body":{"license.html":{}}}],["limited",{"_index":1042,"title":{},"body":{"license.html":{}}}],["line1",{"_index":792,"title":{},"body":{"classes/SubCollectionWriter.html":{}}}],["line:no",{"_index":471,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["link",{"_index":200,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["linked",{"_index":900,"title":{},"body":{"classes/SubCollectionWriter.html":{}}}],["list",{"_index":433,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{},"classes/SubCollectionWriter.html":{}}}],["listen",{"_index":119,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{},"interfaces/DbItemFull.html":{},"interfaces/DbItemFullWithIndex.html":{},"interfaces/DbItemWithIndex.html":{},"interfaces/FirebaseDbItem.html":{},"interfaces/FirestoreItem.html":{},"interfaces/ImageItem.html":{},"interfaces/StorageItem.html":{}}}],["listeners",{"_index":242,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["listenforchangesinbasecollection",{"_index":120,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["listenforcollection",{"_index":194,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["listenforcollection$(collectionfs",{"_index":182,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["listenforcollectionrecursively(path",{"_index":310,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["listenfordoc",{"_index":175,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["listenfordoc$(docfs",{"_index":128,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["listenfordocandsubcollections",{"_index":225,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["listenfordocdeep",{"_index":218,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["listenfordocdeep$(docfs",{"_index":214,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["listenfordocdeeprecursivehelper",{"_index":196,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["listenfordocinbasecollectionbyid(id",{"_index":123,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["listening",{"_index":285,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{},"classes/SubCollectionQuery.html":{}}}],["listens",{"_index":313,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["listentotypes",{"_index":176,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["listentotypes.includes(a.type",{"_index":186,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["listentotypes.length",{"_index":184,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["lists.foreach(list",{"_index":646,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["listslicetoupdate",{"_index":586,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["literal",{"_index":727,"title":{},"body":{"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["logic",{"_index":199,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["looks",{"_index":429,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["lowestindex",{"_index":578,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["main",{"_index":105,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["maindocfslist",{"_index":645,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["maindocfslist.concat(list",{"_index":647,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["maindoclists",{"_index":636,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["maindoclists$.push(doclist",{"_index":640,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["mainly",{"_index":595,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["make",{"_index":167,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{},"classes/SubCollectionWriter.html":{}}}],["map",{"_index":44,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["map((action",{"_index":150,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["map((actions",{"_index":187,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["map((data",{"_index":172,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["map((datas",{"_index":192,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["map((docdatas",{"_index":432,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["map((docs",{"_index":295,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["map((groupeddata",{"_index":448,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["map((lists",{"_index":644,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["map((nextlevelitems",{"_index":332,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["map((olddata",{"_index":501,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["map((pathlist",{"_index":670,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["map((ref",{"_index":354,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["map((subdoc",{"_index":277,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["map(data",{"_index":217,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["map(item",{"_index":406,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["maps",{"_index":809,"title":{},"body":{"classes/SubCollectionWriter.html":{}}}],["mapto(newdata",{"_index":508,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["matching",{"_index":714,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"modules/AngularfirestoreWrapperModule.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{},"interfaces/DbItemFull.html":{},"interfaces/DbItemFullWithIndex.html":{},"interfaces/DbItemWithIndex.html":{},"interfaces/FirebaseDbItem.html":{},"interfaces/FirestoreItem.html":{},"interfaces/ImageItem.html":{},"interfaces/StorageItem.html":{},"classes/SubCollectionQuery.html":{},"classes/SubCollectionWriter.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{}}}],["math.min(fromindex",{"_index":579,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["matter",{"_index":426,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["matters",{"_index":401,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["means",{"_index":288,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["meant",{"_index":223,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["merchantability",{"_index":1044,"title":{},"body":{"license.html":{}}}],["merge",{"_index":1022,"title":{},"body":{"license.html":{}}}],["mergemap",{"_index":45,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["mergemap((action",{"_index":138,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["mergemap((currentdata",{"_index":376,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["mergemap((docs",{"_index":262,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["mergemap((item",{"_index":234,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["mergemap((items",{"_index":322,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["mergemap((olddata",{"_index":503,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["mergemap(newdata",{"_index":506,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["method",{"_index":222,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{},"miscellaneous/functions.html":{}}}],["miscellaneous",{"_index":939,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["mistakes",{"_index":531,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["mit",{"_index":1002,"title":{},"body":{"license.html":{}}}],["models/firestoreitem",{"_index":65,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["modifieddate",{"_index":731,"title":{},"body":{"interfaces/DbItemFull.html":{},"interfaces/DbItemFullWithIndex.html":{},"interfaces/DbItemWithIndex.html":{},"interfaces/FirebaseDbItem.html":{},"interfaces/FirestoreItem.html":{},"interfaces/ImageItem.html":{},"interfaces/StorageItem.html":{},"miscellaneous/functions.html":{}}}],["modify",{"_index":465,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{},"license.html":{}}}],["module",{"_index":716,"title":{"modules/AngularfirestoreWrapperModule.html":{}},"body":{"overview.html":{}}}],["modules",{"_index":718,"title":{"modules.html":{}},"body":{"modules/AngularfirestoreWrapperModule.html":{},"modules.html":{}}}],["more",{"_index":778,"title":{},"body":{"classes/SubCollectionWriter.html":{},"index.html":{}}}],["move",{"_index":493,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["moved",{"_index":567,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["moveditem",{"_index":603,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["movedpartref",{"_index":605,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["moveiteminarray",{"_index":52,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["moveiteminarray$(array",{"_index":559,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["moveiteminarray(usedarray",{"_index":585,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["much",{"_index":841,"title":{},"body":{"classes/SubCollectionWriter.html":{}}}],["multiple",{"_index":17,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{},"classes/SubCollectionQuery.html":{},"classes/SubCollectionWriter.html":{}}}],["n",{"_index":767,"title":{},"body":{"classes/SubCollectionWriter.html":{}}}],["name",{"_index":115,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{},"classes/SubCollectionQuery.html":{},"classes/SubCollectionWriter.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["names",{"_index":894,"title":{},"body":{"classes/SubCollectionWriter.html":{}}}],["need",{"_index":362,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["needs",{"_index":620,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["never",{"_index":736,"title":{},"body":{"interfaces/DbItemFull.html":{},"interfaces/DbItemFullWithIndex.html":{},"interfaces/DbItemWithIndex.html":{},"interfaces/FirebaseDbItem.html":{},"interfaces/FirestoreItem.html":{},"interfaces/ImageItem.html":{},"interfaces/StorageItem.html":{}}}],["new",{"_index":146,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{},"coverage.html":{},"index.html":{}}}],["newdocfs",{"_index":510,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["newname",{"_index":498,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["newname).pipe",{"_index":505,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["next",{"_index":470,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{},"classes/SubCollectionWriter.html":{},"miscellaneous/functions.html":{}}}],["nextlevelitems",{"_index":329,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["nextlevelitems.length",{"_index":333,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["nextlevelobs.push(nextlevelitems",{"_index":336,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["nextlevelpath",{"_index":325,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["ng",{"_index":967,"title":{},"body":{"index.html":{}}}],["ngfirestore",{"_index":110,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["ngmodule",{"_index":720,"title":{},"body":{"modules/AngularfirestoreWrapperModule.html":{}}}],["none",{"_index":398,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["noninfringement",{"_index":1048,"title":{},"body":{"license.html":{}}}],["note",{"_index":972,"title":{},"body":{"index.html":{}}}],["notice",{"_index":1033,"title":{},"body":{"license.html":{}}}],["npm",{"_index":986,"title":{},"body":{"index.html":{}}}],["null",{"_index":84,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["null).pipe",{"_index":250,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["number",{"_index":561,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{},"interfaces/DbItemFull.html":{},"interfaces/DbItemFullWithIndex.html":{},"interfaces/DbItemWithIndex.html":{},"interfaces/FirebaseDbItem.html":{},"interfaces/FirestoreItem.html":{},"interfaces/ImageItem.html":{},"interfaces/StorageItem.html":{}}}],["object",{"_index":85,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{},"classes/SubCollectionWriter.html":{},"miscellaneous/functions.html":{}}}],["object.assign",{"_index":583,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["object.entries(collection",{"_index":306,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["object.entries(data",{"_index":695,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["object.entries(subcollections",{"_index":380,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["object.entries(subcollections).values",{"_index":372,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["object.getownpropertynames(new",{"_index":475,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["observable",{"_index":30,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{},"interfaces/DbItemFull.html":{},"interfaces/DbItemFullWithIndex.html":{},"interfaces/DbItemWithIndex.html":{},"interfaces/FirebaseDbItem.html":{},"interfaces/FirestoreItem.html":{},"interfaces/ImageItem.html":{},"interfaces/StorageItem.html":{},"miscellaneous/functions.html":{}}}],["obtaining",{"_index":1013,"title":{},"body":{"license.html":{}}}],["of(action",{"_index":142,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["of(currentdata",{"_index":450,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["of(docs",{"_index":264,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["of(item",{"_index":236,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["of(null",{"_index":230,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["of(null).pipe",{"_index":343,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["ok",{"_index":829,"title":{},"body":{"classes/SubCollectionWriter.html":{}}}],["old",{"_index":495,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["once",{"_index":453,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["one",{"_index":291,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{},"classes/SubCollectionWriter.html":{}}}],["onyl",{"_index":691,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["optional",{"_index":21,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/FirebaseDbItem.html":{},"interfaces/FirestoreItem.html":{},"interfaces/ImageItem.html":{},"classes/SubCollectionQuery.html":{},"classes/SubCollectionWriter.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":181,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["order",{"_index":615,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{},"classes/SubCollectionWriter.html":{}}}],["orderkey",{"_index":312,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["orderkey).pipe",{"_index":331,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["original",{"_index":466,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["otherdata",{"_index":888,"title":{},"body":{"classes/SubCollectionWriter.html":{}}}],["otherwise",{"_index":1059,"title":{},"body":{"license.html":{}}}],["out",{"_index":997,"title":{},"body":{"index.html":{},"license.html":{}}}],["over",{"_index":239,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["overview",{"_index":998,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["package",{"_index":929,"title":{"dependencies.html":{}},"body":{}}],["page",{"_index":1000,"title":{},"body":{"index.html":{}}}],["param",{"_index":109,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["parameters",{"_index":945,"title":{},"body":{"miscellaneous/functions.html":{}}}],["parent",{"_index":948,"title":{},"body":{"miscellaneous/functions.html":{}}}],["partial",{"_index":525,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["particular",{"_index":1046,"title":{},"body":{"license.html":{}}}],["parts",{"_index":882,"title":{},"body":{"classes/SubCollectionWriter.html":{}}}],["path",{"_index":14,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{},"interfaces/DbItemFull.html":{},"interfaces/DbItemFullWithIndex.html":{},"interfaces/DbItemWithIndex.html":{},"interfaces/FirebaseDbItem.html":{},"interfaces/FirestoreItem.html":{},"interfaces/ImageItem.html":{},"interfaces/StorageItem.html":{},"miscellaneous/functions.html":{}}}],["pathlist",{"_index":677,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["pathlist.concat(this.getpathsfromdbitemdeeprecursivehelper(d",{"_index":686,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["pathlist.concat(this.getpathsfromdbitemdeeprecursivehelper(dbitem",{"_index":688,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["pathlist.foreach(path",{"_index":672,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["pathlist.push(d.path",{"_index":687,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["pathlist.push(dbitem.path",{"_index":683,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["pathlist.push(item.path",{"_index":689,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["paths.foreach(path",{"_index":556,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["payload",{"_index":152,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["peer",{"_index":933,"title":{},"body":{"dependencies.html":{}}}],["perfect",{"_index":883,"title":{},"body":{"classes/SubCollectionWriter.html":{}}}],["performance",{"_index":833,"title":{},"body":{"classes/SubCollectionWriter.html":{}}}],["permission",{"_index":1007,"title":{},"body":{"license.html":{}}}],["permit",{"_index":1027,"title":{},"body":{"license.html":{}}}],["person",{"_index":1012,"title":{},"body":{"license.html":{}}}],["persons",{"_index":1028,"title":{},"body":{"license.html":{}}}],["pipe",{"_index":400,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["place",{"_index":694,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{},"classes/SubCollectionWriter.html":{}}}],["placed",{"_index":855,"title":{},"body":{"classes/SubCollectionWriter.html":{}}}],["plan",{"_index":837,"title":{},"body":{"classes/SubCollectionWriter.html":{}}}],["portions",{"_index":1037,"title":{},"body":{"license.html":{}}}],["possible",{"_index":528,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["potential",{"_index":211,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["potentially",{"_index":864,"title":{},"body":{"classes/SubCollectionWriter.html":{}}}],["prevarrayslicetoupdate",{"_index":610,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["previousarray",{"_index":601,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["previousindex",{"_index":592,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["prior",{"_index":527,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["private",{"_index":118,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["problem",{"_index":810,"title":{},"body":{"classes/SubCollectionWriter.html":{}}}],["profile",{"_index":946,"title":{},"body":{"miscellaneous/functions.html":{}}}],["project",{"_index":970,"title":{},"body":{"index.html":{}}}],["promise",{"_index":518,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["properties",{"_index":19,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{},"interfaces/DbItemFull.html":{},"interfaces/DbItemFullWithIndex.html":{},"interfaces/DbItemWithIndex.html":{},"interfaces/FirebaseDbItem.html":{},"interfaces/FirestoreItem.html":{},"interfaces/ImageItem.html":{},"interfaces/StorageItem.html":{},"classes/SubCollectionQuery.html":{},"classes/SubCollectionWriter.html":{}}}],["property",{"_index":482,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["protected",{"_index":122,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["provided",{"_index":1038,"title":{},"body":{"license.html":{}}}],["publish",{"_index":987,"title":{},"body":{"index.html":{},"license.html":{}}}],["publishing",{"_index":980,"title":{},"body":{"index.html":{}}}],["purpose",{"_index":1047,"title":{},"body":{"license.html":{}}}],["query",{"_index":69,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{},"classes/SubCollectionQuery.html":{}}}],["query.ts",{"_index":753,"title":{},"body":{"classes/SubCollectionQuery.html":{},"coverage.html":{}}}],["query.ts:12",{"_index":757,"title":{},"body":{"classes/SubCollectionQuery.html":{}}}],["query.ts:15",{"_index":755,"title":{},"body":{"classes/SubCollectionQuery.html":{}}}],["query.ts:29",{"_index":759,"title":{},"body":{"classes/SubCollectionQuery.html":{}}}],["query.ts:33",{"_index":764,"title":{},"body":{"classes/SubCollectionQuery.html":{}}}],["queryfn",{"_index":206,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{},"classes/SubCollectionQuery.html":{}}}],["r",{"_index":319,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["r.orderby(orderkey",{"_index":320,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["random",{"_index":893,"title":{},"body":{"classes/SubCollectionWriter.html":{}}}],["rd",{"_index":794,"title":{},"body":{"classes/SubCollectionWriter.html":{}}}],["read",{"_index":220,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{},"classes/SubCollectionQuery.html":{},"classes/SubCollectionWriter.html":{}}}],["read/write",{"_index":873,"title":{},"body":{"classes/SubCollectionWriter.html":{}}}],["read/writes",{"_index":863,"title":{},"body":{"classes/SubCollectionWriter.html":{}}}],["reads",{"_index":770,"title":{},"body":{"classes/SubCollectionWriter.html":{}}}],["really",{"_index":425,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["reason",{"_index":573,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["reduce",{"_index":769,"title":{},"body":{"classes/SubCollectionWriter.html":{}}}],["ref",{"_index":90,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{},"interfaces/DbItemFull.html":{},"interfaces/DbItemFullWithIndex.html":{},"interfaces/DbItemWithIndex.html":{},"interfaces/FirebaseDbItem.html":{},"interfaces/FirestoreItem.html":{},"interfaces/ImageItem.html":{},"interfaces/StorageItem.html":{},"miscellaneous/functions.html":{}}}],["ref.id",{"_index":355,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["ref.orderby('index",{"_index":207,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["ref.path",{"_index":356,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["ref.where('type",{"_index":760,"title":{},"body":{"classes/SubCollectionQuery.html":{}}}],["reference",{"_index":898,"title":{},"body":{"classes/SubCollectionWriter.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["relates",{"_index":428,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["remove",{"_index":290,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["removedataextrasrecursivehelper(dbitem",{"_index":468,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["removes",{"_index":457,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["require",{"_index":879,"title":{},"body":{"classes/SubCollectionWriter.html":{}}}],["required",{"_index":741,"title":{},"body":{"interfaces/DbItemFull.html":{},"interfaces/DbItemFullWithIndex.html":{},"interfaces/DbItemWithIndex.html":{},"interfaces/FirebaseDbItem.html":{},"interfaces/FirestoreItem.html":{},"interfaces/ImageItem.html":{},"interfaces/StorageItem.html":{}}}],["res",{"_index":136,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["res$.pipe",{"_index":348,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["restaurant",{"_index":787,"title":{},"body":{"classes/SubCollectionWriter.html":{}}}],["restaurants",{"_index":820,"title":{},"body":{"classes/SubCollectionWriter.html":{}}}],["restriction",{"_index":1018,"title":{},"body":{"license.html":{}}}],["result",{"_index":713,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"modules/AngularfirestoreWrapperModule.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{},"interfaces/DbItemFull.html":{},"interfaces/DbItemFullWithIndex.html":{},"interfaces/DbItemWithIndex.html":{},"interfaces/FirebaseDbItem.html":{},"interfaces/FirestoreItem.html":{},"interfaces/ImageItem.html":{},"interfaces/StorageItem.html":{},"classes/SubCollectionQuery.html":{},"classes/SubCollectionWriter.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{}}}],["result$.pipe",{"_index":708,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["results",{"_index":715,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"modules/AngularfirestoreWrapperModule.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{},"interfaces/DbItemFull.html":{},"interfaces/DbItemFullWithIndex.html":{},"interfaces/DbItemWithIndex.html":{},"interfaces/FirebaseDbItem.html":{},"interfaces/FirestoreItem.html":{},"interfaces/ImageItem.html":{},"interfaces/StorageItem.html":{},"classes/SubCollectionQuery.html":{},"classes/SubCollectionWriter.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{}}}],["return",{"_index":87,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["return_all_but_data",{"_index":94,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{},"miscellaneous/enumerations.html":{}}}],["return_null",{"_index":86,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{},"miscellaneous/enumerations.html":{}}}],["returns",{"_index":83,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{},"miscellaneous/functions.html":{}}}],["review",{"_index":845,"title":{},"body":{"classes/SubCollectionWriter.html":{}}}],["reviews",{"_index":800,"title":{},"body":{"classes/SubCollectionWriter.html":{}}}],["rights",{"_index":1021,"title":{},"body":{"license.html":{}}}],["run",{"_index":613,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{},"index.html":{}}}],["running",{"_index":988,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":31,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{},"interfaces/DbItemFull.html":{},"interfaces/DbItemFullWithIndex.html":{},"interfaces/DbItemWithIndex.html":{},"interfaces/FirebaseDbItem.html":{},"interfaces/FirestoreItem.html":{},"interfaces/ImageItem.html":{},"interfaces/StorageItem.html":{}}}],["rxjs/operators",{"_index":49,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["same",{"_index":315,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{},"classes/SubCollectionWriter.html":{}}}],["save",{"_index":391,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{},"classes/SubCollectionWriter.html":{}}}],["saved",{"_index":397,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{},"classes/SubCollectionWriter.html":{}}}],["saving",{"_index":850,"title":{},"body":{"classes/SubCollectionWriter.html":{}}}],["scaffolding",{"_index":966,"title":{},"body":{"index.html":{}}}],["scenarios",{"_index":597,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["score",{"_index":801,"title":{},"body":{"classes/SubCollectionWriter.html":{}}}],["secure",{"_index":203,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{},"classes/SubCollectionWriter.html":{}}}],["see",{"_index":212,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["sell",{"_index":1026,"title":{},"body":{"license.html":{}}}],["separate",{"_index":393,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["separately",{"_index":903,"title":{},"body":{"classes/SubCollectionWriter.html":{}}}],["separating",{"_index":860,"title":{},"body":{"classes/SubCollectionWriter.html":{}}}],["set",{"_index":544,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{},"classes/SubCollectionWriter.html":{}}}],["several",{"_index":439,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["shall",{"_index":1034,"title":{},"body":{"license.html":{}}}],["show",{"_index":819,"title":{},"body":{"classes/SubCollectionWriter.html":{}}}],["simple",{"_index":957,"title":{},"body":{"miscellaneous/functions.html":{}}}],["simplify",{"_index":849,"title":{},"body":{"classes/SubCollectionWriter.html":{}}}],["simultaneously",{"_index":776,"title":{},"body":{"classes/SubCollectionWriter.html":{}}}],["single",{"_index":178,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{},"classes/SubCollectionWriter.html":{}}}],["site",{"_index":840,"title":{},"body":{"classes/SubCollectionWriter.html":{}}}],["size",{"_index":878,"title":{},"body":{"classes/SubCollectionWriter.html":{}}}],["skip",{"_index":232,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["slow",{"_index":869,"title":{},"body":{"classes/SubCollectionWriter.html":{}}}],["slowing",{"_index":838,"title":{},"body":{"classes/SubCollectionWriter.html":{}}}],["small",{"_index":875,"title":{},"body":{"classes/SubCollectionWriter.html":{}}}],["software",{"_index":1014,"title":{},"body":{"license.html":{}}}],["solely",{"_index":224,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["sorted",{"_index":617,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"modules/AngularfirestoreWrapperModule.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{},"interfaces/DbItemFull.html":{},"interfaces/DbItemFullWithIndex.html":{},"interfaces/DbItemWithIndex.html":{},"interfaces/FirebaseDbItem.html":{},"interfaces/FirestoreItem.html":{},"interfaces/ImageItem.html":{},"interfaces/StorageItem.html":{},"classes/SubCollectionQuery.html":{},"classes/SubCollectionWriter.html":{}}}],["specified",{"_index":15,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{},"classes/SubCollectionQuery.html":{}}}],["speed",{"_index":774,"title":{},"body":{"classes/SubCollectionWriter.html":{}}}],["spelling",{"_index":530,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["split",{"_index":366,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["split.currentdoc",{"_index":368,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["split.subcollections",{"_index":369,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["splitdataintocurrentdocandsubcollections",{"_index":692,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["splitting",{"_index":785,"title":{},"body":{"classes/SubCollectionWriter.html":{}}}],["src/.../angularfirestore",{"_index":941,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["src/lib/angularfirestore",{"_index":6,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"modules/AngularfirestoreWrapperModule.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["src/lib/models/firestoreitem.ts",{"_index":729,"title":{},"body":{"interfaces/DbItemFull.html":{},"interfaces/DbItemFullWithIndex.html":{},"interfaces/DbItemWithIndex.html":{},"interfaces/FirebaseDbItem.html":{},"interfaces/FirestoreItem.html":{},"interfaces/ImageItem.html":{},"interfaces/StorageItem.html":{},"coverage.html":{}}}],["src/lib/sub",{"_index":752,"title":{},"body":{"classes/SubCollectionQuery.html":{},"classes/SubCollectionWriter.html":{},"coverage.html":{}}}],["started",{"_index":959,"title":{"index.html":{},"license.html":{}},"body":{}}],["statements",{"_index":908,"title":{},"body":{"coverage.html":{}}}],["still",{"_index":825,"title":{},"body":{"classes/SubCollectionWriter.html":{}}}],["storageitem",{"_index":743,"title":{"interfaces/StorageItem.html":{}},"body":{"interfaces/DbItemFull.html":{},"interfaces/DbItemFullWithIndex.html":{},"interfaces/DbItemWithIndex.html":{},"interfaces/FirebaseDbItem.html":{},"interfaces/FirestoreItem.html":{},"interfaces/ImageItem.html":{},"interfaces/StorageItem.html":{},"coverage.html":{}}}],["storagepath",{"_index":744,"title":{},"body":{"interfaces/DbItemFull.html":{},"interfaces/DbItemFullWithIndex.html":{},"interfaces/DbItemWithIndex.html":{},"interfaces/FirebaseDbItem.html":{},"interfaces/FirestoreItem.html":{},"interfaces/ImageItem.html":{},"interfaces/StorageItem.html":{}}}],["stored",{"_index":737,"title":{},"body":{"interfaces/DbItemFull.html":{},"interfaces/DbItemFullWithIndex.html":{},"interfaces/DbItemWithIndex.html":{},"interfaces/FirebaseDbItem.html":{},"interfaces/FirestoreItem.html":{},"interfaces/ImageItem.html":{},"interfaces/StorageItem.html":{},"index.html":{}}}],["string",{"_index":27,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{},"interfaces/DbItemFull.html":{},"interfaces/DbItemFullWithIndex.html":{},"interfaces/DbItemWithIndex.html":{},"interfaces/FirebaseDbItem.html":{},"interfaces/FirestoreItem.html":{},"interfaces/ImageItem.html":{},"interfaces/StorageItem.html":{},"classes/SubCollectionQuery.html":{},"classes/SubCollectionWriter.html":{}}}],["sub",{"_index":67,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{},"classes/SubCollectionQuery.html":{},"classes/SubCollectionWriter.html":{}}}],["sub/sub",{"_index":375,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{},"classes/SubCollectionWriter.html":{}}}],["subcoll.name",{"_index":384,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["subcollection",{"_index":758,"title":{},"body":{"classes/SubCollectionQuery.html":{},"classes/SubCollectionWriter.html":{}}}],["subcollectionfs",{"_index":387,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["subcollectionkey",{"_index":378,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["subcollectionkey).docid",{"_index":386,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["subcollectionkey).subcollectionwriters",{"_index":385,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["subcollectionqueries",{"_index":202,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{},"classes/SubCollectionQuery.html":{},"classes/SubCollectionWriter.html":{}}}],["subcollectionqueries).pipe",{"_index":216,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["subcollectionqueries.foreach(col",{"_index":684,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["subcollectionqueries.foreach(subcollectionquery",{"_index":243,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["subcollectionqueries.length",{"_index":237,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["subcollectionquery",{"_index":66,"title":{"classes/SubCollectionQuery.html":{}},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{},"classes/SubCollectionQuery.html":{},"coverage.html":{}}}],["subcollectionquery.docid",{"_index":296,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["subcollectionquery.name",{"_index":299,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["subcollectionquery.queryfn",{"_index":246,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["subcollectionquery.subcollectionqueries",{"_index":263,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["subcollectionquery.subcollectionqueries).pipe",{"_index":272,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["subcollections",{"_index":104,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{},"classes/SubCollectionQuery.html":{},"classes/SubCollectionWriter.html":{}}}],["subcollections[key",{"_index":697,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["subcollectionvalue",{"_index":379,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["subcollectionvalue.foreach((arrayvalue",{"_index":409,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["subcollectionwriter",{"_index":70,"title":{"classes/SubCollectionWriter.html":{}},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{},"classes/SubCollectionWriter.html":{},"coverage.html":{}}}],["subcollectionwriters",{"_index":365,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{},"classes/SubCollectionWriter.html":{}}}],["subcollectionwriters.find(subcoll",{"_index":383,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["subcollectionwriters.foreach(col",{"_index":480,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["subcols",{"_index":901,"title":{},"body":{"classes/SubCollectionWriter.html":{}}}],["subdoc",{"_index":276,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["subdocandcollections",{"_index":270,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["subdocfs",{"_index":268,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["subdocid",{"_index":382,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["subdocid).pipe",{"_index":405,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["subdocupdatevalue",{"_index":543,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["subject",{"_index":1030,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":1024,"title":{},"body":{"license.html":{}}}],["substantial",{"_index":1036,"title":{},"body":{"license.html":{}}}],["subsubcollectionwriters",{"_index":381,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["subsubcollectionwriters).pipe",{"_index":411,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["subwriter",{"_index":403,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["subwriters",{"_index":377,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["subwriters.length",{"_index":413,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["subwriters.push(subwriter",{"_index":408,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["successfully",{"_index":359,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["successmessage",{"_index":706,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["such",{"_index":89,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["super",{"_index":417,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["support",{"_index":679,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["sure",{"_index":168,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["switch",{"_index":513,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["switchmap",{"_index":46,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["switchmap((docfslist",{"_index":648,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["switchmap((doclist",{"_index":657,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["t",{"_index":339,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["table",{"_index":928,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":927,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":47,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["take(1",{"_index":361,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["takes",{"_index":574,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["tap",{"_index":48,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["tap((action",{"_index":143,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["tap(d",{"_index":251,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["tap(data",{"_index":308,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["tap(groupeddata",{"_index":446,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["tap(item",{"_index":674,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["tap(lists",{"_index":642,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["tap(pathlist",{"_index":668,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["tap(ref",{"_index":352,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["tap(sub",{"_index":415,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["tap(subdoc",{"_index":273,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["tap(val",{"_index":279,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["terms",{"_index":830,"title":{},"body":{"classes/SubCollectionWriter.html":{}}}],["test",{"_index":991,"title":{},"body":{"index.html":{}}}],["tests",{"_index":990,"title":{},"body":{"index.html":{}}}],["text",{"_index":803,"title":{},"body":{"classes/SubCollectionWriter.html":{}}}],["think",{"_index":422,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["this.add$(currentdoc",{"_index":373,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["this.add$(data",{"_index":340,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["this.adddeep$(arrayvalue",{"_index":410,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["this.adddeep$(olddata",{"_index":504,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["this.adddeep$(subcollectionvalue",{"_index":404,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["this.basecollectionfs",{"_index":341,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["this.basecollectionfs.doc(id",{"_index":127,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["this.batchcommit(batch",{"_index":537,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["this.defaultdocid",{"_index":297,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{},"classes/SubCollectionWriter.html":{}}}],["this.delete$(doc",{"_index":550,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["this.deletedeep$(docfs",{"_index":507,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["this.deletemultiple$(docfslist",{"_index":649,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["this.deletemultiple$(doclist",{"_index":658,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["this.deletemultiple$(docsfs",{"_index":634,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["this.deletemultiple$(docsfs).pipe",{"_index":663,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["this.firestore.doc(docref.path",{"_index":165,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["this.firestore.docfs(item.path).subcollectionquery(subcollectionquery.name",{"_index":247,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["this.getbatchfromdeleteiteminindexeddocs(array",{"_index":624,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["this.getfirestoredocumentsdeep$(doc",{"_index":639,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["this.getfirestoredocumentsdeep$(docfs",{"_index":656,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["this.getfirestoredocumentsfromdbitem(item",{"_index":662,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["this.getpathsfromdbitemdeeprecursivehelper(dbitem",{"_index":678,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["this.getpathsfromdbitemdeeprecursivehelper(item",{"_index":667,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["this.handleres$(res",{"_index":174,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["this.listenforcollection$(collectionfs",{"_index":249,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["this.listenforcollection$(ref",{"_index":321,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["this.listenforcollection$(this.basecollectionfs",{"_index":121,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["this.listenforcollectionrecursively(nextlevelpath",{"_index":330,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["this.listenfordoc",{"_index":126,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["this.listenfordoc$(docfs",{"_index":226,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["this.listenfordocandsubcollections(docfs",{"_index":209,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["this.listenfordocdeep$(docfs",{"_index":500,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["this.listenfordocdeep$(newdocfs",{"_index":512,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["this.listenfordocdeeprecursivehelper$(docfs",{"_index":215,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["this.listenfordocdeeprecursivehelper$(subdocfs",{"_index":271,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["this.ngfirestore.collection(docfs.ref.parent",{"_index":499,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["this.ngfirestore.collection(path",{"_index":318,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["this.ngfirestore.doc(currentdata.path).collection(subcollectionkey",{"_index":388,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["this.ngfirestore.doc(d.path",{"_index":269,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["this.ngfirestore.doc(item.path).collection(collectionkey).ref.path",{"_index":326,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["this.ngfirestore.doc(newdata.path",{"_index":511,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["this.ngfirestore.doc(path",{"_index":161,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["this.ngfirestore.doc(ref.path",{"_index":357,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["this.ngfirestore.firestore.batch",{"_index":541,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["this.removedataextrasrecursivehelper(d",{"_index":486,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["this.removedataextrasrecursivehelper(datatobecleaned",{"_index":467,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["this.removedataextrasrecursivehelper(dbitem[col.name",{"_index":488,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["this.removedataextrasrecursivehelper(olddata",{"_index":502,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["this.snackbar.open('error",{"_index":711,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["this.snackbar.open('success",{"_index":349,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["this.splitdataintocurrentdocandsubcollections(data",{"_index":367,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["this.update$(data",{"_index":548,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["this.updatedeeptobatchhelper(data",{"_index":536,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["this.updatedeeptobatchhelper(subdocupdatevalue",{"_index":546,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["this.updatemultiple$(docsfs",{"_index":558,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["those",{"_index":828,"title":{},"body":{"classes/SubCollectionWriter.html":{}}}],["thousands",{"_index":818,"title":{},"body":{"classes/SubCollectionWriter.html":{}}}],["through",{"_index":456,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["throw",{"_index":145,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["throw_doc_not_found",{"_index":100,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{},"miscellaneous/enumerations.html":{}}}],["throwerror('document",{"_index":140,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["thrown..still",{"_index":652,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["thumburl",{"_index":749,"title":{},"body":{"interfaces/DbItemFull.html":{},"interfaces/DbItemFullWithIndex.html":{},"interfaces/DbItemWithIndex.html":{},"interfaces/FirebaseDbItem.html":{},"interfaces/FirestoreItem.html":{},"interfaces/ImageItem.html":{},"interfaces/StorageItem.html":{}}}],["time",{"_index":575,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{},"classes/SubCollectionWriter.html":{}}}],["timestamp",{"_index":733,"title":{},"body":{"interfaces/DbItemFull.html":{},"interfaces/DbItemFullWithIndex.html":{},"interfaces/DbItemWithIndex.html":{},"interfaces/FirebaseDbItem.html":{},"interfaces/FirestoreItem.html":{},"interfaces/ImageItem.html":{},"interfaces/StorageItem.html":{}}}],["title",{"_index":746,"title":{},"body":{"interfaces/DbItemFull.html":{},"interfaces/DbItemFullWithIndex.html":{},"interfaces/DbItemWithIndex.html":{},"interfaces/FirebaseDbItem.html":{},"interfaces/FirestoreItem.html":{},"interfaces/ImageItem.html":{},"interfaces/StorageItem.html":{}}}],["todo",{"_index":166,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["together",{"_index":421,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["toindex",{"_index":562,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["tort",{"_index":1058,"title":{},"body":{"license.html":{}}}],["transferarrayitem",{"_index":53,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["transferarrayitem(usedpreviousarray",{"_index":602,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["transforms",{"_index":517,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["true",{"_index":709,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{},"classes/SubCollectionWriter.html":{},"miscellaneous/functions.html":{}}}],["ts",{"_index":154,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["tslib",{"_index":931,"title":{},"body":{"dependencies.html":{}}}],["tslint:disable",{"_index":469,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["turn",{"_index":699,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["turns",{"_index":949,"title":{},"body":{"miscellaneous/functions.html":{}}}],["type",{"_index":23,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{},"interfaces/DbItemFull.html":{},"interfaces/DbItemFullWithIndex.html":{},"interfaces/DbItemWithIndex.html":{},"interfaces/FirebaseDbItem.html":{},"interfaces/FirestoreItem.html":{},"interfaces/ImageItem.html":{},"interfaces/StorageItem.html":{},"classes/SubCollectionQuery.html":{},"classes/SubCollectionWriter.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["ugliness",{"_index":427,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["ugly",{"_index":419,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["uncomment",{"_index":258,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["undefined",{"_index":183,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["under",{"_index":395,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{},"classes/SubCollectionWriter.html":{}}}],["unit",{"_index":989,"title":{},"body":{"index.html":{}}}],["unlimited",{"_index":316,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["unsub",{"_index":363,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["until",{"_index":95,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["up",{"_index":786,"title":{},"body":{"classes/SubCollectionWriter.html":{}}}],["update",{"_index":259,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{},"classes/SubCollectionWriter.html":{}}}],["update$(data",{"_index":516,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["updated",{"_index":520,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["updatedeep",{"_index":538,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["updatedeep$(data",{"_index":534,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["updatedeeptobatchhelper(data",{"_index":540,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["updatedocbypath$(path",{"_index":547,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["updateindexafterdeleteinindexeddocs(array",{"_index":623,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["updatemultiple$(docs",{"_index":551,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["updatemultiplebypaths$(paths",{"_index":554,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["updates",{"_index":576,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["updating",{"_index":523,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["url",{"_index":748,"title":{},"body":{"interfaces/DbItemFull.html":{},"interfaces/DbItemFullWithIndex.html":{},"interfaces/DbItemWithIndex.html":{},"interfaces/FirebaseDbItem.html":{},"interfaces/FirestoreItem.html":{},"interfaces/ImageItem.html":{},"interfaces/StorageItem.html":{},"classes/SubCollectionWriter.html":{}}}],["use",{"_index":569,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{},"index.html":{},"license.html":{}}}],["usecopy",{"_index":565,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["used",{"_index":9,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{},"classes/SubCollectionQuery.html":{}}}],["usedarray",{"_index":582,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["usedarray.slice(lowestindex",{"_index":587,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["usedcurrentarray",{"_index":600,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["usedcurrentarray.slice(currentindex",{"_index":609,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["usedpreviousarray",{"_index":599,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["usedpreviousarray.slice(previousindex",{"_index":611,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["user",{"_index":823,"title":{},"body":{"classes/SubCollectionWriter.html":{},"miscellaneous/functions.html":{}}}],["user's",{"_index":836,"title":{},"body":{"classes/SubCollectionWriter.html":{}}}],["using",{"_index":394,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{},"classes/SubCollectionWriter.html":{}}}],["value",{"_index":294,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{},"classes/SubCollectionWriter.html":{}}}],["variants",{"_index":204,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{},"classes/SubCollectionWriter.html":{}}}],["version",{"_index":963,"title":{},"body":{"index.html":{}}}],["very",{"_index":831,"title":{},"body":{"classes/SubCollectionWriter.html":{}}}],["via",{"_index":993,"title":{},"body":{"index.html":{}}}],["want",{"_index":821,"title":{},"body":{"classes/SubCollectionWriter.html":{}}}],["warranties",{"_index":1043,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":1039,"title":{},"body":{"license.html":{}}}],["watch",{"_index":571,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["way",{"_index":132,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{},"classes/SubCollectionWriter.html":{}}}],["way..also",{"_index":424,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["whenever",{"_index":130,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["where('price",{"_index":762,"title":{},"body":{"classes/SubCollectionQuery.html":{}}}],["whether",{"_index":1056,"title":{},"body":{"license.html":{}}}],["wish",{"_index":460,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{},"classes/SubCollectionWriter.html":{}}}],["within",{"_index":568,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["without",{"_index":842,"title":{},"body":{"classes/SubCollectionWriter.html":{},"license.html":{}}}],["work",{"_index":852,"title":{},"body":{"classes/SubCollectionWriter.html":{}}}],["working",{"_index":886,"title":{},"body":{"classes/SubCollectionWriter.html":{}}}],["works",{"_index":653,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["worry",{"_index":857,"title":{},"body":{"classes/SubCollectionWriter.html":{}}}],["wrapper",{"_index":10,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{},"classes/SubCollectionWriter.html":{}}}],["wrapper.module.ts",{"_index":719,"title":{},"body":{"modules/AngularfirestoreWrapperModule.html":{}}}],["wrapper.ts",{"_index":7,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["write",{"_index":784,"title":{},"body":{"classes/SubCollectionWriter.html":{}}}],["writebatch",{"_index":57,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["writer",{"_index":71,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["writer.ts",{"_index":765,"title":{},"body":{"classes/SubCollectionWriter.html":{},"coverage.html":{}}}],["writer.ts:102",{"_index":902,"title":{},"body":{"classes/SubCollectionWriter.html":{}}}],["writer.ts:109",{"_index":890,"title":{},"body":{"classes/SubCollectionWriter.html":{}}}],["writer.ts:112",{"_index":904,"title":{},"body":{"classes/SubCollectionWriter.html":{}}}],["writer.ts:117",{"_index":897,"title":{},"body":{"classes/SubCollectionWriter.html":{}}}],["writing",{"_index":402,"title":{},"body":{"interfaces/AddDocumentWrapper.html":{},"interfaces/CurrentDocSubCollectionSplit.html":{}}}],["written",{"_index":891,"title":{},"body":{"classes/SubCollectionWriter.html":{}}}],["zipcode",{"_index":789,"title":{},"body":{"classes/SubCollectionWriter.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/AddDocumentWrapper.html":{"url":"interfaces/AddDocumentWrapper.html","title":"interface - AddDocumentWrapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AddDocumentWrapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/angularfirestore-wrapper.ts\n        \n\n            \n                Description\n            \n            \n                Used as a wrapper for adding a document, either doc or path must be specified, helps when adding multiple \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        data\n                                \n                                \n                                            Optional\n                                        docFs\n                                \n                                \n                                            Optional\n                                        path\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:     A\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     A\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The data to be added \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        docFs\n                                    \n                                \n                                \n                                    \n                                        docFs:     AngularFirestoreDocument\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     AngularFirestoreDocument\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    AngularFirestoreDocument of the Document \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        path\n                                    \n                                \n                                \n                                    \n                                        path:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The path to the Document \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {combineLatest, from, Observable, of} from 'rxjs';\nimport {\n  Action,\n  AngularFirestore,\n  AngularFirestoreDocument, DocumentChangeAction,\n  DocumentChangeType,\n  DocumentReference,\n  DocumentSnapshotExists\n} from '@angular/fire/firestore';\nimport {CollectionReference, DocumentSnapshot} from '@angular/fire/firestore/interfaces';\nimport {catchError, filter, map, mergeMap, switchMap, take, tap} from 'rxjs/operators';\nimport {AngularFirestoreCollection} from '@angular/fire/firestore/collection/collection';\nimport {moveItemInArray, transferArrayItem} from '@angular/cdk/drag-drop';\n\nimport firebase from 'firebase';\nimport WriteBatch = firebase.firestore.WriteBatch;\nimport FirestoreError = firebase.firestore.FirestoreError;\nimport DocumentData = firebase.firestore.DocumentData;\nimport {FirestoreItem, DbItemFullWithIndex} from './models/firestoreItem';\nimport {SubCollectionQuery} from './sub-collection-query';\nimport {SubCollectionWriter} from './sub-collection-writer';\n\nimport {\n  getRefFromPath,\n  getCollectionFsFromPath,\n  getDocFsFromPath,\n  getParentDocFsFromPath,\n  convertTimestampToDate,\n  addCreatedDate,\n  addModifiedDate\n} from './angularfirestore-helpers';\n\n\n/** Used as a wrapper for adding a document, either doc or path must be specified, helps when adding multiple */\nexport interface AddDocumentWrapper {\n  /** The data to be added */\n  data: A;\n\n  /** AngularFirestoreDocument of the Document */\n  docFs?: AngularFirestoreDocument;\n\n  /** The path to the Document */\n  path?: string;\n}\n\n\nexport enum DocNotExistAction {\n  /** returns a null object */\n  RETURN_NULL,\n\n  /** return all the extras such as ref, path and so on but no data, kinda just ignores that the doc isn't there */\n  RETURN_ALL_BUT_DATA,\n\n  /** do not return at all until it does exist */\n  FILTER,\n\n  /** return doc not found error 'doc_not_found' */\n  THROW_DOC_NOT_FOUND,\n}\n\n\n/** Used internally */\ninterface CurrentDocSubCollectionSplit {\n  currentDoc: FirestoreItem;\n  subCollections: {[index: string]: any};\n}\n\n\n/**\n * Main Wrapper.\n *\n *\n *\n */\nexport class AngularFirestoreWrapper {\n\n  /**\n   * Constructor for AngularFirestoreWrapper\n   *\n   * @param ngFirestore The AngularFirestore injected from an Angular Class\n   * @param defaultDocId The default name of any Document when no name is given\n   */\n  constructor(private ngFirestore: AngularFirestore,\n              private defaultDocId: string = 'data') {}\n\n  /* ----------  LISTEN -------------- */\n\n  // listenForChangesInBaseCollection$(): Observable {\n  //   return this.listenForCollection$(this.baseCollectionFs);\n  // }\n\n  // protected listenForDocInBaseCollectionById(id: string, actionIfNotExist: DocNotExistAction = DocNotExistAction.RETURN_ALL_BUT_DATA):\n  //   Observable {\n  //   return this.listenForDoc$(\n  //     this.baseCollectionFs.doc(id),\n  //     actionIfNotExist\n  //   );\n  // }\n\n  protected listenForDoc$(docFs: AngularFirestoreDocument,\n                                                   actionIfNotExist: DocNotExistAction = DocNotExistAction.RETURN_ALL_BUT_DATA):\n    Observable {\n    /**\n     * Returns an observable that will emit whenever the ref changes in any way.\n     * Also adds the id and ref to the object.\n     */\n    const res$ = docFs.snapshotChanges().pipe(\n      // mergeMap((action) => {\n      //   if (!action.payload.exists) { return throwError('Document Does not exists'); }\n      //   else { return of(action); }\n      // }),\n\n      tap((action: Action>) => {\n        if (!action.payload.exists && actionIfNotExist === DocNotExistAction.THROW_DOC_NOT_FOUND) {\n          throw new Error('doc_not_found');\n        }\n      }),\n\n      filter((action: Action>) => {\n        return !(!action.payload.exists && actionIfNotExist === DocNotExistAction.FILTER);\n      }),\n      map((action: Action>) => {\n\n        if (action.payload.exists || actionIfNotExist === DocNotExistAction.RETURN_ALL_BUT_DATA) {\n          const data = action.payload.data() as A;\n          // const payload: DocumentSnapshotExists = action.payload as DocumentSnapshotExists;\n          // @ts-ignore\n          const id = action.payload.id;\n          // @ts-ignore\n          const docRef = action.payload.ref;\n          const path = docRef.path;\n          const _docFs = this.ngFirestore.doc(path);\n          const isExists: boolean = action.payload.exists;\n\n          // const afDocRef = this.fireStore.doc(docRef.path) as AngularFirestoreDocument;  // TODO make sure this also copies the query\n          return { ...data, id, path, ref: docRef, docFs: _docFs, isExists };\n        } else if (actionIfNotExist === DocNotExistAction.RETURN_NULL) { /* doc doesn't exist */\n          return null;\n        }\n      }),\n      map((data) => {\n        if (data != null) {\n          return convertTimestampToDate(data);\n        } else {\n          return data;\n        }\n      }),\n\n    ) as Observable;\n\n    return this.handleRes$(res$, 'listenForDoc$', {docFs});\n  }\n\n  // TODO make listentoTypes and addExtras a single attribute called options\n  protected listenForCollection$(collectionFs: AngularFirestoreCollection,\n                                                          listenToTypes?: DocumentChangeType[]): Observable {\n    /**\n     * Returns an observable that will emit whenever the ref changes in any way.\n     * Also adds the id and ref to the object.\n     */\n\n    if (listenToTypes === undefined || listenToTypes === null || listenToTypes.length []) => actions.filter(a => {\n        return listenToTypes.includes(a.type);\n      })),\n      map((actions: DocumentChangeAction[]) => actions.map(a => {\n        const data = a.payload.doc.data() as A;\n\n        const id = a.payload.doc.id;\n        const docRef = a.payload.doc.ref;\n        const path = docRef.path;\n        const _docFs = this.ngFirestore.doc(path);\n        // const afDocRef = this.fireStore.doc(docRef.path) as AngularFirestoreDocument; // TODO make sure this also copies the query\n        return { ...data, id, path, ref: docRef, docFs: _docFs };\n\n      })),\n      map((datas: A[]) => datas.map(data => {\n        return convertTimestampToDate(data);\n      }))\n    ) as Observable;\n\n    return this.handleRes$(res$, 'listenForCollection$', {collectionFs, listenToTypes});\n  }\n\n\n  /**\n   * Wrapper for listenForDocDeepRecursiveHelper$ so that we can cast the return to the correct type\n   * All logic is in listenForDocDeepRecursiveHelper$.\n   *\n   * @link SubCollectionQuery\n   *\n   * E.x:\n   *      const subCollectionQueries: SubCollectionQuery[] = [\n   *         { name: 'data' },\n   *         { name: 'secure' },\n   *         { name: 'variants' },\n   *         { name: 'images',\n   *           queryFn: ref => ref.orderBy('index'),\n   *           collectionWithNames: [\n   *             { name: 'secure'}\n   *           ]\n   *         },\n   *     ];\n   *\n   *     this.listenForDocAndSubCollections(docFs, collections)\n   *\n   * @param docFs - a docFs with potential queryFn\n   * @param subCollectionQueries - see example\n   */\n  protected listenForDocDeep$(docFs: AngularFirestoreDocument,\n                                                       subCollectionQueries: SubCollectionQuery[]): Observable {\n\n    const res$ = this.listenForDocDeepRecursiveHelper$(docFs, subCollectionQueries).pipe(\n      map(data => data as A)\n    );\n\n    return this.handleRes$(res$, 'listenForDocDeep$', {docFs, subCollectionQueries}, null, 'Failed To read doc');\n  }\n\n  /**\n   * DO NOT CALL THIS METHOD, meant to be used solely by listenForDocAndSubCollections$\n   */\n  protected listenForDocDeepRecursiveHelper$(\n    docFs: AngularFirestoreDocument,\n    subCollectionQueries: SubCollectionQuery[],\n    actionIfNotExist: DocNotExistAction = DocNotExistAction.RETURN_NULL): Observable {\n\n    /* Listen for the docFs*/\n    return this.listenForDoc$(docFs, actionIfNotExist).pipe(\n      //\n      // catchError(err => {\n      //   if (err === 'Document Does not exists') { return of(null); } /* if a doc is deleted we just skip it */\n      //   else { throw err; }\n      // }),\n\n      filter(doc => doc !== null),\n\n      mergeMap((item: FirestoreItem) => {\n\n        if (item === null) { return of(item); }\n        if (subCollectionQueries.length > = [];\n\n        /* Iterate over each sub collection we have given and create collection listeners*/\n        subCollectionQueries.forEach(subCollectionQuery => {\n\n          // console.log(subCollectionQuery);\n\n          const collectionFs = docFs.collection(subCollectionQuery.name, subCollectionQuery.queryFn);\n          // const collectionFs = this.firestore.docFs(item.path).subCollectionQuery(subCollectionQuery.name, subCollectionQuery.queryFn);\n\n          const collectionListener = this.listenForCollection$(collectionFs, null).pipe(\n            // tap(d => console.log(d)),\n            // filter(docs => docs.length > 0), // skip empty collections or if the subCollectionQuery doesnt exist\n            /* Uncomment to see data on each update */\n            // tap(d => console.log(d)),\n\n            /* Listen For and Add any Potential Sub Docs*/\n            mergeMap((docs: FirestoreItem[]) => {\n              if (!subCollectionQuery.subCollectionQueries) { return of(docs); }\n\n              const docListeners: Array> = [];\n\n              docs.forEach(d => {\n                const subDocFs = this.ngFirestore.doc(d.path);\n                const subDocAndCollections$ = this.listenForDocDeepRecursiveHelper$(subDocFs,\n                  subCollectionQuery.subCollectionQueries).pipe(\n                  // tap(subDoc => console.log(subDoc)),\n                  // filter(subDoc => subDoc !== null),\n                  map((subDoc: FirestoreItem) => {\n                    return {...d, ...subDoc } as FirestoreItem;\n                  }),\n                  // tap(val => console.log(val))\n                );\n                docListeners.push(subDocAndCollections$);\n              });\n\n              // console.log(docListeners);\n\n              if (docListeners.length  console.log(val))\n              );\n            }), /* End of Listening for sub docs */\n            // tap(val => console.log(val)),\n\n            /* If docs.length === 1 and the id is defaultDocId or the given docId it means we are in a sub subCollectionQuery\n            and we only care about the data. So we remove the array and just make it one object with the\n            subCollectionQuery name as key and docs[0] as value */\n            map((docs: FirestoreItem[]) => {\n              const docId = subCollectionQuery.docId !== undefined ? subCollectionQuery.docId : this.defaultDocId;\n\n              if (docs.length === 1 && docs[0].id === docId) { return {[subCollectionQuery.name]: docs[0]}; }\n              else { return {[subCollectionQuery.name]: docs}; }\n            }),\n            // tap(d => console.log(d)),\n          );\n\n          collectionListeners.push(collectionListener);\n        });\n\n        /* Finally return the combined collection listeners*/\n        return combineLatest(collectionListeners).pipe(\n          map((datas: Array) => {\n            const datasMap = {};\n\n            datas.forEach((collection) => {\n\n              for (const [key, value] of Object.entries(collection)) {\n                datasMap[key] = value;\n              }\n            });\n            return datasMap;\n          }),\n\n          map((data: DocumentData) => {\n            return {...item, ...data};\n          }),\n          // tap(data => console.log(data)),\n        );\n      })\n    );\n  }\n\n  protected listenForCollectionRecursively(path: string,\n                                                                    collectionKey: string,\n                                                                    orderKey?: string): Observable {\n\n    /**\n     * Listens for collections inside collections with the same name to an unlimited depth and returns all of it as an array.\n     */\n    let ref;\n\n    if (orderKey != null) {\n      ref = this.ngFirestore.collection(path, r => r.orderBy(orderKey));\n    } else {\n      ref = this.ngFirestore.collection(path);\n    }\n\n    return this.listenForCollection$(ref, null).pipe(\n      mergeMap((items: A[]) => {\n\n        if (items.length > = [];\n\n        for (const item of items) {\n\n\n          const nextLevelPath = this.ngFirestore.doc(item.path).collection(collectionKey).ref.path;  // one level deeper\n\n          const nextLevelItems$ = this.listenForCollectionRecursively(nextLevelPath, collectionKey, orderKey).pipe(\n            map((nextLevelItems: A[]) => {\n              if (nextLevelItems.length > 0) { return {...item, [collectionKey]: nextLevelItems } as A; }\n              else {  return {...item} as A; }  // dont include an empty array\n            }),\n          );\n          nextLevelObs.push(nextLevelItems$);\n        }\n\n        return combineLatest(nextLevelObs).pipe(\n          tap(val => console.log(val))\n        );\n      }),\n\n    );\n  }\n\n  /* ----------  ADD -------------- */\n\n  // protected addToBaseCollection$(data: T, id?: string): Observable {\n  //   return this.add$(data, this.baseCollectionFs, id);\n  // }\n\n  protected add$(data: A, collectionFs: AngularFirestoreCollection, id?: string): Observable {\n    return of(null).pipe(\n      mergeMap(() => {\n        let res$: Observable;\n\n        data = addCreatedDate(data);\n        data = addModifiedDate(data);\n\n        if (id !== undefined) { res$ = from(collectionFs.doc(id).set(data)); }\n        else { res$ = from(collectionFs.add(data)); }\n\n        res$ = res$.pipe(\n          // tap(() => this.snackBar.open('Success', 'Added', {duration: 1000})),\n          tap(ref => console.log(ref)),\n          tap(() => console.log(data)),\n          map((ref: DocumentReference) => {\n            if (id === undefined) {\n              return {...data, id: ref.id, path: ref.path, ref, docFs: this.ngFirestore.doc(ref.path) };\n            } else {\n              const path = collectionFs.ref.path + '/' + id;\n              return {...data, id, path, docFs: this.ngFirestore.doc(path) };\n            }\n          }),\n        );\n\n        return this.handleRes$(res$, 'add$', {data, collectionFs, id}, 'Document Added Successfully', 'Document failed to add').pipe(\n          take(1) /* No need to unsub */\n        );\n      })\n    );\n  }\n\n  protected addDeep$(data: A,\n                                              collectionFs: AngularFirestoreCollection,\n                                              subCollectionWriters?: SubCollectionWriter[],\n                                              docId?: string): Observable {\n\n    const split = this.splitDataIntoCurrentDocAndSubCollections(data, subCollectionWriters);\n    const currentDoc = split.currentDoc;\n    const subCollections = split.subCollections;\n\n    // console.log(currentDoc, subCollections);\n\n    // console.log(Object.entries(subCollections).keys(), Object.entries(subCollections).values());\n\n    const res$ = this.add$(currentDoc as A, collectionFs, docId).pipe(\n      // tap(val => console.log(val)),\n\n      /* Add Sub/sub collections*/\n      mergeMap((currentData: A) => {\n\n        const subWriters: Array> = [];\n\n        for (const [subCollectionKey, subCollectionValue] of Object.entries(subCollections)) {\n          let subSubCollectionWriters: SubCollectionWriter[]; // undefined in no subCollectionWriters\n          let subDocId: string;\n\n          if (subCollectionWriters) {\n            subSubCollectionWriters = subCollectionWriters.find(subColl => subColl.name === subCollectionKey).subCollectionWriters;\n            subDocId = subCollectionWriters.find(subColl => subColl.name === subCollectionKey).docId;\n          }\n\n          const subCollectionFs = this.ngFirestore.doc(currentData.path).collection(subCollectionKey);\n\n          /* Handle array and object differently\n          * For example if array and no docId is given it means we should save each entry as a separate doc.\n          * If a docId is given should save it using that docId under a single doc.\n          * If not an array it will always be saved as a single doc, using this.defaultDocId as the default docId if none is given */\n          if (Array.isArray(subCollectionValue)) {\n            if (subDocId !== undefined) { /* not undefined so save it as a single doc under that docId */\n\n              /* the pipe only matters for the return subCollectionValue not for writing the data */\n              const subWriter = this.addDeep$(subCollectionValue as FirestoreItem, subCollectionFs, subSubCollectionWriters, subDocId).pipe(\n                map(item => {\n                  // return {[key]: item};\n                  return {key: subCollectionKey, value: item}; /* key and subCollectionValue as separate k,v properties */\n                })\n              );\n              subWriters.push(subWriter);\n\n            } else { /* docId is undefined so we save each object in the array separate */\n              subCollectionValue.forEach((arrayValue: FirestoreItem) => {\n\n                /* the pipe only matters for the return subCollectionValue not for writing the data */\n                const subWriter = this.addDeep$(arrayValue, subCollectionFs, subSubCollectionWriters).pipe(\n                  map(item => {\n                    // return {[key]: [item]};\n                    /* key and subCollectionValue as separate k,v properties -- subCollectionValue in an array */\n                    return {key: subCollectionKey, value: [item]};\n                  })\n                );\n\n                subWriters.push(subWriter);\n              });\n            }\n          } else { /* Not an array so a single Object*/\n            subDocId = subDocId !== undefined ? subDocId : this.defaultDocId;\n\n            /* the pipe only matters for the return subCollectionValue not for writing the data */\n            const subWriter = this.addDeep$(subCollectionValue, subCollectionFs, subSubCollectionWriters, subDocId).pipe(\n              map(item => {\n                // return {[key]: item};\n                return {key: subCollectionKey, value: item}; /* key and subCollectionValue as separate k,v properties */\n              })\n            );\n\n            subWriters.push(subWriter);\n          }\n        } /* end of iteration */\n\n        if (subWriters.length > 0) { /* if subWriters.length > 0 it means we need to handle the subwriters */\n\n          /* the pipe only matters for the return value not for writing the data */\n          return combineLatest(subWriters).pipe(\n            // tap(sub => console.log(sub)),\n\n            // TODO super duper ugly way of joining the data together but I cannot think of a better way..also it doesnt really matter.\n            // TODO The ugliness only relates to how the return object looks after we add, it has no effect on how the object is saved on\n            // TODO firestore.\n\n            map((docDatas: Array>) => { /* List of sub docs*/\n              const groupedData = {};\n\n              docDatas.forEach((doc: {[index: string]: any}) => { /* iterate over each doc */\n\n                const key = doc.key;\n                const value = doc.value;\n\n                /* if groupedData has the key already it means that the several docs have the same key..so an array */\n                if (groupedData.hasOwnProperty(key) && Array.isArray(groupedData[key])) {\n                  /* groupedData[key] must be an array since it already exist..add this doc.value to the array */\n                  (groupedData[key] as Array).push(value[0]);\n                } else {\n                  groupedData[key] = value;\n                }\n              });\n\n              return groupedData as object;\n            }),\n\n            // tap(groupedData => console.log(groupedData)),\n\n            map((groupedData: A) => {\n              return {...currentData, ...groupedData } as A;\n            }),\n            // tap(d => console.log(d)),\n          );\n        } else {\n          return of(currentData);\n        }\n      })\n    );\n\n    return this.handleRes$(res$, 'addDeep$', {data, collectionFs, subCollectionWriters, docId}, 'Document Added Successfully', 'Document failed to add').pipe(\n      // tap(d => console.log(d)),\n      take(1) /* just to make sure it only emits once */\n    );\n  }\n\n\n  /* ----------  EDIT -------------- */\n\n  /**\n   * Goes through each level and removes DbItemExtras\n   * In case you wish to save the data\n   */\n  protected cleanExtrasFromData(data: A, subCollectionWriters: SubCollectionWriter[]): A {\n\n    // const dataToBeCleaned = cloneDeep(data); /* clone data so we dont modify the original */\n    const dataToBeCleaned = data;\n    return this.removeDataExtrasRecursiveHelper(dataToBeCleaned, subCollectionWriters) as A;\n  }\n\n  protected removeDataExtrasRecursiveHelper(dbItem: A, subCollectionWriters: SubCollectionWriter[]): A {\n\n    // tslint:disable-next-line:no-console\n    console.time('removeDataExtrasRecursiveHelper');\n\n    // const extraPropertyNames: string[] = Object.getOwnPropertyNames(new DbItemExtras());\n    const extraPropertyNames: string[] = ['id', 'path', 'ref', 'docFs', 'isExists'];\n\n    /* Current level delete */\n    for (const extraPropertyName of extraPropertyNames) {\n      delete dbItem[extraPropertyName];\n    }\n\n    subCollectionWriters.forEach(col => {\n      if (Array.isArray(dbItem[col.name])) { /* property is array so will contain multiple docs */\n\n        const docs: FirestoreItem[] = dbItem[col.name];\n        docs.forEach(d => {\n\n          if (col.subCollectionWriters) {\n            this.removeDataExtrasRecursiveHelper(d, col.subCollectionWriters);\n          } else {\n            /*  */\n            for (const extraPropertyName of extraPropertyNames) {\n              delete dbItem[col.name][extraPropertyName];\n            }\n          }\n        });\n\n      } else { /* not an array so a single doc*/\n\n        if (col.subCollectionWriters) {\n          this.removeDataExtrasRecursiveHelper(dbItem[col.name], col.subCollectionWriters);\n        } else {\n          for (const extraPropertyName of extraPropertyNames) {\n            delete dbItem[col.name][extraPropertyName];\n          }\n        }\n\n      }\n    });\n\n    // tslint:disable-next-line:no-console\n    console.timeEnd('removeDataExtrasRecursiveHelper');\n\n    return dbItem;\n\n  }\n\n  /**\n   * Firestore doesn't allow you do change the name or move a doc directly so you will have to create a new doc under the new name\n   * and then delete the old doc.\n   * returns the new doc once the delete is done.\n   */\n  protected changeDocName$(docFs: AngularFirestoreDocument,\n                                                    subCollectionQueries: SubCollectionQuery[],\n                                                    subCollectionWriters: SubCollectionWriter[],\n                                                    newName: string): Observable {\n\n    const collectionFs: AngularFirestoreCollection = this.ngFirestore.collection(docFs.ref.parent);\n\n\n    const res$ = this.listenForDocDeep$(docFs, subCollectionQueries).pipe(\n      take(1),\n      tap(data => console.log(data)),\n      map((oldData: A) => this.removeDataExtrasRecursiveHelper(oldData, subCollectionWriters)),\n      tap(data => console.log(data)),\n      mergeMap((oldData: A) => {\n\n        return this.addDeep$(oldData, collectionFs, subCollectionWriters, newName).pipe( /* add the data under newName*/\n          // mergeMap(newData => { /* delete the old doc */\n          //   return this.deleteDeep$(docFs, subCollectionQueries).pipe(\n          //     mapTo(newData) /* keep the new data */\n          //   );\n          // }),\n          // mergeMap(newData => {\n          //   const newDocFs = this.ngFirestore.doc(newData.path);\n          //   return this.listenForDocDeep$(newDocFs, subCollectionQueries);  /* switch to listening to the new doc*/\n          // }),\n        );\n      }),\n      catchError(err => {\n        console.log('Failed to Change Doc Name: ' + err);\n        throw err;\n      })\n    );\n\n    return this.handleRes$(res$,\n      'changeDocName$',\n      {docFs, subCollectionQueries, subCollectionWriters, newName},\n      'Failed to Change Doc Name'\n    );\n  }\n\n  protected update$(data: A, docFs: AngularFirestoreDocument): Observable {\n    /**\n     * transforms the promise to an observable\n     */\n    return of(null).pipe(\n      mergeMap(() => {\n        let res$: Observable;\n\n        data = addModifiedDate(data);\n\n        res$ = from(docFs.update(data));\n\n        return this.handleRes$(res$, 'update$', {data, docFs}, 'Updated', 'Failed to Update Document').pipe(\n          // take(1) /* no need to unsub */\n        );\n      }),\n      take(1) /* just to make sure it only emits once */\n    );\n  }\n\n  /**\n   * Be careful when updating a document of any kind since we allow partial data there cannot be any type checking prior to update\n   * so its possible to introduce spelling mistakes on attributes and so forth\n   */\n  protected updateDeep$(data: A,\n                           docFs: AngularFirestoreDocument,\n                           subCollectionWriters: SubCollectionWriter[]): Observable {\n\n    const batch = this.updateDeepToBatchHelper(data, docFs, subCollectionWriters);\n\n    const res$ = this.batchCommit(batch);\n\n    return this.handleRes$(res$, 'updateDeep$', {data, docFs, subCollectionWriters}, 'Updated', 'Failed to Update Document').pipe(\n      take(1) /* no need to unsub */\n    );\n  }\n\n  /**\n   * DO NOT CALL THIS METHOD, used by update deep\n   */\n  protected updateDeepToBatchHelper(data: A,\n                                       docFs: AngularFirestoreDocument,\n                                       subCollectionWriters: SubCollectionWriter[],\n                                       batch?: WriteBatch): WriteBatch {\n\n    if (batch === undefined) { batch = this.ngFirestore.firestore.batch(); }\n\n    const split = this.splitDataIntoCurrentDocAndSubCollections(data, subCollectionWriters);\n    const currentDoc = split.currentDoc;\n    const subCollections = split.subCollections;\n\n    // console.log(currentDoc, subCollections);\n\n    batch.update(docFs.ref, currentDoc);\n\n    for (const [subCollectionKey, subDocUpdateValue] of Object.entries(subCollections)) {\n\n      let subSubCollectionWriters: SubCollectionWriter[]; // undefined in no subCollectionWriters\n      let subDocId: string;\n\n      if (subCollectionWriters) {\n        subSubCollectionWriters = subCollectionWriters.find(subColl => subColl.name === subCollectionKey).subCollectionWriters;\n        subDocId = subCollectionWriters.find(subColl => subColl.name === subCollectionKey).docId;\n      }\n\n      subDocId = subDocId !== undefined ? subDocId : this.defaultDocId; /* Set default if none given */\n\n      const subDocFs = docFs.collection(subCollectionKey).doc(subDocId);\n\n      batch = this.updateDeepToBatchHelper(subDocUpdateValue, subDocFs, subSubCollectionWriters, batch);\n    }\n\n    return batch;\n  }\n\n\n  protected updateDocByPath$(path: string, data: A): Observable {\n    const doc = this.ngFirestore.doc(path);\n    return this.update$(data, doc);\n  }\n\n  protected deleteDocByPath(path: string): Observable {\n    const doc = this.ngFirestore.doc(path);\n    return this.delete$(doc);\n  }\n\n  protected updateMultiple$(docs: AngularFirestoreDocument[], data: A): Observable {\n    const batch = this.ngFirestore.firestore.batch();\n\n\n    docs.forEach((doc) => {\n      batch.update(doc.ref, data);\n    });\n\n    return this.batchCommit(batch);\n  }\n\n  protected updateMultipleByPaths$(paths: string[], data: A): Observable {\n    const docsFs: AngularFirestoreDocument[] = [];\n\n    paths.forEach(path => {\n      docsFs.push(this.ngFirestore.doc(path));\n    });\n\n    return this.updateMultiple$(docsFs, data);\n  }\n\n  /* Move Item in Array */\n\n  protected moveItemInArray$(array: A[], fromIndex: number, toIndex: number): Observable {\n    console.log(fromIndex, toIndex);\n\n    if (fromIndex == null || toIndex == null || fromIndex === toIndex || array.length (array: Array,\n                                                                             fromIndex: number,\n                                                                             toIndex: number,\n                                                                             useCopy = false): firebase.firestore.WriteBatch {\n    /**\n     * Moved item within the same list so we need to update the index of all items in the list;\n     * Use a copy if you dont wish to update the given array, for example when you watch to just listen for the change of the db..\n     * The reason to not do this is because it takes some time for the db to update and it looks better if the list updates immediately.\n     */\n\n    const lowestIndex = Math.min(fromIndex, toIndex);\n    const batch = this.ngFirestore.firestore.batch();\n\n    if (fromIndex == null || toIndex == null || fromIndex === toIndex) { // we didnt really move anything\n      return batch;\n    }\n\n    let usedArray: Array;\n\n    if (useCopy) {\n      usedArray = Object.assign([], array);\n    } else {\n      usedArray = array;\n    }\n\n    // console.log(usedArray, array);\n\n    moveItemInArray(usedArray, fromIndex, toIndex);\n\n    const listSliceToUpdate: A[] = usedArray.slice(lowestIndex);\n\n    let i = lowestIndex;\n    for (const item of listSliceToUpdate) {\n      const ref = getRefFromPath(item.path) as DocumentReference;\n      batch.update(ref, {index: i});\n      i++;\n    }\n\n    return batch;\n  }\n\n  protected getBatchFromTransferItemInIndexedDocs(previousArray: A[],\n                                                                                 currentArray: A[],\n                                                                                 previousIndex: number,\n                                                                                 currentIndex: number,\n                                                                                 additionalDataUpdateOnMovedItem?: {[key: string]: any},\n                                                                                 useCopy = false): firebase.firestore.WriteBatch {\n\n    /**\n     * Used mainly for drag and drop scenarios where we drag an item from one array to another and the the docs have an index attribute.\n     */\n\n    const batch = this.ngFirestore.firestore.batch();\n\n    let usedPreviousArray: Array;\n    let usedCurrentArray: Array;\n    if (useCopy) {\n      usedPreviousArray = Object.assign([], previousArray);\n      usedCurrentArray = Object.assign([], currentArray);\n    } else {\n      usedPreviousArray = previousArray;\n      usedCurrentArray = currentArray;\n    }\n\n    transferArrayItem(usedPreviousArray, usedCurrentArray, previousIndex, currentIndex);\n\n    if (additionalDataUpdateOnMovedItem !== undefined) {\n      const movedItem = currentArray[currentIndex];\n      const movedPartRef = getRefFromPath(movedItem.path) as DocumentReference;\n      batch.update(movedPartRef, additionalDataUpdateOnMovedItem);\n    }\n\n    const currentArraySliceToUpdate: A[] = usedCurrentArray.slice(currentIndex);\n    let i = currentIndex;\n    for (const item of currentArraySliceToUpdate) {\n      const ref = getRefFromPath(item.path) as DocumentReference;\n      batch.update(ref, {index: i});\n      i++;\n    }\n\n    const prevArraySliceToUpdate: A[] = usedPreviousArray.slice(previousIndex);\n    i = previousIndex;\n    for (const item of prevArraySliceToUpdate) {\n      const ref = getRefFromPath(item.path) as DocumentReference;\n      batch.update(ref, {index: i});\n      i++;\n    }\n\n    return batch;\n  }\n\n  protected getBatchFromDeleteItemInIndexedDocs(array: A[]): firebase.firestore.WriteBatch {\n\n    /**\n     * Run this on collections with a fixed order using an index: number attribute;\n     * This will update that index with the index in the collectionData, so it should be sorted by index first.\n     * Basically needs to be run after a delete\n     */\n\n    const batch = this.ngFirestore.firestore.batch();\n\n    array.forEach((item, index) => {\n      if (item.index !== index) {\n        const ref = getRefFromPath(item.path) as DocumentReference;\n        batch.update(ref, {index});\n      }\n    });\n\n    return batch;\n  }\n\n  protected updateIndexAfterDeleteInIndexedDocs(array: A[]): Observable {\n    const batch = this.getBatchFromDeleteItemInIndexedDocs(array);\n    return this.batchCommit(batch);\n  }\n\n  /* ----------  DELETE -------------- */\n\n  protected delete$(docFs: AngularFirestoreDocument): Observable {\n\n    return of(null).pipe(\n      mergeMap(() => {\n        let res$: Observable;\n        res$ = from(docFs.delete());\n\n        return this.handleRes$(res$, 'delete$', {docFs}, 'Deleted', 'Failed to Delete Document').pipe(\n          take(1) /* no need to unsub*/\n        );\n      }),\n      take(1)\n    );\n  }\n\n  protected deleteMultiple$(docsFs: AngularFirestoreDocument[]): Observable {\n    const batch = this.ngFirestore.firestore.batch();\n\n    docsFs.forEach((doc) => {\n      batch.delete(doc.ref);\n    });\n\n    const res$ = this.batchCommit(batch);\n\n    return this.handleRes$(res$, 'deleteMultiple$', docsFs.map(doc => doc.ref.path), 'Deleted', 'Failed to Delete Multiple');\n  }\n\n  protected deleteMultipleByPaths$(paths: string[]): Observable {\n    const docsFs: AngularFirestoreDocument[] = [];\n\n    paths.forEach(path => {\n      docsFs.push(this.ngFirestore.doc(path));\n    });\n\n    return this.deleteMultiple$(docsFs);\n  }\n\n  protected deleteMultipleDeep$(docsFs: AngularFirestoreDocument[], subCollectionQueries: SubCollectionQuery[]): Observable {\n\n    const mainDocLists$: Array> = [];\n\n    docsFs.forEach(doc => {\n      const docList$ = this.getFirestoreDocumentsDeep$(doc, subCollectionQueries);\n      mainDocLists$.push(docList$);\n    });\n\n    return combineLatest(mainDocLists$).pipe(\n      // tap(lists => console.log(lists)),\n      map((lists: [any]) => {\n        let mainDocFsList: AngularFirestoreDocument[] = [];\n        lists.forEach(list => {\n          mainDocFsList = mainDocFsList.concat(list);\n        });\n        return mainDocFsList;\n      }),\n      // tap(lists => console.log(lists)),\n      switchMap((docFsList: AngularFirestoreDocument[]) => this.deleteMultiple$(docFsList)),\n      catchError((err) => { // TODO super ugly and I dont know why this error is thrown..still works\n        if (err === 'Document Does not exists') { return of(null); }\n        else { throw err; }\n      })\n    );\n  }\n\n  protected deleteDeep$(docFs: AngularFirestoreDocument, subCollectionQueries: SubCollectionQuery[]): Observable {\n\n    console.log('deleteDeep');\n    const res$ = this.getFirestoreDocumentsDeep$(docFs, subCollectionQueries).pipe(\n      switchMap((docList: AngularFirestoreDocument[]) => this.deleteMultiple$(docList)),\n      catchError((err) => { // TODO super ugly and I dont know why this error is thrown..still works\n        if (err === 'Document Does not exists') { return of(null); }\n        else { throw err; }\n      }),\n      take(1)\n    );\n\n    return this.handleRes$(res$, 'deleteDeep$', {docFs, subCollectionQueries}, 'Deleted', 'Failed to Delete');\n  }\n\n  protected deleteDeepByItem$(item: FirestoreItem, subCollectionQueries: SubCollectionQuery[]): Observable {\n\n    console.log('deleteDeepByItem$');\n\n    const docsFs = this.getFirestoreDocumentsFromDbItem(item, subCollectionQueries);\n\n    const res$ = this.deleteMultiple$(docsFs).pipe(\n      catchError((err) => { // TODO super ugly and I dont know why this error is thrown..still works\n        if (err === 'Document Does not exists') { return of(null); }\n        else { throw err; }\n      }),\n      take(1)\n    );\n\n    return this.handleRes$(res$,\n      'deleteDeepByItem$',\n      {item, subCollectionQueries},\n      'Deleted',\n      'Failed to Delete'\n    );\n  }\n\n  /* ----------  OTHER -------------- */\n\n\n\n  /**\n   * Returns an Observable containing a list of AngularFirestoreDocument found under the given docFs using the SubCollectionQuery[]\n   * Mainly used to delete a docFs and its sub docs\n   * @param docFs: AngularFirestoreDocument\n   * @param subCollectionQueries: SubCollectionQuery[]\n   */\n  private getFirestoreDocumentsDeep$(docFs: AngularFirestoreDocument,\n                                                              subCollectionQueries: SubCollectionQuery[]):\n    Observable {\n\n    return this.listenForDocDeep$(docFs, subCollectionQueries).pipe(\n      map(item => this.getPathsFromDbItemDeepRecursiveHelper(item, subCollectionQueries)),\n      // tap(pathList => console.log(pathList)),\n      map((pathList: A) => {\n        const docFsList: AngularFirestoreDocument[] = [];\n        pathList.forEach(path => docFsList.push(this.ngFirestore.doc(path)));\n        return docFsList;\n      }),\n      // tap(item => console.log(item)),\n    );\n  }\n\n  private getFirestoreDocumentsFromDbItem(dbItem: FirestoreItem,\n                                                                   subCollectionQueries: SubCollectionQuery[]): AngularFirestoreDocument[] {\n\n    const pathList = this.getPathsFromDbItemDeepRecursiveHelper(dbItem, subCollectionQueries);\n\n    const docFsList: AngularFirestoreDocument[] = [];\n    pathList.forEach(path => docFsList.push(this.ngFirestore.doc(path)));\n    return docFsList;\n  }\n\n  /**\n   * DO NOT CALL THIS METHOD, its meant as a support method for getDocs$\n   */\n  private getPathsFromDbItemDeepRecursiveHelper(dbItem: FirestoreItem,\n                                                                         subCollectionQueries: SubCollectionQuery[]): string[] {\n\n    // console.log(dbItem, subCollectionQueries);\n\n    let pathList: string[] = [];\n    pathList.push(dbItem.path);\n\n    subCollectionQueries.forEach(col => {\n      if (Array.isArray(dbItem[col.name])) { /* property is array so will contain multiple docs */\n\n        const docs: FirestoreItem[] = dbItem[col.name];\n        docs.forEach(d => {\n\n          if (col.subCollectionQueries) {\n            pathList = pathList.concat(this.getPathsFromDbItemDeepRecursiveHelper(d, col.subCollectionQueries));\n          } else {\n            pathList.push(d.path);\n          }\n        });\n\n      } else { /* not an array so a single doc*/\n\n        if (col.subCollectionQueries) {\n          pathList = pathList.concat(this.getPathsFromDbItemDeepRecursiveHelper(dbItem, col.subCollectionQueries));\n        } else {\n          const item = (dbItem[col.name] as FirestoreItem);\n          if (item != null && 'path' in item) {\n            pathList.push(item.path);\n          }\n          // const path = (dbItem[col.name] as FirestoreItem).path;\n        }\n\n      }\n    });\n\n    // console.log(pathList);\n\n    return pathList;\n  }\n\n  /**\n   * DO  NOT  CALL THIS METHOD, used in addDeep and updateDeep to split the data into currentDoc and subCollections\n   * Onyl goes one sub level deep;\n   */\n  private splitDataIntoCurrentDocAndSubCollections(\n    data: A,\n    subCollectionWriters?: SubCollectionWriter[]): CurrentDocSubCollectionSplit {\n\n    /* Split data into current doc and sub collections */\n    let currentDoc: { [index: string]: any; } = {};\n    const subCollections: { [index: string]: any; }  = {};\n\n    /* Check if the key is in subcollections, if not place it in currentDoc, else subCollections*/\n    for (const [key, value] of Object.entries(data)) {\n      // console.log(key, value);\n      if (subCollectionWriters) {\n        const subCollectionWriter: SubCollectionWriter = subCollectionWriters.find(subColl => subColl.name === key);\n\n        if (subCollectionWriter) {\n          subCollections[key] = value;\n        } else {\n          currentDoc[key] = value;\n        }\n      }\n      else {\n        currentDoc = data;\n      }\n    }\n\n    return {\n      currentDoc,\n      subCollections\n    } as CurrentDocSubCollectionSplit;\n  }\n\n\n\n  /**\n   * Turn a batch into an Observable instead of Promise.\n   */\n  protected batchCommit(batch: firebase.firestore.WriteBatch): Observable {\n    return of(null).pipe(\n      mergeMap(() => {\n        let res$: Observable;\n        res$ = from(batch.commit());\n\n        return this.handleRes$(res$, 'batchCommit', {batch}, 'Updated',\n                  'Failed to Update Documents').pipe(\n          // take(1) /* no need to unsub*/\n        );\n      }),\n      take(1)\n    );\n  }\n\n  protected handleRes$(result$: Observable, name: string, data: {[key: string]: any}, successMessage?: string, errorMessage?: string):\n    Observable {\n    return result$.pipe(\n      // tap(val => console.log(val)),\n      tap(() => {\n        // if (successMessage != null) { (this.snackBar.open('Success', successMessage, {duration: 1000})); }\n      }),\n      // map(() => true),\n      catchError((err: FirestoreError) => {\n        console.error(name, data, err);\n        // if (errorMessage != null) { this.snackBar.open('Error', errorMessage + '-' +  err.code, {duration: 1000}); }\n        throw err;\n      }),\n\n    );\n  }\n\n\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AngularfirestoreWrapperModule.html":{"url":"modules/AngularfirestoreWrapperModule.html","title":"module - AngularfirestoreWrapperModule","body":"\n                   \n\n\n\n\n    Modules\n    AngularfirestoreWrapperModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/lib/angularfirestore-wrapper.module.ts\n        \n\n\n        \n            Description\n        \n        \n            AngularfirestoreWrapperModule \n\n        \n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { AngularFirestoreModule} from '@angular/fire/firestore';\nimport {DragDropModule} from '@angular/cdk/drag-drop';\n\n/** AngularfirestoreWrapperModule */\n@NgModule({\n  declarations: [],\n  imports: [\n    DragDropModule,\n    AngularFirestoreModule,\n  ],\n  exports: []\n})\nexport class AngularfirestoreWrapperModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CurrentDocSubCollectionSplit.html":{"url":"interfaces/CurrentDocSubCollectionSplit.html","title":"interface - CurrentDocSubCollectionSplit","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CurrentDocSubCollectionSplit\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/angularfirestore-wrapper.ts\n        \n\n            \n                Description\n            \n            \n                Used internally \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        currentDoc\n                                \n                                \n                                        subCollections\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        currentDoc\n                                    \n                                \n                                \n                                    \n                                        currentDoc:         FirestoreItem\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         FirestoreItem\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        subCollections\n                                    \n                                \n                                \n                                    \n                                        subCollections:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {combineLatest, from, Observable, of} from 'rxjs';\nimport {\n  Action,\n  AngularFirestore,\n  AngularFirestoreDocument, DocumentChangeAction,\n  DocumentChangeType,\n  DocumentReference,\n  DocumentSnapshotExists\n} from '@angular/fire/firestore';\nimport {CollectionReference, DocumentSnapshot} from '@angular/fire/firestore/interfaces';\nimport {catchError, filter, map, mergeMap, switchMap, take, tap} from 'rxjs/operators';\nimport {AngularFirestoreCollection} from '@angular/fire/firestore/collection/collection';\nimport {moveItemInArray, transferArrayItem} from '@angular/cdk/drag-drop';\n\nimport firebase from 'firebase';\nimport WriteBatch = firebase.firestore.WriteBatch;\nimport FirestoreError = firebase.firestore.FirestoreError;\nimport DocumentData = firebase.firestore.DocumentData;\nimport {FirestoreItem, DbItemFullWithIndex} from './models/firestoreItem';\nimport {SubCollectionQuery} from './sub-collection-query';\nimport {SubCollectionWriter} from './sub-collection-writer';\n\nimport {\n  getRefFromPath,\n  getCollectionFsFromPath,\n  getDocFsFromPath,\n  getParentDocFsFromPath,\n  convertTimestampToDate,\n  addCreatedDate,\n  addModifiedDate\n} from './angularfirestore-helpers';\n\n\n/** Used as a wrapper for adding a document, either doc or path must be specified, helps when adding multiple */\nexport interface AddDocumentWrapper {\n  /** The data to be added */\n  data: A;\n\n  /** AngularFirestoreDocument of the Document */\n  docFs?: AngularFirestoreDocument;\n\n  /** The path to the Document */\n  path?: string;\n}\n\n\nexport enum DocNotExistAction {\n  /** returns a null object */\n  RETURN_NULL,\n\n  /** return all the extras such as ref, path and so on but no data, kinda just ignores that the doc isn't there */\n  RETURN_ALL_BUT_DATA,\n\n  /** do not return at all until it does exist */\n  FILTER,\n\n  /** return doc not found error 'doc_not_found' */\n  THROW_DOC_NOT_FOUND,\n}\n\n\n/** Used internally */\ninterface CurrentDocSubCollectionSplit {\n  currentDoc: FirestoreItem;\n  subCollections: {[index: string]: any};\n}\n\n\n/**\n * Main Wrapper.\n *\n *\n *\n */\nexport class AngularFirestoreWrapper {\n\n  /**\n   * Constructor for AngularFirestoreWrapper\n   *\n   * @param ngFirestore The AngularFirestore injected from an Angular Class\n   * @param defaultDocId The default name of any Document when no name is given\n   */\n  constructor(private ngFirestore: AngularFirestore,\n              private defaultDocId: string = 'data') {}\n\n  /* ----------  LISTEN -------------- */\n\n  // listenForChangesInBaseCollection$(): Observable {\n  //   return this.listenForCollection$(this.baseCollectionFs);\n  // }\n\n  // protected listenForDocInBaseCollectionById(id: string, actionIfNotExist: DocNotExistAction = DocNotExistAction.RETURN_ALL_BUT_DATA):\n  //   Observable {\n  //   return this.listenForDoc$(\n  //     this.baseCollectionFs.doc(id),\n  //     actionIfNotExist\n  //   );\n  // }\n\n  protected listenForDoc$(docFs: AngularFirestoreDocument,\n                                                   actionIfNotExist: DocNotExistAction = DocNotExistAction.RETURN_ALL_BUT_DATA):\n    Observable {\n    /**\n     * Returns an observable that will emit whenever the ref changes in any way.\n     * Also adds the id and ref to the object.\n     */\n    const res$ = docFs.snapshotChanges().pipe(\n      // mergeMap((action) => {\n      //   if (!action.payload.exists) { return throwError('Document Does not exists'); }\n      //   else { return of(action); }\n      // }),\n\n      tap((action: Action>) => {\n        if (!action.payload.exists && actionIfNotExist === DocNotExistAction.THROW_DOC_NOT_FOUND) {\n          throw new Error('doc_not_found');\n        }\n      }),\n\n      filter((action: Action>) => {\n        return !(!action.payload.exists && actionIfNotExist === DocNotExistAction.FILTER);\n      }),\n      map((action: Action>) => {\n\n        if (action.payload.exists || actionIfNotExist === DocNotExistAction.RETURN_ALL_BUT_DATA) {\n          const data = action.payload.data() as A;\n          // const payload: DocumentSnapshotExists = action.payload as DocumentSnapshotExists;\n          // @ts-ignore\n          const id = action.payload.id;\n          // @ts-ignore\n          const docRef = action.payload.ref;\n          const path = docRef.path;\n          const _docFs = this.ngFirestore.doc(path);\n          const isExists: boolean = action.payload.exists;\n\n          // const afDocRef = this.fireStore.doc(docRef.path) as AngularFirestoreDocument;  // TODO make sure this also copies the query\n          return { ...data, id, path, ref: docRef, docFs: _docFs, isExists };\n        } else if (actionIfNotExist === DocNotExistAction.RETURN_NULL) { /* doc doesn't exist */\n          return null;\n        }\n      }),\n      map((data) => {\n        if (data != null) {\n          return convertTimestampToDate(data);\n        } else {\n          return data;\n        }\n      }),\n\n    ) as Observable;\n\n    return this.handleRes$(res$, 'listenForDoc$', {docFs});\n  }\n\n  // TODO make listentoTypes and addExtras a single attribute called options\n  protected listenForCollection$(collectionFs: AngularFirestoreCollection,\n                                                          listenToTypes?: DocumentChangeType[]): Observable {\n    /**\n     * Returns an observable that will emit whenever the ref changes in any way.\n     * Also adds the id and ref to the object.\n     */\n\n    if (listenToTypes === undefined || listenToTypes === null || listenToTypes.length []) => actions.filter(a => {\n        return listenToTypes.includes(a.type);\n      })),\n      map((actions: DocumentChangeAction[]) => actions.map(a => {\n        const data = a.payload.doc.data() as A;\n\n        const id = a.payload.doc.id;\n        const docRef = a.payload.doc.ref;\n        const path = docRef.path;\n        const _docFs = this.ngFirestore.doc(path);\n        // const afDocRef = this.fireStore.doc(docRef.path) as AngularFirestoreDocument; // TODO make sure this also copies the query\n        return { ...data, id, path, ref: docRef, docFs: _docFs };\n\n      })),\n      map((datas: A[]) => datas.map(data => {\n        return convertTimestampToDate(data);\n      }))\n    ) as Observable;\n\n    return this.handleRes$(res$, 'listenForCollection$', {collectionFs, listenToTypes});\n  }\n\n\n  /**\n   * Wrapper for listenForDocDeepRecursiveHelper$ so that we can cast the return to the correct type\n   * All logic is in listenForDocDeepRecursiveHelper$.\n   *\n   * @link SubCollectionQuery\n   *\n   * E.x:\n   *      const subCollectionQueries: SubCollectionQuery[] = [\n   *         { name: 'data' },\n   *         { name: 'secure' },\n   *         { name: 'variants' },\n   *         { name: 'images',\n   *           queryFn: ref => ref.orderBy('index'),\n   *           collectionWithNames: [\n   *             { name: 'secure'}\n   *           ]\n   *         },\n   *     ];\n   *\n   *     this.listenForDocAndSubCollections(docFs, collections)\n   *\n   * @param docFs - a docFs with potential queryFn\n   * @param subCollectionQueries - see example\n   */\n  protected listenForDocDeep$(docFs: AngularFirestoreDocument,\n                                                       subCollectionQueries: SubCollectionQuery[]): Observable {\n\n    const res$ = this.listenForDocDeepRecursiveHelper$(docFs, subCollectionQueries).pipe(\n      map(data => data as A)\n    );\n\n    return this.handleRes$(res$, 'listenForDocDeep$', {docFs, subCollectionQueries}, null, 'Failed To read doc');\n  }\n\n  /**\n   * DO NOT CALL THIS METHOD, meant to be used solely by listenForDocAndSubCollections$\n   */\n  protected listenForDocDeepRecursiveHelper$(\n    docFs: AngularFirestoreDocument,\n    subCollectionQueries: SubCollectionQuery[],\n    actionIfNotExist: DocNotExistAction = DocNotExistAction.RETURN_NULL): Observable {\n\n    /* Listen for the docFs*/\n    return this.listenForDoc$(docFs, actionIfNotExist).pipe(\n      //\n      // catchError(err => {\n      //   if (err === 'Document Does not exists') { return of(null); } /* if a doc is deleted we just skip it */\n      //   else { throw err; }\n      // }),\n\n      filter(doc => doc !== null),\n\n      mergeMap((item: FirestoreItem) => {\n\n        if (item === null) { return of(item); }\n        if (subCollectionQueries.length > = [];\n\n        /* Iterate over each sub collection we have given and create collection listeners*/\n        subCollectionQueries.forEach(subCollectionQuery => {\n\n          // console.log(subCollectionQuery);\n\n          const collectionFs = docFs.collection(subCollectionQuery.name, subCollectionQuery.queryFn);\n          // const collectionFs = this.firestore.docFs(item.path).subCollectionQuery(subCollectionQuery.name, subCollectionQuery.queryFn);\n\n          const collectionListener = this.listenForCollection$(collectionFs, null).pipe(\n            // tap(d => console.log(d)),\n            // filter(docs => docs.length > 0), // skip empty collections or if the subCollectionQuery doesnt exist\n            /* Uncomment to see data on each update */\n            // tap(d => console.log(d)),\n\n            /* Listen For and Add any Potential Sub Docs*/\n            mergeMap((docs: FirestoreItem[]) => {\n              if (!subCollectionQuery.subCollectionQueries) { return of(docs); }\n\n              const docListeners: Array> = [];\n\n              docs.forEach(d => {\n                const subDocFs = this.ngFirestore.doc(d.path);\n                const subDocAndCollections$ = this.listenForDocDeepRecursiveHelper$(subDocFs,\n                  subCollectionQuery.subCollectionQueries).pipe(\n                  // tap(subDoc => console.log(subDoc)),\n                  // filter(subDoc => subDoc !== null),\n                  map((subDoc: FirestoreItem) => {\n                    return {...d, ...subDoc } as FirestoreItem;\n                  }),\n                  // tap(val => console.log(val))\n                );\n                docListeners.push(subDocAndCollections$);\n              });\n\n              // console.log(docListeners);\n\n              if (docListeners.length  console.log(val))\n              );\n            }), /* End of Listening for sub docs */\n            // tap(val => console.log(val)),\n\n            /* If docs.length === 1 and the id is defaultDocId or the given docId it means we are in a sub subCollectionQuery\n            and we only care about the data. So we remove the array and just make it one object with the\n            subCollectionQuery name as key and docs[0] as value */\n            map((docs: FirestoreItem[]) => {\n              const docId = subCollectionQuery.docId !== undefined ? subCollectionQuery.docId : this.defaultDocId;\n\n              if (docs.length === 1 && docs[0].id === docId) { return {[subCollectionQuery.name]: docs[0]}; }\n              else { return {[subCollectionQuery.name]: docs}; }\n            }),\n            // tap(d => console.log(d)),\n          );\n\n          collectionListeners.push(collectionListener);\n        });\n\n        /* Finally return the combined collection listeners*/\n        return combineLatest(collectionListeners).pipe(\n          map((datas: Array) => {\n            const datasMap = {};\n\n            datas.forEach((collection) => {\n\n              for (const [key, value] of Object.entries(collection)) {\n                datasMap[key] = value;\n              }\n            });\n            return datasMap;\n          }),\n\n          map((data: DocumentData) => {\n            return {...item, ...data};\n          }),\n          // tap(data => console.log(data)),\n        );\n      })\n    );\n  }\n\n  protected listenForCollectionRecursively(path: string,\n                                                                    collectionKey: string,\n                                                                    orderKey?: string): Observable {\n\n    /**\n     * Listens for collections inside collections with the same name to an unlimited depth and returns all of it as an array.\n     */\n    let ref;\n\n    if (orderKey != null) {\n      ref = this.ngFirestore.collection(path, r => r.orderBy(orderKey));\n    } else {\n      ref = this.ngFirestore.collection(path);\n    }\n\n    return this.listenForCollection$(ref, null).pipe(\n      mergeMap((items: A[]) => {\n\n        if (items.length > = [];\n\n        for (const item of items) {\n\n\n          const nextLevelPath = this.ngFirestore.doc(item.path).collection(collectionKey).ref.path;  // one level deeper\n\n          const nextLevelItems$ = this.listenForCollectionRecursively(nextLevelPath, collectionKey, orderKey).pipe(\n            map((nextLevelItems: A[]) => {\n              if (nextLevelItems.length > 0) { return {...item, [collectionKey]: nextLevelItems } as A; }\n              else {  return {...item} as A; }  // dont include an empty array\n            }),\n          );\n          nextLevelObs.push(nextLevelItems$);\n        }\n\n        return combineLatest(nextLevelObs).pipe(\n          tap(val => console.log(val))\n        );\n      }),\n\n    );\n  }\n\n  /* ----------  ADD -------------- */\n\n  // protected addToBaseCollection$(data: T, id?: string): Observable {\n  //   return this.add$(data, this.baseCollectionFs, id);\n  // }\n\n  protected add$(data: A, collectionFs: AngularFirestoreCollection, id?: string): Observable {\n    return of(null).pipe(\n      mergeMap(() => {\n        let res$: Observable;\n\n        data = addCreatedDate(data);\n        data = addModifiedDate(data);\n\n        if (id !== undefined) { res$ = from(collectionFs.doc(id).set(data)); }\n        else { res$ = from(collectionFs.add(data)); }\n\n        res$ = res$.pipe(\n          // tap(() => this.snackBar.open('Success', 'Added', {duration: 1000})),\n          tap(ref => console.log(ref)),\n          tap(() => console.log(data)),\n          map((ref: DocumentReference) => {\n            if (id === undefined) {\n              return {...data, id: ref.id, path: ref.path, ref, docFs: this.ngFirestore.doc(ref.path) };\n            } else {\n              const path = collectionFs.ref.path + '/' + id;\n              return {...data, id, path, docFs: this.ngFirestore.doc(path) };\n            }\n          }),\n        );\n\n        return this.handleRes$(res$, 'add$', {data, collectionFs, id}, 'Document Added Successfully', 'Document failed to add').pipe(\n          take(1) /* No need to unsub */\n        );\n      })\n    );\n  }\n\n  protected addDeep$(data: A,\n                                              collectionFs: AngularFirestoreCollection,\n                                              subCollectionWriters?: SubCollectionWriter[],\n                                              docId?: string): Observable {\n\n    const split = this.splitDataIntoCurrentDocAndSubCollections(data, subCollectionWriters);\n    const currentDoc = split.currentDoc;\n    const subCollections = split.subCollections;\n\n    // console.log(currentDoc, subCollections);\n\n    // console.log(Object.entries(subCollections).keys(), Object.entries(subCollections).values());\n\n    const res$ = this.add$(currentDoc as A, collectionFs, docId).pipe(\n      // tap(val => console.log(val)),\n\n      /* Add Sub/sub collections*/\n      mergeMap((currentData: A) => {\n\n        const subWriters: Array> = [];\n\n        for (const [subCollectionKey, subCollectionValue] of Object.entries(subCollections)) {\n          let subSubCollectionWriters: SubCollectionWriter[]; // undefined in no subCollectionWriters\n          let subDocId: string;\n\n          if (subCollectionWriters) {\n            subSubCollectionWriters = subCollectionWriters.find(subColl => subColl.name === subCollectionKey).subCollectionWriters;\n            subDocId = subCollectionWriters.find(subColl => subColl.name === subCollectionKey).docId;\n          }\n\n          const subCollectionFs = this.ngFirestore.doc(currentData.path).collection(subCollectionKey);\n\n          /* Handle array and object differently\n          * For example if array and no docId is given it means we should save each entry as a separate doc.\n          * If a docId is given should save it using that docId under a single doc.\n          * If not an array it will always be saved as a single doc, using this.defaultDocId as the default docId if none is given */\n          if (Array.isArray(subCollectionValue)) {\n            if (subDocId !== undefined) { /* not undefined so save it as a single doc under that docId */\n\n              /* the pipe only matters for the return subCollectionValue not for writing the data */\n              const subWriter = this.addDeep$(subCollectionValue as FirestoreItem, subCollectionFs, subSubCollectionWriters, subDocId).pipe(\n                map(item => {\n                  // return {[key]: item};\n                  return {key: subCollectionKey, value: item}; /* key and subCollectionValue as separate k,v properties */\n                })\n              );\n              subWriters.push(subWriter);\n\n            } else { /* docId is undefined so we save each object in the array separate */\n              subCollectionValue.forEach((arrayValue: FirestoreItem) => {\n\n                /* the pipe only matters for the return subCollectionValue not for writing the data */\n                const subWriter = this.addDeep$(arrayValue, subCollectionFs, subSubCollectionWriters).pipe(\n                  map(item => {\n                    // return {[key]: [item]};\n                    /* key and subCollectionValue as separate k,v properties -- subCollectionValue in an array */\n                    return {key: subCollectionKey, value: [item]};\n                  })\n                );\n\n                subWriters.push(subWriter);\n              });\n            }\n          } else { /* Not an array so a single Object*/\n            subDocId = subDocId !== undefined ? subDocId : this.defaultDocId;\n\n            /* the pipe only matters for the return subCollectionValue not for writing the data */\n            const subWriter = this.addDeep$(subCollectionValue, subCollectionFs, subSubCollectionWriters, subDocId).pipe(\n              map(item => {\n                // return {[key]: item};\n                return {key: subCollectionKey, value: item}; /* key and subCollectionValue as separate k,v properties */\n              })\n            );\n\n            subWriters.push(subWriter);\n          }\n        } /* end of iteration */\n\n        if (subWriters.length > 0) { /* if subWriters.length > 0 it means we need to handle the subwriters */\n\n          /* the pipe only matters for the return value not for writing the data */\n          return combineLatest(subWriters).pipe(\n            // tap(sub => console.log(sub)),\n\n            // TODO super duper ugly way of joining the data together but I cannot think of a better way..also it doesnt really matter.\n            // TODO The ugliness only relates to how the return object looks after we add, it has no effect on how the object is saved on\n            // TODO firestore.\n\n            map((docDatas: Array>) => { /* List of sub docs*/\n              const groupedData = {};\n\n              docDatas.forEach((doc: {[index: string]: any}) => { /* iterate over each doc */\n\n                const key = doc.key;\n                const value = doc.value;\n\n                /* if groupedData has the key already it means that the several docs have the same key..so an array */\n                if (groupedData.hasOwnProperty(key) && Array.isArray(groupedData[key])) {\n                  /* groupedData[key] must be an array since it already exist..add this doc.value to the array */\n                  (groupedData[key] as Array).push(value[0]);\n                } else {\n                  groupedData[key] = value;\n                }\n              });\n\n              return groupedData as object;\n            }),\n\n            // tap(groupedData => console.log(groupedData)),\n\n            map((groupedData: A) => {\n              return {...currentData, ...groupedData } as A;\n            }),\n            // tap(d => console.log(d)),\n          );\n        } else {\n          return of(currentData);\n        }\n      })\n    );\n\n    return this.handleRes$(res$, 'addDeep$', {data, collectionFs, subCollectionWriters, docId}, 'Document Added Successfully', 'Document failed to add').pipe(\n      // tap(d => console.log(d)),\n      take(1) /* just to make sure it only emits once */\n    );\n  }\n\n\n  /* ----------  EDIT -------------- */\n\n  /**\n   * Goes through each level and removes DbItemExtras\n   * In case you wish to save the data\n   */\n  protected cleanExtrasFromData(data: A, subCollectionWriters: SubCollectionWriter[]): A {\n\n    // const dataToBeCleaned = cloneDeep(data); /* clone data so we dont modify the original */\n    const dataToBeCleaned = data;\n    return this.removeDataExtrasRecursiveHelper(dataToBeCleaned, subCollectionWriters) as A;\n  }\n\n  protected removeDataExtrasRecursiveHelper(dbItem: A, subCollectionWriters: SubCollectionWriter[]): A {\n\n    // tslint:disable-next-line:no-console\n    console.time('removeDataExtrasRecursiveHelper');\n\n    // const extraPropertyNames: string[] = Object.getOwnPropertyNames(new DbItemExtras());\n    const extraPropertyNames: string[] = ['id', 'path', 'ref', 'docFs', 'isExists'];\n\n    /* Current level delete */\n    for (const extraPropertyName of extraPropertyNames) {\n      delete dbItem[extraPropertyName];\n    }\n\n    subCollectionWriters.forEach(col => {\n      if (Array.isArray(dbItem[col.name])) { /* property is array so will contain multiple docs */\n\n        const docs: FirestoreItem[] = dbItem[col.name];\n        docs.forEach(d => {\n\n          if (col.subCollectionWriters) {\n            this.removeDataExtrasRecursiveHelper(d, col.subCollectionWriters);\n          } else {\n            /*  */\n            for (const extraPropertyName of extraPropertyNames) {\n              delete dbItem[col.name][extraPropertyName];\n            }\n          }\n        });\n\n      } else { /* not an array so a single doc*/\n\n        if (col.subCollectionWriters) {\n          this.removeDataExtrasRecursiveHelper(dbItem[col.name], col.subCollectionWriters);\n        } else {\n          for (const extraPropertyName of extraPropertyNames) {\n            delete dbItem[col.name][extraPropertyName];\n          }\n        }\n\n      }\n    });\n\n    // tslint:disable-next-line:no-console\n    console.timeEnd('removeDataExtrasRecursiveHelper');\n\n    return dbItem;\n\n  }\n\n  /**\n   * Firestore doesn't allow you do change the name or move a doc directly so you will have to create a new doc under the new name\n   * and then delete the old doc.\n   * returns the new doc once the delete is done.\n   */\n  protected changeDocName$(docFs: AngularFirestoreDocument,\n                                                    subCollectionQueries: SubCollectionQuery[],\n                                                    subCollectionWriters: SubCollectionWriter[],\n                                                    newName: string): Observable {\n\n    const collectionFs: AngularFirestoreCollection = this.ngFirestore.collection(docFs.ref.parent);\n\n\n    const res$ = this.listenForDocDeep$(docFs, subCollectionQueries).pipe(\n      take(1),\n      tap(data => console.log(data)),\n      map((oldData: A) => this.removeDataExtrasRecursiveHelper(oldData, subCollectionWriters)),\n      tap(data => console.log(data)),\n      mergeMap((oldData: A) => {\n\n        return this.addDeep$(oldData, collectionFs, subCollectionWriters, newName).pipe( /* add the data under newName*/\n          // mergeMap(newData => { /* delete the old doc */\n          //   return this.deleteDeep$(docFs, subCollectionQueries).pipe(\n          //     mapTo(newData) /* keep the new data */\n          //   );\n          // }),\n          // mergeMap(newData => {\n          //   const newDocFs = this.ngFirestore.doc(newData.path);\n          //   return this.listenForDocDeep$(newDocFs, subCollectionQueries);  /* switch to listening to the new doc*/\n          // }),\n        );\n      }),\n      catchError(err => {\n        console.log('Failed to Change Doc Name: ' + err);\n        throw err;\n      })\n    );\n\n    return this.handleRes$(res$,\n      'changeDocName$',\n      {docFs, subCollectionQueries, subCollectionWriters, newName},\n      'Failed to Change Doc Name'\n    );\n  }\n\n  protected update$(data: A, docFs: AngularFirestoreDocument): Observable {\n    /**\n     * transforms the promise to an observable\n     */\n    return of(null).pipe(\n      mergeMap(() => {\n        let res$: Observable;\n\n        data = addModifiedDate(data);\n\n        res$ = from(docFs.update(data));\n\n        return this.handleRes$(res$, 'update$', {data, docFs}, 'Updated', 'Failed to Update Document').pipe(\n          // take(1) /* no need to unsub */\n        );\n      }),\n      take(1) /* just to make sure it only emits once */\n    );\n  }\n\n  /**\n   * Be careful when updating a document of any kind since we allow partial data there cannot be any type checking prior to update\n   * so its possible to introduce spelling mistakes on attributes and so forth\n   */\n  protected updateDeep$(data: A,\n                           docFs: AngularFirestoreDocument,\n                           subCollectionWriters: SubCollectionWriter[]): Observable {\n\n    const batch = this.updateDeepToBatchHelper(data, docFs, subCollectionWriters);\n\n    const res$ = this.batchCommit(batch);\n\n    return this.handleRes$(res$, 'updateDeep$', {data, docFs, subCollectionWriters}, 'Updated', 'Failed to Update Document').pipe(\n      take(1) /* no need to unsub */\n    );\n  }\n\n  /**\n   * DO NOT CALL THIS METHOD, used by update deep\n   */\n  protected updateDeepToBatchHelper(data: A,\n                                       docFs: AngularFirestoreDocument,\n                                       subCollectionWriters: SubCollectionWriter[],\n                                       batch?: WriteBatch): WriteBatch {\n\n    if (batch === undefined) { batch = this.ngFirestore.firestore.batch(); }\n\n    const split = this.splitDataIntoCurrentDocAndSubCollections(data, subCollectionWriters);\n    const currentDoc = split.currentDoc;\n    const subCollections = split.subCollections;\n\n    // console.log(currentDoc, subCollections);\n\n    batch.update(docFs.ref, currentDoc);\n\n    for (const [subCollectionKey, subDocUpdateValue] of Object.entries(subCollections)) {\n\n      let subSubCollectionWriters: SubCollectionWriter[]; // undefined in no subCollectionWriters\n      let subDocId: string;\n\n      if (subCollectionWriters) {\n        subSubCollectionWriters = subCollectionWriters.find(subColl => subColl.name === subCollectionKey).subCollectionWriters;\n        subDocId = subCollectionWriters.find(subColl => subColl.name === subCollectionKey).docId;\n      }\n\n      subDocId = subDocId !== undefined ? subDocId : this.defaultDocId; /* Set default if none given */\n\n      const subDocFs = docFs.collection(subCollectionKey).doc(subDocId);\n\n      batch = this.updateDeepToBatchHelper(subDocUpdateValue, subDocFs, subSubCollectionWriters, batch);\n    }\n\n    return batch;\n  }\n\n\n  protected updateDocByPath$(path: string, data: A): Observable {\n    const doc = this.ngFirestore.doc(path);\n    return this.update$(data, doc);\n  }\n\n  protected deleteDocByPath(path: string): Observable {\n    const doc = this.ngFirestore.doc(path);\n    return this.delete$(doc);\n  }\n\n  protected updateMultiple$(docs: AngularFirestoreDocument[], data: A): Observable {\n    const batch = this.ngFirestore.firestore.batch();\n\n\n    docs.forEach((doc) => {\n      batch.update(doc.ref, data);\n    });\n\n    return this.batchCommit(batch);\n  }\n\n  protected updateMultipleByPaths$(paths: string[], data: A): Observable {\n    const docsFs: AngularFirestoreDocument[] = [];\n\n    paths.forEach(path => {\n      docsFs.push(this.ngFirestore.doc(path));\n    });\n\n    return this.updateMultiple$(docsFs, data);\n  }\n\n  /* Move Item in Array */\n\n  protected moveItemInArray$(array: A[], fromIndex: number, toIndex: number): Observable {\n    console.log(fromIndex, toIndex);\n\n    if (fromIndex == null || toIndex == null || fromIndex === toIndex || array.length (array: Array,\n                                                                             fromIndex: number,\n                                                                             toIndex: number,\n                                                                             useCopy = false): firebase.firestore.WriteBatch {\n    /**\n     * Moved item within the same list so we need to update the index of all items in the list;\n     * Use a copy if you dont wish to update the given array, for example when you watch to just listen for the change of the db..\n     * The reason to not do this is because it takes some time for the db to update and it looks better if the list updates immediately.\n     */\n\n    const lowestIndex = Math.min(fromIndex, toIndex);\n    const batch = this.ngFirestore.firestore.batch();\n\n    if (fromIndex == null || toIndex == null || fromIndex === toIndex) { // we didnt really move anything\n      return batch;\n    }\n\n    let usedArray: Array;\n\n    if (useCopy) {\n      usedArray = Object.assign([], array);\n    } else {\n      usedArray = array;\n    }\n\n    // console.log(usedArray, array);\n\n    moveItemInArray(usedArray, fromIndex, toIndex);\n\n    const listSliceToUpdate: A[] = usedArray.slice(lowestIndex);\n\n    let i = lowestIndex;\n    for (const item of listSliceToUpdate) {\n      const ref = getRefFromPath(item.path) as DocumentReference;\n      batch.update(ref, {index: i});\n      i++;\n    }\n\n    return batch;\n  }\n\n  protected getBatchFromTransferItemInIndexedDocs(previousArray: A[],\n                                                                                 currentArray: A[],\n                                                                                 previousIndex: number,\n                                                                                 currentIndex: number,\n                                                                                 additionalDataUpdateOnMovedItem?: {[key: string]: any},\n                                                                                 useCopy = false): firebase.firestore.WriteBatch {\n\n    /**\n     * Used mainly for drag and drop scenarios where we drag an item from one array to another and the the docs have an index attribute.\n     */\n\n    const batch = this.ngFirestore.firestore.batch();\n\n    let usedPreviousArray: Array;\n    let usedCurrentArray: Array;\n    if (useCopy) {\n      usedPreviousArray = Object.assign([], previousArray);\n      usedCurrentArray = Object.assign([], currentArray);\n    } else {\n      usedPreviousArray = previousArray;\n      usedCurrentArray = currentArray;\n    }\n\n    transferArrayItem(usedPreviousArray, usedCurrentArray, previousIndex, currentIndex);\n\n    if (additionalDataUpdateOnMovedItem !== undefined) {\n      const movedItem = currentArray[currentIndex];\n      const movedPartRef = getRefFromPath(movedItem.path) as DocumentReference;\n      batch.update(movedPartRef, additionalDataUpdateOnMovedItem);\n    }\n\n    const currentArraySliceToUpdate: A[] = usedCurrentArray.slice(currentIndex);\n    let i = currentIndex;\n    for (const item of currentArraySliceToUpdate) {\n      const ref = getRefFromPath(item.path) as DocumentReference;\n      batch.update(ref, {index: i});\n      i++;\n    }\n\n    const prevArraySliceToUpdate: A[] = usedPreviousArray.slice(previousIndex);\n    i = previousIndex;\n    for (const item of prevArraySliceToUpdate) {\n      const ref = getRefFromPath(item.path) as DocumentReference;\n      batch.update(ref, {index: i});\n      i++;\n    }\n\n    return batch;\n  }\n\n  protected getBatchFromDeleteItemInIndexedDocs(array: A[]): firebase.firestore.WriteBatch {\n\n    /**\n     * Run this on collections with a fixed order using an index: number attribute;\n     * This will update that index with the index in the collectionData, so it should be sorted by index first.\n     * Basically needs to be run after a delete\n     */\n\n    const batch = this.ngFirestore.firestore.batch();\n\n    array.forEach((item, index) => {\n      if (item.index !== index) {\n        const ref = getRefFromPath(item.path) as DocumentReference;\n        batch.update(ref, {index});\n      }\n    });\n\n    return batch;\n  }\n\n  protected updateIndexAfterDeleteInIndexedDocs(array: A[]): Observable {\n    const batch = this.getBatchFromDeleteItemInIndexedDocs(array);\n    return this.batchCommit(batch);\n  }\n\n  /* ----------  DELETE -------------- */\n\n  protected delete$(docFs: AngularFirestoreDocument): Observable {\n\n    return of(null).pipe(\n      mergeMap(() => {\n        let res$: Observable;\n        res$ = from(docFs.delete());\n\n        return this.handleRes$(res$, 'delete$', {docFs}, 'Deleted', 'Failed to Delete Document').pipe(\n          take(1) /* no need to unsub*/\n        );\n      }),\n      take(1)\n    );\n  }\n\n  protected deleteMultiple$(docsFs: AngularFirestoreDocument[]): Observable {\n    const batch = this.ngFirestore.firestore.batch();\n\n    docsFs.forEach((doc) => {\n      batch.delete(doc.ref);\n    });\n\n    const res$ = this.batchCommit(batch);\n\n    return this.handleRes$(res$, 'deleteMultiple$', docsFs.map(doc => doc.ref.path), 'Deleted', 'Failed to Delete Multiple');\n  }\n\n  protected deleteMultipleByPaths$(paths: string[]): Observable {\n    const docsFs: AngularFirestoreDocument[] = [];\n\n    paths.forEach(path => {\n      docsFs.push(this.ngFirestore.doc(path));\n    });\n\n    return this.deleteMultiple$(docsFs);\n  }\n\n  protected deleteMultipleDeep$(docsFs: AngularFirestoreDocument[], subCollectionQueries: SubCollectionQuery[]): Observable {\n\n    const mainDocLists$: Array> = [];\n\n    docsFs.forEach(doc => {\n      const docList$ = this.getFirestoreDocumentsDeep$(doc, subCollectionQueries);\n      mainDocLists$.push(docList$);\n    });\n\n    return combineLatest(mainDocLists$).pipe(\n      // tap(lists => console.log(lists)),\n      map((lists: [any]) => {\n        let mainDocFsList: AngularFirestoreDocument[] = [];\n        lists.forEach(list => {\n          mainDocFsList = mainDocFsList.concat(list);\n        });\n        return mainDocFsList;\n      }),\n      // tap(lists => console.log(lists)),\n      switchMap((docFsList: AngularFirestoreDocument[]) => this.deleteMultiple$(docFsList)),\n      catchError((err) => { // TODO super ugly and I dont know why this error is thrown..still works\n        if (err === 'Document Does not exists') { return of(null); }\n        else { throw err; }\n      })\n    );\n  }\n\n  protected deleteDeep$(docFs: AngularFirestoreDocument, subCollectionQueries: SubCollectionQuery[]): Observable {\n\n    console.log('deleteDeep');\n    const res$ = this.getFirestoreDocumentsDeep$(docFs, subCollectionQueries).pipe(\n      switchMap((docList: AngularFirestoreDocument[]) => this.deleteMultiple$(docList)),\n      catchError((err) => { // TODO super ugly and I dont know why this error is thrown..still works\n        if (err === 'Document Does not exists') { return of(null); }\n        else { throw err; }\n      }),\n      take(1)\n    );\n\n    return this.handleRes$(res$, 'deleteDeep$', {docFs, subCollectionQueries}, 'Deleted', 'Failed to Delete');\n  }\n\n  protected deleteDeepByItem$(item: FirestoreItem, subCollectionQueries: SubCollectionQuery[]): Observable {\n\n    console.log('deleteDeepByItem$');\n\n    const docsFs = this.getFirestoreDocumentsFromDbItem(item, subCollectionQueries);\n\n    const res$ = this.deleteMultiple$(docsFs).pipe(\n      catchError((err) => { // TODO super ugly and I dont know why this error is thrown..still works\n        if (err === 'Document Does not exists') { return of(null); }\n        else { throw err; }\n      }),\n      take(1)\n    );\n\n    return this.handleRes$(res$,\n      'deleteDeepByItem$',\n      {item, subCollectionQueries},\n      'Deleted',\n      'Failed to Delete'\n    );\n  }\n\n  /* ----------  OTHER -------------- */\n\n\n\n  /**\n   * Returns an Observable containing a list of AngularFirestoreDocument found under the given docFs using the SubCollectionQuery[]\n   * Mainly used to delete a docFs and its sub docs\n   * @param docFs: AngularFirestoreDocument\n   * @param subCollectionQueries: SubCollectionQuery[]\n   */\n  private getFirestoreDocumentsDeep$(docFs: AngularFirestoreDocument,\n                                                              subCollectionQueries: SubCollectionQuery[]):\n    Observable {\n\n    return this.listenForDocDeep$(docFs, subCollectionQueries).pipe(\n      map(item => this.getPathsFromDbItemDeepRecursiveHelper(item, subCollectionQueries)),\n      // tap(pathList => console.log(pathList)),\n      map((pathList: A) => {\n        const docFsList: AngularFirestoreDocument[] = [];\n        pathList.forEach(path => docFsList.push(this.ngFirestore.doc(path)));\n        return docFsList;\n      }),\n      // tap(item => console.log(item)),\n    );\n  }\n\n  private getFirestoreDocumentsFromDbItem(dbItem: FirestoreItem,\n                                                                   subCollectionQueries: SubCollectionQuery[]): AngularFirestoreDocument[] {\n\n    const pathList = this.getPathsFromDbItemDeepRecursiveHelper(dbItem, subCollectionQueries);\n\n    const docFsList: AngularFirestoreDocument[] = [];\n    pathList.forEach(path => docFsList.push(this.ngFirestore.doc(path)));\n    return docFsList;\n  }\n\n  /**\n   * DO NOT CALL THIS METHOD, its meant as a support method for getDocs$\n   */\n  private getPathsFromDbItemDeepRecursiveHelper(dbItem: FirestoreItem,\n                                                                         subCollectionQueries: SubCollectionQuery[]): string[] {\n\n    // console.log(dbItem, subCollectionQueries);\n\n    let pathList: string[] = [];\n    pathList.push(dbItem.path);\n\n    subCollectionQueries.forEach(col => {\n      if (Array.isArray(dbItem[col.name])) { /* property is array so will contain multiple docs */\n\n        const docs: FirestoreItem[] = dbItem[col.name];\n        docs.forEach(d => {\n\n          if (col.subCollectionQueries) {\n            pathList = pathList.concat(this.getPathsFromDbItemDeepRecursiveHelper(d, col.subCollectionQueries));\n          } else {\n            pathList.push(d.path);\n          }\n        });\n\n      } else { /* not an array so a single doc*/\n\n        if (col.subCollectionQueries) {\n          pathList = pathList.concat(this.getPathsFromDbItemDeepRecursiveHelper(dbItem, col.subCollectionQueries));\n        } else {\n          const item = (dbItem[col.name] as FirestoreItem);\n          if (item != null && 'path' in item) {\n            pathList.push(item.path);\n          }\n          // const path = (dbItem[col.name] as FirestoreItem).path;\n        }\n\n      }\n    });\n\n    // console.log(pathList);\n\n    return pathList;\n  }\n\n  /**\n   * DO  NOT  CALL THIS METHOD, used in addDeep and updateDeep to split the data into currentDoc and subCollections\n   * Onyl goes one sub level deep;\n   */\n  private splitDataIntoCurrentDocAndSubCollections(\n    data: A,\n    subCollectionWriters?: SubCollectionWriter[]): CurrentDocSubCollectionSplit {\n\n    /* Split data into current doc and sub collections */\n    let currentDoc: { [index: string]: any; } = {};\n    const subCollections: { [index: string]: any; }  = {};\n\n    /* Check if the key is in subcollections, if not place it in currentDoc, else subCollections*/\n    for (const [key, value] of Object.entries(data)) {\n      // console.log(key, value);\n      if (subCollectionWriters) {\n        const subCollectionWriter: SubCollectionWriter = subCollectionWriters.find(subColl => subColl.name === key);\n\n        if (subCollectionWriter) {\n          subCollections[key] = value;\n        } else {\n          currentDoc[key] = value;\n        }\n      }\n      else {\n        currentDoc = data;\n      }\n    }\n\n    return {\n      currentDoc,\n      subCollections\n    } as CurrentDocSubCollectionSplit;\n  }\n\n\n\n  /**\n   * Turn a batch into an Observable instead of Promise.\n   */\n  protected batchCommit(batch: firebase.firestore.WriteBatch): Observable {\n    return of(null).pipe(\n      mergeMap(() => {\n        let res$: Observable;\n        res$ = from(batch.commit());\n\n        return this.handleRes$(res$, 'batchCommit', {batch}, 'Updated',\n                  'Failed to Update Documents').pipe(\n          // take(1) /* no need to unsub*/\n        );\n      }),\n      take(1)\n    );\n  }\n\n  protected handleRes$(result$: Observable, name: string, data: {[key: string]: any}, successMessage?: string, errorMessage?: string):\n    Observable {\n    return result$.pipe(\n      // tap(val => console.log(val)),\n      tap(() => {\n        // if (successMessage != null) { (this.snackBar.open('Success', successMessage, {duration: 1000})); }\n      }),\n      // map(() => true),\n      catchError((err: FirestoreError) => {\n        console.error(name, data, err);\n        // if (errorMessage != null) { this.snackBar.open('Error', errorMessage + '-' +  err.code, {duration: 1000}); }\n        throw err;\n      }),\n\n    );\n  }\n\n\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DbItemFull.html":{"url":"interfaces/DbItemFull.html","title":"interface - DbItemFull","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DbItemFull\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/models/firestoreItem.ts\n        \n\n\n            \n                Extends\n            \n            \n                        FirestoreItem\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                                \n                                        modifiedDate\n                                \n                                \n                                        path\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        modifiedDate\n                                    \n                                \n                                \n                                    \n                                        modifiedDate:     Date | Timestamp\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Date | Timestamp\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        path\n                                    \n                                \n                                \n                                    \n                                        path:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Observable} from 'rxjs';\nimport {AngularFirestoreDocument, DocumentData, DocumentReference} from '@angular/fire/firestore';\nimport firebase from 'firebase/app';\nimport Timestamp = firebase.firestore.Timestamp;\n\n\n/* These are never to be stored on the db, they are just added when we listen to the doc */\nexport interface FirebaseDbItem extends DocumentData {\n  id?: string;\n  path?: string;\n  ref?: DocumentReference;\n  docFs?: AngularFirestoreDocument;\n}\n\nexport interface FirestoreItem extends FirebaseDbItem {\n  modifiedDate?: Date | Timestamp;\n  createdDate?: Date | Timestamp;\n}\n\nexport interface DbItemFull extends FirestoreItem {  // attrs are required\n  id: string;\n  path: string;\n  modifiedDate: Date | Timestamp;\n}\n\nexport interface DbItemWithIndex extends FirestoreItem {\n  index: number;\n}\n\nexport interface DbItemFullWithIndex extends DbItemFull {\n  index: number;\n}\n\nexport interface StorageItem extends FirestoreItem {\n  storagePath: string;\n}\n\nexport interface ImageItem extends StorageItem  {\n  title: string;\n  fileName: string;\n  url: string;\n  thumbUrl: string;\n\n  alt?: string;\n\n  url$?: Observable;\n  thumbUrl$?: Observable;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DbItemFullWithIndex.html":{"url":"interfaces/DbItemFullWithIndex.html","title":"interface - DbItemFullWithIndex","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DbItemFullWithIndex\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/models/firestoreItem.ts\n        \n\n\n            \n                Extends\n            \n            \n                        DbItemFull\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        index\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        index\n                                    \n                                \n                                \n                                    \n                                        index:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Observable} from 'rxjs';\nimport {AngularFirestoreDocument, DocumentData, DocumentReference} from '@angular/fire/firestore';\nimport firebase from 'firebase/app';\nimport Timestamp = firebase.firestore.Timestamp;\n\n\n/* These are never to be stored on the db, they are just added when we listen to the doc */\nexport interface FirebaseDbItem extends DocumentData {\n  id?: string;\n  path?: string;\n  ref?: DocumentReference;\n  docFs?: AngularFirestoreDocument;\n}\n\nexport interface FirestoreItem extends FirebaseDbItem {\n  modifiedDate?: Date | Timestamp;\n  createdDate?: Date | Timestamp;\n}\n\nexport interface DbItemFull extends FirestoreItem {  // attrs are required\n  id: string;\n  path: string;\n  modifiedDate: Date | Timestamp;\n}\n\nexport interface DbItemWithIndex extends FirestoreItem {\n  index: number;\n}\n\nexport interface DbItemFullWithIndex extends DbItemFull {\n  index: number;\n}\n\nexport interface StorageItem extends FirestoreItem {\n  storagePath: string;\n}\n\nexport interface ImageItem extends StorageItem  {\n  title: string;\n  fileName: string;\n  url: string;\n  thumbUrl: string;\n\n  alt?: string;\n\n  url$?: Observable;\n  thumbUrl$?: Observable;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DbItemWithIndex.html":{"url":"interfaces/DbItemWithIndex.html","title":"interface - DbItemWithIndex","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DbItemWithIndex\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/models/firestoreItem.ts\n        \n\n\n            \n                Extends\n            \n            \n                        FirestoreItem\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        index\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        index\n                                    \n                                \n                                \n                                    \n                                        index:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Observable} from 'rxjs';\nimport {AngularFirestoreDocument, DocumentData, DocumentReference} from '@angular/fire/firestore';\nimport firebase from 'firebase/app';\nimport Timestamp = firebase.firestore.Timestamp;\n\n\n/* These are never to be stored on the db, they are just added when we listen to the doc */\nexport interface FirebaseDbItem extends DocumentData {\n  id?: string;\n  path?: string;\n  ref?: DocumentReference;\n  docFs?: AngularFirestoreDocument;\n}\n\nexport interface FirestoreItem extends FirebaseDbItem {\n  modifiedDate?: Date | Timestamp;\n  createdDate?: Date | Timestamp;\n}\n\nexport interface DbItemFull extends FirestoreItem {  // attrs are required\n  id: string;\n  path: string;\n  modifiedDate: Date | Timestamp;\n}\n\nexport interface DbItemWithIndex extends FirestoreItem {\n  index: number;\n}\n\nexport interface DbItemFullWithIndex extends DbItemFull {\n  index: number;\n}\n\nexport interface StorageItem extends FirestoreItem {\n  storagePath: string;\n}\n\nexport interface ImageItem extends StorageItem  {\n  title: string;\n  fileName: string;\n  url: string;\n  thumbUrl: string;\n\n  alt?: string;\n\n  url$?: Observable;\n  thumbUrl$?: Observable;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FirebaseDbItem.html":{"url":"interfaces/FirebaseDbItem.html","title":"interface - FirebaseDbItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FirebaseDbItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/models/firestoreItem.ts\n        \n\n\n            \n                Extends\n            \n            \n                    DocumentData\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        docFs\n                                \n                                \n                                            Optional\n                                        id\n                                \n                                \n                                            Optional\n                                        path\n                                \n                                \n                                            Optional\n                                        ref\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        docFs\n                                    \n                                \n                                \n                                    \n                                        docFs:     AngularFirestoreDocument\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     AngularFirestoreDocument\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        path\n                                    \n                                \n                                \n                                    \n                                        path:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ref\n                                    \n                                \n                                \n                                    \n                                        ref:     DocumentReference\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     DocumentReference\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Observable} from 'rxjs';\nimport {AngularFirestoreDocument, DocumentData, DocumentReference} from '@angular/fire/firestore';\nimport firebase from 'firebase/app';\nimport Timestamp = firebase.firestore.Timestamp;\n\n\n/* These are never to be stored on the db, they are just added when we listen to the doc */\nexport interface FirebaseDbItem extends DocumentData {\n  id?: string;\n  path?: string;\n  ref?: DocumentReference;\n  docFs?: AngularFirestoreDocument;\n}\n\nexport interface FirestoreItem extends FirebaseDbItem {\n  modifiedDate?: Date | Timestamp;\n  createdDate?: Date | Timestamp;\n}\n\nexport interface DbItemFull extends FirestoreItem {  // attrs are required\n  id: string;\n  path: string;\n  modifiedDate: Date | Timestamp;\n}\n\nexport interface DbItemWithIndex extends FirestoreItem {\n  index: number;\n}\n\nexport interface DbItemFullWithIndex extends DbItemFull {\n  index: number;\n}\n\nexport interface StorageItem extends FirestoreItem {\n  storagePath: string;\n}\n\nexport interface ImageItem extends StorageItem  {\n  title: string;\n  fileName: string;\n  url: string;\n  thumbUrl: string;\n\n  alt?: string;\n\n  url$?: Observable;\n  thumbUrl$?: Observable;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FirestoreItem.html":{"url":"interfaces/FirestoreItem.html","title":"interface - FirestoreItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FirestoreItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/models/firestoreItem.ts\n        \n\n\n            \n                Extends\n            \n            \n                        FirebaseDbItem\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        createdDate\n                                \n                                \n                                            Optional\n                                        modifiedDate\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        createdDate\n                                    \n                                \n                                \n                                    \n                                        createdDate:     Date | Timestamp\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Date | Timestamp\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        modifiedDate\n                                    \n                                \n                                \n                                    \n                                        modifiedDate:     Date | Timestamp\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Date | Timestamp\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Observable} from 'rxjs';\nimport {AngularFirestoreDocument, DocumentData, DocumentReference} from '@angular/fire/firestore';\nimport firebase from 'firebase/app';\nimport Timestamp = firebase.firestore.Timestamp;\n\n\n/* These are never to be stored on the db, they are just added when we listen to the doc */\nexport interface FirebaseDbItem extends DocumentData {\n  id?: string;\n  path?: string;\n  ref?: DocumentReference;\n  docFs?: AngularFirestoreDocument;\n}\n\nexport interface FirestoreItem extends FirebaseDbItem {\n  modifiedDate?: Date | Timestamp;\n  createdDate?: Date | Timestamp;\n}\n\nexport interface DbItemFull extends FirestoreItem {  // attrs are required\n  id: string;\n  path: string;\n  modifiedDate: Date | Timestamp;\n}\n\nexport interface DbItemWithIndex extends FirestoreItem {\n  index: number;\n}\n\nexport interface DbItemFullWithIndex extends DbItemFull {\n  index: number;\n}\n\nexport interface StorageItem extends FirestoreItem {\n  storagePath: string;\n}\n\nexport interface ImageItem extends StorageItem  {\n  title: string;\n  fileName: string;\n  url: string;\n  thumbUrl: string;\n\n  alt?: string;\n\n  url$?: Observable;\n  thumbUrl$?: Observable;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ImageItem.html":{"url":"interfaces/ImageItem.html","title":"interface - ImageItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ImageItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/models/firestoreItem.ts\n        \n\n\n            \n                Extends\n            \n            \n                        StorageItem\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        alt\n                                \n                                \n                                        fileName\n                                \n                                \n                                        thumbUrl\n                                \n                                \n                                            Optional\n                                        thumbUrl$\n                                \n                                \n                                        title\n                                \n                                \n                                        url\n                                \n                                \n                                            Optional\n                                        url$\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        alt\n                                    \n                                \n                                \n                                    \n                                        alt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fileName\n                                    \n                                \n                                \n                                    \n                                        fileName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        thumbUrl\n                                    \n                                \n                                \n                                    \n                                        thumbUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        thumbUrl$\n                                    \n                                \n                                \n                                    \n                                        thumbUrl$:     Observable\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Observable\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url$\n                                    \n                                \n                                \n                                    \n                                        url$:     Observable\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Observable\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Observable} from 'rxjs';\nimport {AngularFirestoreDocument, DocumentData, DocumentReference} from '@angular/fire/firestore';\nimport firebase from 'firebase/app';\nimport Timestamp = firebase.firestore.Timestamp;\n\n\n/* These are never to be stored on the db, they are just added when we listen to the doc */\nexport interface FirebaseDbItem extends DocumentData {\n  id?: string;\n  path?: string;\n  ref?: DocumentReference;\n  docFs?: AngularFirestoreDocument;\n}\n\nexport interface FirestoreItem extends FirebaseDbItem {\n  modifiedDate?: Date | Timestamp;\n  createdDate?: Date | Timestamp;\n}\n\nexport interface DbItemFull extends FirestoreItem {  // attrs are required\n  id: string;\n  path: string;\n  modifiedDate: Date | Timestamp;\n}\n\nexport interface DbItemWithIndex extends FirestoreItem {\n  index: number;\n}\n\nexport interface DbItemFullWithIndex extends DbItemFull {\n  index: number;\n}\n\nexport interface StorageItem extends FirestoreItem {\n  storagePath: string;\n}\n\nexport interface ImageItem extends StorageItem  {\n  title: string;\n  fileName: string;\n  url: string;\n  thumbUrl: string;\n\n  alt?: string;\n\n  url$?: Observable;\n  thumbUrl$?: Observable;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StorageItem.html":{"url":"interfaces/StorageItem.html","title":"interface - StorageItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  StorageItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/models/firestoreItem.ts\n        \n\n\n            \n                Extends\n            \n            \n                        FirestoreItem\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        storagePath\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        storagePath\n                                    \n                                \n                                \n                                    \n                                        storagePath:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Observable} from 'rxjs';\nimport {AngularFirestoreDocument, DocumentData, DocumentReference} from '@angular/fire/firestore';\nimport firebase from 'firebase/app';\nimport Timestamp = firebase.firestore.Timestamp;\n\n\n/* These are never to be stored on the db, they are just added when we listen to the doc */\nexport interface FirebaseDbItem extends DocumentData {\n  id?: string;\n  path?: string;\n  ref?: DocumentReference;\n  docFs?: AngularFirestoreDocument;\n}\n\nexport interface FirestoreItem extends FirebaseDbItem {\n  modifiedDate?: Date | Timestamp;\n  createdDate?: Date | Timestamp;\n}\n\nexport interface DbItemFull extends FirestoreItem {  // attrs are required\n  id: string;\n  path: string;\n  modifiedDate: Date | Timestamp;\n}\n\nexport interface DbItemWithIndex extends FirestoreItem {\n  index: number;\n}\n\nexport interface DbItemFullWithIndex extends DbItemFull {\n  index: number;\n}\n\nexport interface StorageItem extends FirestoreItem {\n  storagePath: string;\n}\n\nexport interface ImageItem extends StorageItem  {\n  title: string;\n  fileName: string;\n  url: string;\n  thumbUrl: string;\n\n  alt?: string;\n\n  url$?: Observable;\n  thumbUrl$?: Observable;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SubCollectionQuery.html":{"url":"classes/SubCollectionQuery.html","title":"class - SubCollectionQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SubCollectionQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/sub-collection-query.ts\n        \n\n            \n                Description\n            \n            \n                For Listening to a Document and multiple sub Collections in that Document\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                docId\n                            \n                            \n                                name\n                            \n                            \n                                    Optional\n                                queryFn\n                            \n                            \n                                    Optional\n                                subCollectionQueries\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            docId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/sub-collection-query.ts:15\n                            \n                        \n\n                \n                    \n                        Specified Document name if multiple documents in collection is not used \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/sub-collection-query.ts:12\n                            \n                        \n\n                \n                    \n                        the name of the subCollection to be read. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            queryFn\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     QueryFn\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/sub-collection-query.ts:29\n                            \n                        \n\n                \n                    \n                        The Collection QueryFn.\nExample:\nconst query = ref.where('type', '==', 'Book')\n                  .where('price', '>' 18.00)\n                  .where('price', '\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            subCollectionQueries\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SubCollectionQuery[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/sub-collection-query.ts:33\n                            \n                        \n\n                \n                    \n                        Any SubCollections to be read in the Collection \n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {QueryFn} from '@angular/fire/firestore/interfaces';\n\n/* For Listening to a Doc and multiple sub collections in that doc */\n\n/**\n * For Listening to a Document and multiple sub Collections in that Document\n */\n\nexport class SubCollectionQuery {\n\n  /** the name of the subCollection to be read. */\n  name: string;\n\n  /** Specified Document name if multiple documents in collection is not used */\n  docId?: string;\n\n  /**\n   *\n   * The Collection QueryFn.\n   *\n   * Example:\n   * const query = ref.where('type', '==', 'Book')\n   *                  .where('price', '>' 18.00)\n   *                  .where('price', '\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SubCollectionWriter.html":{"url":"classes/SubCollectionWriter.html","title":"class - SubCollectionWriter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SubCollectionWriter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/sub-collection-writer.ts\n        \n\n            \n                Description\n            \n            \n                The ability to place docs and collection n deep but also flatten the it in order to reduce reads.\nIt becomes a balance between speed and economy. Since multiple docs can be read simultaneously but will cost more.\nThese classes aim to make it easy to control that.\nAllows you to have a complex deep object and write it to firestore by splitting it up in to collections and documents.\nExample restaurant object that we wish to save to firestore.\nconst restaurant = {\n   name: 'example restaurant',\n   address: {\n      zipcode: 12345,\n      city: 'example city',\n      line1: '12 example rd'\n   },\n   dishes: [\n     {\n       name: 'dish1',\n       images: [\n         {url: example.jpg},\n         {url: example2.jpg}\n       ]\n     },\n     {\n       name: 'dish2',\n       images: [\n         {url: example.jpg},\n         {url: example2.jpg}\n       ]\n     }\n   ]\n   reviews: [\n     {\n        score: 5\n        text: 'decent food'\n     },\n     {\n        score: 8\n        text: 'good food'\n     },\n   ]\n}  You would be able to save this data 'as is' to a single firestore document using arrays and maps.\n  The problem comes when you later on wish to add/delete or alter an image of dish.\n  Another issue is that you might have thousands of reviews and since they are all saved in the same document.\n  If for example you wish to show a list of all restaurants and all you want to show is the name before a user clicks\n  the restaurant you would still have to download the entire restaurant object containing all those thousands of reviews.\n  This would be ok in terms of cost of reads but very expensive in terms of performance.\n  Each restaurant object would be huge, killing the user's data plan and slowing down your site.\n  It would be much better to make reviews a collection inside restaurant. That way you could show the restaurant name\n  without downloading all the reviews.\n  If you wish to show an average review score the most efficient way would be to to calculate that\n  each time you update the review collection and adding the average to the restaurant document.\n  What this wrapper intends to do is to simplify saving some data in sub collections without changing the way you\n  work with the data.\n  So you could have a restaurant object that contains all the data and when you add it to firestore the data is automatically\n  placed in your sub collections without you having to worry about it after you initially set it up.\n  Another huge advantage to separating your data in to sub collections is that it allows you to choose between\n  performance and cost.\n  Saving the data to one large document would save your firestore read/writes and could potentially make a big difference\n  in terms of cost depending on your application.\n  But it would also slow it down as explained above.\n  Splitting your data up in to sub collections allows you to asyncronously read/write those collections at the same time.\n  So if you compare one large document and a small document with 4 subcollections of about equal size.\n  It would require 5 firestore reads instead of 1 if each sub collection contains 1 document.\n  But the speed could also potentially be 5X faster since all those parts are read at the same time.\n  Using SubCollectionWriters and SubCollectionQueries allows you to create the perfect compromise between\n  ease of working with the firestore database, cost and performance.\n\naddress (collection)\nreviews (collection)\ndishes (collection)\nimages (collection)\n\n\n\n\n            \n\n\n\n            \n                Example\n            \n            \n                        \n                            const subCollectionWriters: SubCollectionWriter[] = [\n{ name: 'data' },\n{\nname: 'images',\ndocId: 'data',  // images is an array but since a docId is given it be saved in a single doc\n},\n{\nname: 'variants',\nsubCollectionWriters: [  // sub collection inside a sub collection\n{ name: 'otherData'}\n]\n}\n];\n                        \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                docId\n                            \n                            \n                                    Optional\n                                isFlat\n                            \n                            \n                                name\n                            \n                            \n                                    Optional\n                                subCollectionWriters\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            docId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/sub-collection-writer.ts:109\n                            \n                        \n\n                \n                    \n                        if the data to be written is an array and a docId is given the array is saved as single document under that docId.\n                  if not docId is given the array will be saved as individual documents with random names.\n                  if no docId is given and the data is an object a single document will be created using a default name\n                  i.e this.defaultDocId\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            isFlat\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/sub-collection-writer.ts:117\n                            \n                        \n\n                \n                    \n                        if true then the next level subCollectionWriters will be placed at the same level as this with a reference back\nto the linked data, good for secure subcols\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/sub-collection-writer.ts:102\n                            \n                        \n\n                \n                    \n                        the name of the subCollection to be created. If a key in the data to be written is the same as this name it will be\nsaved separately in a sub collection.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            subCollectionWriters\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SubCollectionWriter[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/sub-collection-writer.ts:112\n                            \n                        \n\n                \n                    \n                        each collection can contain other sub collections \n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class SubCollectionWriter {\n  /** the name of the subCollection to be created. If a key in the data to be written is the same as this name it will be\n   * saved separately in a sub collection.\n   */\n  name: string;\n\n  /** if the data to be written is an array and a docId is given the array is saved as single document under that docId.\n   *                    if not docId is given the array will be saved as individual documents with random names.\n   *                    if no docId is given and the data is an object a single document will be created using a default name\n   *                    i.e this.defaultDocId\n   */\n  docId?: string;\n\n  /** each collection can contain other sub collections */\n  subCollectionWriters?: SubCollectionWriter[]; // sub/sub collections\n\n  /** if true then the next level subCollectionWriters will be placed at the same level as this with a reference back\n   * to the linked data, good for secure subcols\n   */\n  isFlat?: boolean = false;\n}\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/lib/angularfirestore-helpers.ts\n            \n            function\n            addCreatedBy\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/lib/angularfirestore-helpers.ts\n            \n            function\n            addCreatedDate\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/lib/angularfirestore-helpers.ts\n            \n            function\n            addModifiedDate\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/lib/angularfirestore-helpers.ts\n            \n            function\n            convertTimestampToDate\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/angularfirestore-helpers.ts\n            \n            function\n            getCollectionFsFromPath\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/lib/angularfirestore-helpers.ts\n            \n            function\n            getDocFsFromPath\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/lib/angularfirestore-helpers.ts\n            \n            function\n            getDocFsFromRef\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/lib/angularfirestore-helpers.ts\n            \n            function\n            getParentDocFsFromPath\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/lib/angularfirestore-helpers.ts\n            \n            function\n            getRefFromPath\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/lib/angularfirestore-helpers.ts\n            \n            function\n            isDocExist$\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/lib/angularfirestore-wrapper.ts\n            \n            class\n            AngularFirestoreWrapper\n            \n                33 %\n                (12/36)\n            \n        \n        \n            \n                \n                src/lib/angularfirestore-wrapper.ts\n            \n            interface\n            AddDocumentWrapper\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/lib/angularfirestore-wrapper.ts\n            \n            interface\n            CurrentDocSubCollectionSplit\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/lib/models/firestoreItem.ts\n            \n            interface\n            DbItemFull\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/lib/models/firestoreItem.ts\n            \n            interface\n            DbItemFullWithIndex\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/lib/models/firestoreItem.ts\n            \n            interface\n            DbItemWithIndex\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/lib/models/firestoreItem.ts\n            \n            interface\n            FirebaseDbItem\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/lib/models/firestoreItem.ts\n            \n            interface\n            FirestoreItem\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/lib/models/firestoreItem.ts\n            \n            interface\n            ImageItem\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/lib/models/firestoreItem.ts\n            \n            interface\n            StorageItem\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/lib/sub-collection-query.ts\n            \n            class\n            SubCollectionQuery\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/lib/sub-collection-writer.ts\n            \n            class\n            SubCollectionWriter\n            \n                100 %\n                (5/5)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            tslib : ^2.0.0\n    \n\n\n    \n    \n        Peer dependencies\n    \n    \n        \n            @angular/cdk : >=11\n        \n            @angular/fire : >=6.x\n        \n            firebase : >=8.6.1\n    \n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            DocNotExistAction   (src/.../angularfirestore-wrapper.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/angularfirestore-wrapper.ts\n    \n        \n            \n                \n                    \n                        \n                        DocNotExistAction\n                    \n                \n                        \n                            \n                                 RETURN_NULL\n                            \n                        \n                        \n                            \n                                 RETURN_ALL_BUT_DATA\n                            \n                        \n                        \n                            \n                                 FILTER\n                            \n                        \n                        \n                            \n                                 THROW_DOC_NOT_FOUND\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            addCreatedBy   (src/.../angularfirestore-helpers.ts)\n                        \n                        \n                            addCreatedDate   (src/.../angularfirestore-helpers.ts)\n                        \n                        \n                            addModifiedDate   (src/.../angularfirestore-helpers.ts)\n                        \n                        \n                            convertTimestampToDate   (src/.../angularfirestore-helpers.ts)\n                        \n                        \n                            getCollectionFsFromPath   (src/.../angularfirestore-helpers.ts)\n                        \n                        \n                            getDocFsFromPath   (src/.../angularfirestore-helpers.ts)\n                        \n                        \n                            getDocFsFromRef   (src/.../angularfirestore-helpers.ts)\n                        \n                        \n                            getParentDocFsFromPath   (src/.../angularfirestore-helpers.ts)\n                        \n                        \n                            getRefFromPath   (src/.../angularfirestore-helpers.ts)\n                        \n                        \n                            isDocExist$   (src/.../angularfirestore-helpers.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/angularfirestore-helpers.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            addCreatedBy\n                        \n                        \n                    \n                \n            \n            \n                \naddCreatedBy(data, createdBy: any)\n                \n            \n\n\n\n\n            \n                \n                    Add createdBy to the object\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    createdBy\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        profile, user or any type of data\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     A\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addCreatedDate\n                        \n                        \n                    \n                \n            \n            \n                \naddCreatedDate(data)\n                \n            \n\n\n\n\n            \n                \n                    Add createdDate to the object \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     A\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addModifiedDate\n                        \n                        \n                    \n                \n            \n            \n                \naddModifiedDate(data)\n                \n            \n\n\n\n\n            \n                \n                    Add modifiedDate to the object \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     A\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            convertTimestampToDate\n                        \n                        \n                    \n                \n            \n            \n                \nconvertTimestampToDate(data)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     A\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getCollectionFsFromPath\n                        \n                        \n                    \n                \n            \n            \n                \ngetCollectionFsFromPath(path)\n                \n            \n\n\n\n\n            \n                \n                    If given the path to a Document it returns the parent AngularFirestoreCollection,\nif given a path to a collection it just turns it into a AngularFirestoreCollection\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     AngularFirestoreCollection\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getDocFsFromPath\n                        \n                        \n                    \n                \n            \n            \n                \ngetDocFsFromPath(path)\n                \n            \n\n\n\n\n            \n                \n                    Get AngularFirestoreDocument from path \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     AngularFirestoreDocument\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getDocFsFromRef\n                        \n                        \n                    \n                \n            \n            \n                \ngetDocFsFromRef(ref)\n                \n            \n\n\n\n\n            \n                \n                    Get the AngularFirestoreDocument object for a firestore DocumentReference \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ref\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     AngularFirestoreDocument\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getParentDocFsFromPath\n                        \n                        \n                    \n                \n            \n            \n                \ngetParentDocFsFromPath(path)\n                \n            \n\n\n\n\n            \n                \n                    Returns the next higher level doc from either a collection or a doc path \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     AngularFirestoreDocument\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getRefFromPath\n                        \n                        \n                    \n                \n            \n            \n                \ngetRefFromPath(path)\n                \n            \n\n\n\n\n            \n                \n                    Helper method to get reference from path, the path can be either to a Document or Collection \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     DocumentReference | CollectionReference\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isDocExist$\n                        \n                        \n                    \n                \n            \n            \n                \nisDocExist$(docFs)\n                \n            \n\n\n\n\n            \n                \n                    Simple check if Document exists, returns true if Document exist \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    docFs\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nAngularfirestoreWrapper\nThis library was generated with Angular CLI version 11.1.2.\nCode scaffolding\nRun ng generate component component-name --project angularfirestore-deep to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module --project angularfirestore-deep.\n\nNote: Don't forget to add --project angularfirestore-deep or else it will be added to the default project in your angular.json file. \n\nBuild\nRun ng build angularfirestore-deep to build the project. The build artifacts will be stored in the dist/ directory.\nPublishing\nAfter building your library with ng build angularfirestore-deep, go to the dist folder cd dist/angularfirestore-deep and run npm publish.\nRunning unit tests\nRun ng test angularfirestore-deep to execute the unit tests via Karma.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2016 compodoc\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AngularfirestoreWrapperModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    3 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    9 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
